<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hesy-zhoulijie.github.io</id>
    <title>周立杰的博客</title>
    <updated>2020-10-05T05:39:05.544Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hesy-zhoulijie.github.io"/>
    <link rel="self" href="https://hesy-zhoulijie.github.io/atom.xml"/>
    <subtitle>欢迎来到周立杰的博客
&lt;a href=&quot;sweepy.cnblogs.com&quot;&gt;博客园链接&lt;/a&gt;</subtitle>
    <logo>https://hesy-zhoulijie.github.io/images/avatar.png</logo>
    <icon>https://hesy-zhoulijie.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 周立杰的博客</rights>
    <entry>
        <title type="html"><![CDATA[浅谈几类背包题 ]]></title>
        <id>https://hesy-zhoulijie.github.io/post/pack/</id>
        <link href="https://hesy-zhoulijie.github.io/post/pack/">
        </link>
        <updated>2020-10-05T05:31:14.000Z</updated>
        <content type="html"><![CDATA[<h1 id="浅谈几类背包题">浅谈几类背包题</h1>
<ul>
<li><a href="#%E6%B5%85%E8%B0%88%E5%87%A0%E7%B1%BB%E8%83%8C%E5%8C%85%E9%A2%98">浅谈几类背包题</a>
<ul>
<li><a href="#%E6%91%98%E8%A6%81">摘要</a></li>
<li><a href="#%E5%85%B3%E9%94%AE%E5%AD%97">关键字</a></li>
<li><a href="#%E6%AD%A3%E6%96%87">正文</a>
<ul>
<li><a href="#%E4%B8%80-%E5%BC%95%E8%A8%80">一、 引言</a></li>
<li><a href="#%E4%BA%8C-%E8%83%8C%E5%8C%85%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8F%98%E6%8D%A2">二、 背包的基本变换</a>
<ul>
<li><a href="#1-%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85">1. 完全背包</a></li>
<li><a href="#2-%E5%A4%9A%E6%AC%A1%E8%83%8C%E5%8C%85">2. 多次背包</a></li>
</ul>
</li>
<li><a href="#%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%E4%BC%98%E5%8C%96">单调队列优化☆</a></li>
</ul>
</li>
<li><a href="#%E4%B8%89-%E5%85%B6%E4%BB%96%E5%87%A0%E7%B1%BB%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98">三、 其他几类背包问题</a>
<ul>
<li><a href="#1-%E6%A0%91%E5%BD%A2%E4%BE%9D%E8%B5%96%E8%83%8C%E5%8C%85%E9%80%89%E8%AF%BE">1. 树形依赖背包（选课）☆</a></li>
<li><a href="#2-pku3093">2. PKU3093☆</a></li>
</ul>
</li>
<li><a href="#%E5%9B%9B-%E6%80%BB%E7%BB%93">四、 总结</a></li>
</ul>
</li>
</ul>
<h2 id="摘要">摘要</h2>
<p>背包问题作为一个经典问题在动态规划中是很基础的一个部分，然而以 0-1 背包问题为原题，衍生转变出的各类题目，可以说是千变万化，当然解法也各有不同，如此就有了继续探究的价值。 本文就 4 道背包变化的题做一些探讨研究，提出本人的一些做法，希望能起到抛砖引玉的作用。</p>
<h2 id="关键字">关键字</h2>
<p>动态规划 背包 优化</p>
<h2 id="正文">正文</h2>
<h3 id="一-引言">一、 引言</h3>
<p>背包问题是运筹学中的一个经典的优化难题，是一个 NP-完全问题，但其有 着广泛的实际应用背景，是从生活中一个常见的问题出发展开的： 一个背包，和很多件物品，要在背包中放一些物品，以达到一定的目标。</p>
<p>在信息学中，把所有的数据都量化处理后，得到这样的一个问题： 0-1 背包问题：给定 n 件物品和一个背包。物品 i 的价值是 Wi ，其体积为 Vi，背包 的容量为 C。可以任意选择装入背包中的物品，求装入背包中物品的最大总价值。</p>
<p>在选择装入背包的物品时，对每件物品 i ，要么装入背包，要么不装入背包。 不能将物品 i 多次装入背包，也不能只装入部分物品 i （分割物品 i）。 因此，该 问题称为 0-1 背包问题。 用于求解 0-1 背包问题的方法主要有回溯算法、贪婪算法、遗传算法、禁忌 搜索算法、模拟退火算法等。</p>
<p>在高中阶段，我们所谓的经典 0-1 背包问题，保证了所有量化后的数据均为 正整数，即是一个特殊的整数规划问题，本文中如无特殊说明均以此为前提。其 经典的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>∗</mo><mi>C</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n*C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span>动规解法是： 状态是在前 i 件物品中，选取若干件物品其体积总和不大于 j，所能获得的最大价值为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub><mo>[</mo><mi>j</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">F_i[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>，当前的决策是第 i 件物品放或者不放，最终得到转移方程：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub><mo>[</mo><mi>j</mi><mo>]</mo><mo>=</mo><msub><mi>F</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>[</mo><mi>j</mi><mo>]</mo><mstyle mathcolor="yellow"><mspace width="1em"/><mrow><mo fence="true">(</mo><mrow><msub><mi mathvariant="normal">V</mi><mi mathvariant="normal">i</mi></msub><mo>&gt;</mo><mi mathvariant="normal">j</mi><mo>≥</mo><mn>0</mn></mrow><mo fence="true">)</mo></mrow></mstyle></mrow><annotation encoding="application/x-tex">F_i[j] = F_{i-1}[j] \color{yellow}\quad \left( \rm V_i &gt; j\ge 0\right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="color:yellow;margin-right:1em;"></span><span class="minner" style="color:yellow;"><span class="mopen delimcenter" style="color:yellow;top:0em;"><span style="color:yellow;">(</span></span><span class="mord" style="color:yellow;"><span class="mord" style="color:yellow;"><span class="mord mathrm" style="margin-right:0.01389em;color:yellow;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:-0.01389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:yellow;"><span class="mord mathrm mtight" style="color:yellow;">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="color:yellow;margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">&gt;</span><span class="mspace" style="color:yellow;margin-right:0.2777777777777778em;"></span><span class="mord mathrm" style="color:yellow;">j</span><span class="mspace" style="color:yellow;margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="color:yellow;margin-right:0.2777777777777778em;"></span><span class="mord mathrm" style="color:yellow;">0</span></span><span class="mclose delimcenter" style="color:yellow;top:0em;"><span style="color:yellow;">)</span></span></span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub><mo>[</mo><mi>j</mi><mo>]</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo>{</mo><msub><mi>F</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>[</mo><mi>j</mi><mo>]</mo><mo separator="true">,</mo><msub><mi>F</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>[</mo><mi>j</mi><mo>−</mo><mrow><msub><mi mathvariant="normal">V</mi><mi mathvariant="normal">i</mi></msub><mo>]</mo><mo>+</mo><msub><mi mathvariant="normal">W</mi><mi mathvariant="normal">i</mi></msub><mo>}</mo><mspace width="1em"/><mstyle mathcolor="yellow"><mo>(</mo><mi mathvariant="normal">C</mi><mo>≥</mo><mi mathvariant="normal">j</mi><mo>≥</mo><msub><mi mathvariant="normal">V</mi><mi mathvariant="normal">i</mi></msub><mo>)</mo></mstyle></mrow></mrow><annotation encoding="application/x-tex">F_i[j] = \max\{F_{i-1}[j],F_{i-1}[j-\rm{V_i}]+W_i \}\quad \color{yellow}(C\ge j\ge V_i)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:-0.01389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathrm mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:-0.01389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathrm mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mspace" style="margin-right:1em;"></span><span class="mopen" style="color:yellow;">(</span><span class="mord mathrm" style="color:yellow;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathrm" style="color:yellow;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord" style="color:yellow;"><span class="mord mathrm" style="margin-right:0.01389em;color:yellow;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:-0.01389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:yellow;"><span class="mord mathrm mtight" style="color:yellow;">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose" style="color:yellow;">)</span></span></span></span></span></span></p>
<p>其中由于 Fi只与 Fi-1 有关，可以用滚动数组来节省程序的空间复杂度。以下 就是经典算法的伪代码。</p>
<pre><code class="language-pascal">FOR i: = 1 TO n
    FOR j: = C DOWNTO V_i
        MAX (F[j],F[j-V_i]+W_i)
    END FOR
END FOR
</code></pre>
<h3 id="二-背包的基本变换">二、 背包的基本变换</h3>
<h4 id="1-完全背包">1. 完全背包</h4>
<p>完全背包问题：<br>
给定 n 种物品和一个背包。第 i 种物品的价值是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">W_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，其体积为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">V_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，背包的容量为 C，同一种物品的数量无限多。可以任意选择装入背包中的物品， 求装入背包中物品的最大总价值。</p>
<p>这个问题完全可以转化为 0-1 背包问题来解决，即把第 i 种物品分割成 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>C</mi><mi>d</mi><mi>i</mi><mi>v</mi><mi>V</mi><mi>i</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">(C div Vi)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">i</span><span class="mclose">)</span></span></span></span>件物品，再用 0-1 背包问题的经典动规实现。 但是，这个算法的时间复杂度太高，并不能作为一种实用的方法来实现。</p>
<p>很容易注意到，这个问题对于 0-1 背包来说，是另一个极端，每种物 品都可以无限制地取，只要改变转移方程，就可以构造出新的算法： 状态是在前 i 种物品中，选取若干件物品其体积总和不大于 j，所能获得的最大 价值为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub><mo>[</mo><mi>j</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">F_i[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>，当前的决策是第 i 件物品放（多件）或者不放，转移方程是</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub><mo>[</mo><mi>j</mi><mo>]</mo><mo>=</mo><msub><mi>F</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>[</mo><mi>j</mi><mo>]</mo><mstyle mathcolor="yellow"><mspace width="1em"/><mrow><mo fence="true">(</mo><mrow><msub><mi mathvariant="normal">V</mi><mi mathvariant="normal">i</mi></msub><mo>&gt;</mo><mi mathvariant="normal">j</mi><mo>≥</mo><mn>0</mn></mrow><mo fence="true">)</mo></mrow></mstyle></mrow><annotation encoding="application/x-tex">F_i[j] = F_{i-1}[j] \color{yellow}\quad \left( \rm V_i &gt; j\ge 0\right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="color:yellow;margin-right:1em;"></span><span class="minner" style="color:yellow;"><span class="mopen delimcenter" style="color:yellow;top:0em;"><span style="color:yellow;">(</span></span><span class="mord" style="color:yellow;"><span class="mord" style="color:yellow;"><span class="mord mathrm" style="margin-right:0.01389em;color:yellow;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:-0.01389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:yellow;"><span class="mord mathrm mtight" style="color:yellow;">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="color:yellow;margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">&gt;</span><span class="mspace" style="color:yellow;margin-right:0.2777777777777778em;"></span><span class="mord mathrm" style="color:yellow;">j</span><span class="mspace" style="color:yellow;margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="color:yellow;margin-right:0.2777777777777778em;"></span><span class="mord mathrm" style="color:yellow;">0</span></span><span class="mclose delimcenter" style="color:yellow;top:0em;"><span style="color:yellow;">)</span></span></span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub><mo>[</mo><mi>j</mi><mo>]</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo>{</mo><msub><mi>F</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>[</mo><mi>j</mi><mo>]</mo><mo separator="true">,</mo><msub><mi>F</mi><mi>i</mi></msub><mo>[</mo><mi>j</mi><mo>−</mo><mrow><msub><mi mathvariant="normal">V</mi><mi mathvariant="normal">i</mi></msub><mo>]</mo><mo>+</mo><msub><mi mathvariant="normal">W</mi><mi mathvariant="normal">i</mi></msub><mo>}</mo><mspace width="1em"/><mstyle mathcolor="yellow"><mo>(</mo><mi mathvariant="normal">C</mi><mo>≥</mo><mi mathvariant="normal">j</mi><mo>≥</mo><msub><mi mathvariant="normal">V</mi><mi mathvariant="normal">i</mi></msub><mo>)</mo></mstyle></mrow></mrow><annotation encoding="application/x-tex">F_i[j] = \max\{F_{i-1}[j],F_{i}[j-\rm{V_i}]+W_i \}\quad \color{yellow}(C\ge j\ge V_i)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:-0.01389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathrm mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:-0.01389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathrm mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mspace" style="margin-right:1em;"></span><span class="mopen" style="color:yellow;">(</span><span class="mord mathrm" style="color:yellow;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathrm" style="color:yellow;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord" style="color:yellow;"><span class="mord mathrm" style="margin-right:0.01389em;color:yellow;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:-0.01389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:yellow;"><span class="mord mathrm mtight" style="color:yellow;">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose" style="color:yellow;">)</span></span></span></span></span></span></p>
<p>//注意第二个是 Fi而不是 Fi-1，与 0-1 背包区别仅在于此，因为允许在放过的基础上再增加一件。</p>
<p>这样，这个问题就有了与 0-1 背包一样时间复杂度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>∗</mo><mi>C</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n*C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span>的解决方法， 同样的可以用滚动数组来实现。</p>
<pre><code class="language-pascal">FOR i: = 1 TO n
    FOR  j: =V_i TO C
        MAX(F[j], F[j-V]+W[i]) → F[j]
    END FOR
END FOR
</code></pre>
<h4 id="2-多次背包">2. 多次背包</h4>
<p>多次背包问题：给定 n 种物品和一个背包。第 i 种物品 的价值是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">W_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，其体积为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">V_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，数量是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>件，背包的容量为 C。可以任意选择装入背包中的物品，求装入背 包中物品的最大总价值。</p>
<p>和完全背包一样，可以直接套用 0-1 背包问题的经典动规实现，但是 效率太低了，需要寻找更高效的算法。</p>
<p>首先对于第 i 种物品，不能确定放多少件才是最优的，因为并没有什么 可以证明放一件或者全放一定会更优。换句话说，最优解所需要的件数， 可能是 0 到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>中的任何数。</p>
<p>在日常生活中，如果需要能拿得出 1 到 Ki的任意整数数额的钱，往往不会带 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>个一元钱，因为那实在是太不方便了，取而代之的是带一些 1 元 和其他一些面值各不相同的非 1 数额的钱。 这种思想完全可以运用到这道题上！</p>
<p>不需要把一种物品拆分成 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 份，而是只要物品拆分到能凑出 1 到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 之间任意数量的程度就可以了。</p>
<p>可以证明，按照二进制的拆分能使件数达到最小，把 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 拆分成 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>4</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msup><mn>2</mn><mi>t</mi></msup><mo separator="true">,</mo><msub><mi>K</mi><mi>i</mi></msub><mo>−</mo><msup><mn>2</mn><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><mn>1</mn><mstyle mathcolor="yellow"><mtext>   </mtext><mo>(</mo><msup><mn>2</mn><mrow><mi>t</mi><mo>−</mo><mn>2</mn></mrow></msup><mo>&gt;</mo><msub><mi>K</mi><mi>i</mi></msub><mo>≥</mo><msup><mn>2</mn><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msup></mstyle></mrow><annotation encoding="application/x-tex">1,2,4,\dots,2^t,K_i-2^{t-1}+1\color{yellow}\ \ \ (2^{t-2}&gt;K_i\ge2^{t-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9879959999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mspace" style="color:yellow;"><span style="color:yellow;"> </span></span><span class="mspace" style="color:yellow;"><span style="color:yellow;"> </span></span><span class="mspace" style="color:yellow;"><span style="color:yellow;"> </span></span><span class="mopen" style="color:yellow;">(</span><span class="mord" style="color:yellow;"><span class="mord" style="color:yellow;">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:yellow;"><span class="mord mtight" style="color:yellow;"><span class="mord mathdefault mtight" style="color:yellow;">t</span><span class="mbin mtight" style="color:yellow;">−</span><span class="mord mtight" style="color:yellow;">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord" style="color:yellow;"><span class="mord mathdefault" style="margin-right:0.07153em;color:yellow;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:yellow;"><span class="mord mathdefault mtight" style="color:yellow;">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord" style="color:yellow;"><span class="mord" style="color:yellow;">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:yellow;"><span class="mord mtight" style="color:yellow;"><span class="mord mathdefault mtight" style="color:yellow;">t</span><span class="mbin mtight" style="color:yellow;">−</span><span class="mord mtight" style="color:yellow;">1</span></span></span></span></span></span></span></span></span></span></span></span>，就一定可以满足最优解要求了。下一步， 还是用 0-1 背包的经典算法。</p>
<p>如此，我们得到了一个时间复杂度为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext mathvariant="monospace">O</mtext><mo>(</mo><mi>C</mi><mo>∗</mo><mi mathvariant="normal">Σ</mi><mo>(</mo><msub><mi>log</mi><mo>⁡</mo><mn>2</mn></msub><msub><mi>K</mi><mi>i</mi></msub><mo>)</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">\texttt{O}(C*\Sigma(\log_2K_i))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord texttt">O</span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Σ</span><span class="mopen">(</span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>的算法。</p>
<pre><code class="language-pascal">FOR i: = 1 TO n
1 → m
WHILE K_i &gt; 0
    IF m &gt; K_i
        THEN K_i → m
    K_i - m → K_i
    FOR j: = C DOWNTO V_i * m
        MAX( F[j] , F[j-V_i*m]+W_i*m ) → F[j]
    END FOR
    m * 2 → m
    END WHILE
END FOR
</code></pre>
<p>此算法还能加上一个优化，判断如果 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>大于 C/Vi，则多出的部分是没 有意义的，可以舍去。时间复杂度就可以优化到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>∗</mo><mi>C</mi><mo>∗</mo><msub><mi>log</mi><mo>⁡</mo><mn>2</mn></msub><mi>C</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n*C*\log_2C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span>。由于在高中阶段碰到的题中 C 的值很有限，所以这个算法在实际应用上的效果已经 可能满足一般的需求了。 但是在下一节中，有一个更高效的解决方法.</p>
<h3 id="单调队列优化">单调队列优化☆</h3>
<p>长度限制最大连续和问题：给出长度为 n 的序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，求这个序列中长度不超过 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>l</mi><mi>max</mi><mo>⁡</mo></msub></mrow><annotation encoding="application/x-tex">l_{\max}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.151392em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.301392em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">max</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的最大连续和。</p>
<p>首先考虑最简单的做法，就是直接用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>∗</mo><msub><mi>l</mi><mi>max</mi><mo>⁡</mo></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n*l_{\max})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.151392em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.301392em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">max</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的二次循环求最大值</p>
<pre><code class="language-pascal">FOR i: = 1 TO n 
    0 → s 
    FOR j: = i DOWNTO Max( i-lmax+1 ,1) 
        s + Xj → s 
        IF s &gt; ans THEN s → ans 
    END FOR 
END FOR 
</code></pre>
<p>用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 记 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">X_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的总和，就可以看到，如果确定一个端点后，要做的 就是在 S 数组的一个连续区间取一个最值，区间最值问题完全可以用线段树来实现。 但是这个题目的另一个特性是区间的长度是固定的，而且每个区间都 只需要取一次，所以我们可以用更简单的数据结构来实现——单调队列。</p>
<p>先来研究一下单调队列，以维护最大值为例，在满足序列中的编号递增以后，还要满足元素的值的递减。</p>
<table>
<thead>
<tr>
<th></th>
<th>L</th>
<th>L+1</th>
<th>...</th>
<th>R-1</th>
<th>R</th>
</tr>
</thead>
<tbody>
<tr>
<td>编号</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mi>L</mi></msub></mrow><annotation encoding="application/x-tex">A_L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mrow><mi>L</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">A_{L+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></td>
<td>...</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mrow><mi>R</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">A_{R-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">A_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td>数值</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>B</mi><mi>L</mi></msub></mrow><annotation encoding="application/x-tex">B_L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>B</mi><mrow><mi>L</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">B_{L+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></td>
<td>...</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>B</mi><mrow><mi>R</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">B_{R-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>B</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">B_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
</tr>
</tbody>
</table>
<p>满足<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>&gt;</mo><msub><mi>A</mi><mi>i</mi></msub><mo>&gt;</mo><msub><mi>A</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">and</mi><mo>⁡</mo><msub><mi>B</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>&gt;</mo><msub><mi>B</mi><mi>i</mi></msub><mo>&gt;</mo><msub><mi>B</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mtext>  </mtext><mstyle mathcolor="yellow"><mo>(</mo><mi>R</mi><mo>&gt;</mo><mi>i</mi><mo>&gt;</mo><mi>L</mi><mo>)</mo></mstyle></mrow><annotation encoding="application/x-tex">A_{i+1}&gt;A_i&gt;A_{i-1}\operatorname{and} B_{i-1}&gt;B_i&gt;B_{i+1}\ \  \color{yellow}(R&gt;i&gt;L)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">a</span><span class="mord mathrm">n</span><span class="mord mathrm">d</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mspace"> </span><span class="mopen" style="color:yellow;">(</span><span class="mord mathdefault" style="margin-right:0.00773em;color:yellow;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="color:yellow;">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="color:yellow;">L</span><span class="mclose" style="color:yellow;">)</span></span></span></span></p>
<p>单调队列除队列首元素出队列外，还需要用一定的操作来维护队列的 特殊性质。如果进入了一个新的元素(a,b)，其中 a 必然大于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">A_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，但是 b 可 能会大于等于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>B</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">B_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。既然 b 大于等于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>B</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">B_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，而元素 R 又是要先于新元素出队 列，那么元素 R 就已经失去价值，因为接下来新元素必然都会比元素 R 更 优。所以现在就可以删除元素 R 了。</p>
<p>重复上面的步骤，直到前面没有元素或者满足 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>B</mi><mi>R</mi></msub><mo>&gt;</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">B_R&gt;b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 为止，再让新元素 进队列。显然，当前的队列首元素，必定是这个区间的最大值</p>
<pre><code class="language-pascal">PROCEDURE INSERT a , b  
    WHILE R &gt;= L AND b &gt; B[ R ] 
        DO R - 1 → R 
    R + 1 → R 
    a → A[ R ]  
    b → B[ R ] 
END 
</code></pre>
<p>如此完成的单调队列，虽然不能保证每一次的操作是 O(1)，但是因为 每个元素只进队列一次，并出队列一次，所以总效率是 O(n)。</p>
<p>当然，这道题其实就是单调队列的基本功能，而我们希望的是能把它用来优化背包问题，所以现在重新考虑 多次背包问题 。</p>
<p>对于第 i 种物品来说，已知体积 v，价值 w，数量 k，那么可以按照当 前枚举的体积 j 对 v 的余数把整个动规数组分成 v 份，以下是 v=3 的情况：</p>
<table>
<thead>
<tr>
<th>j</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>...</th>
</tr>
</thead>
<tbody>
<tr>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mspace></mspace><mspace width="0.6666666666666666em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>v</mi></mrow><annotation encoding="application/x-tex">j \mod v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.6666666666666666em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span></td>
<td>0</td>
<td>1</td>
<td>2</td>
<td>0</td>
<td>1</td>
<td>2</td>
<td>0</td>
<td>1</td>
<td>2</td>
<td>...</td>
</tr>
</tbody>
</table>
<p>我们可以把每一份分开处理，假设余数为 d。</p>
<table>
<thead>
<tr>
<th>编号</th>
<th>j</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>...</th>
</tr>
</thead>
<tbody>
<tr>
<td>对应体积</td>
<td>d</td>
<td>d+v</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>+</mo><mn>2</mn><mo>∗</mo><mi>v</mi></mrow><annotation encoding="application/x-tex">d+2*v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>+</mo><mn>3</mn><mo>∗</mo><mi>v</mi></mrow><annotation encoding="application/x-tex">d+3*v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>+</mo><mn>4</mn><mo>∗</mo><mi>v</mi></mrow><annotation encoding="application/x-tex">d+4*v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>+</mo><mn>5</mn><mo>∗</mo><mi>v</mi></mrow><annotation encoding="application/x-tex">d+5*v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span></td>
<td>...</td>
<td></td>
</tr>
</tbody>
</table>
<p>现在看到分组以后，编号 j 可以从 j-k 到 j-1 中的任意一个编号转移而 来（因为相邻的体积正好相差 v），这看上去已经和区间最大值有点相似了。 但是注意到由于体积不一样，显然体积大的价值也会大于等于体积小的， 直接比较是没有意义的，所以还需要把价值修正到同一体积的基础上。比 如都退化到 d，也就是说用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>[</mo><mi>j</mi><mo>∗</mo><mi>v</mi><mo>+</mo><mi>d</mi><mo>]</mo><mo>−</mo><mi>j</mi><mo>∗</mo><mi>w</mi></mrow><annotation encoding="application/x-tex">F[j*v+d]- j*w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span> 来代替原来的价值进入队列。 对于第 i 件物品，转移伪代码</p>
<pre><code class="language-pascal">FOR d: = 0 TO v-1                         //枚举余数，分开处理 
    清空队列   
    FOR j: = 0 TO (C-d) div v             //j 枚举标号，对应体积为 j*v+d 
        INSERT j , F[ j*v+d ] – j * w     //插入队列 
        IF A[ L ] &lt; j - k THEN L + 1 → L  //如果队列的首元素已经失效 
        B[ L ] + j * w → F[ j*v+d ]       //取队列头更新 
    END FOR 
END FO
</code></pre>
<p>已知单调队列的效率是 O(n)，那么加上单调队列优化以后的多次背包， 效率就是 O(n*C)了。</p>
<h2 id="三-其他几类背包问题">三、 其他几类背包问题</h2>
<h3 id="1-树形依赖背包选课">1. 树形依赖背包（选课）☆</h3>
<p>树形依赖背包问题：给定 n 件物品和一个背包。第 i 件物品 的价值是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">W_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，其 体积为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">V_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，但是依赖于第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>件物品（必须选取 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>后才能取 i，如果无依赖则 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">X_i=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>）， 依赖关系形成森林，背包的容量为 C。可以任意选择装入背包中的物品，求装入背包中物品的最大总价值。</p>
<p>这道题需要在 treedp 的基础上用背包实现。</p>
<p>泛化物品——定义： 考虑这样一种物品，它并没有固定的费用（体积）和价值，而是它的价值随着 你分配给它的费用（体积）变化而变化。</p>
<p>泛化物品可以用一个一维数组来表示体积与价值的关系 Gj表示当体积 为 j 的时候，相对应的价值为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>j</mi></msub><mtext>  </mtext><mstyle mathcolor="yellow"><mo>(</mo><mi>C</mi><mo>&gt;</mo><mo>=</mo><mi>j</mi><mo>≥</mo><mn>0</mn><mo>)</mo></mstyle></mrow><annotation encoding="application/x-tex">G_j\ \ \color{yellow}(C&gt;=j\ge0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mspace"> </span><span class="mopen" style="color:yellow;">(</span><span class="mord mathdefault" style="margin-right:0.07153em;color:yellow;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel" style="color:yellow;">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;color:yellow;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord" style="color:yellow;">0</span><span class="mclose" style="color:yellow;">)</span></span></span></span>。 显然，之前的背包动规数组 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">F_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，就是一件泛化物品，因为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub><mo>[</mo><mi>j</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">F_i[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>表示的 正是体积为 j 的时候的最大价值。同样的，多件物品也是可以合并成一件泛化物品。</p>
<p>泛化物品的和：</p>
<p>把两个泛化物品合并成一个泛化物品的运算，就是枚举体积分配给两个泛化物 品，满足： <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mo>[</mo><mi>j</mi><mo>]</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo>{</mo><msub><mi>G</mi><mn>1</mn></msub><mo>[</mo><mi>j</mi><mo>−</mo><mi>k</mi><mo>]</mo><mo>+</mo><msub><mi>G</mi><mn>2</mn></msub><mo>[</mo><mi>k</mi><mo>]</mo><mo>}</mo><mtext>  </mtext><mstyle mathcolor="yellow"><mo>(</mo><mi>C</mi><mo>≥</mo><mi>j</mi><mo>≥</mo><mi>k</mi><mo>≥</mo><mn>0</mn><mo>)</mo></mstyle></mrow><annotation encoding="application/x-tex">G[j] = \max\{ G_1[j-k] + G_2[k] \}\ \ \color{yellow} (C\ge j\ge k\ge0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mclose">}</span><span class="mspace"> </span><span class="mspace"> </span><span class="mopen" style="color:yellow;">(</span><span class="mord mathdefault" style="margin-right:0.07153em;color:yellow;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;color:yellow;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;color:yellow;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord" style="color:yellow;">0</span><span class="mclose" style="color:yellow;">)</span></span></span></span></p>
<p>把两个泛化物品合并的时间复杂度是 O(C^2)。</p>
<p>对于具有树形依赖关系的背包问题，我们可以把每棵子树看作是一个 泛化物品，那么一棵子树的泛化物品就是子树根节点的这件物品的泛化物 品与由根所连的所有子树的泛化物品的和。 整个动规过程就是从叶子进行到根，对于每一棵子树的操作就是：</p>
<pre><code class="language-pascal">PROCEDURE DEAL i , v , w      //第 i 个节点 体积为 v 价值为 w 
    FOR j: = v TO C           //初始化这件泛化物品 
        w → F_i[ j ] 
    END FOR 
    FOR s: = 1 TO n 
        IF s 是 i 的儿子 THEN 
        F_i 与 F_s 的和 → F_i 
        END IF 
    END FOR 
END
</code></pre>
<p>一次只能把两个泛化物品合并，那么要把 n 个泛化物品合并成一个就 需要 n-1 次合并，所以这个算法效率是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>∗</mo><msup><mi>C</mi><mn>2</mn></msup><mo>+</mo><msup><mi>n</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n*C^2+n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> ，当然，其中的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 可以用邻接表的记边方法变成 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>，最终的效率就是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>∗</mo><msup><mi>C</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n*C^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p>
<p>回顾经典 0-1 背包问题，在那个经典算法中，求泛化物品与一件物品 的和，只需要 O(C)的时间复杂度，推论出：</p>
<p>泛化物品与一件物品的和： 把一个泛化物品与一件物品合并成一个泛化物品，可以用类似于 0-1 背包经典动 规的方法求出。</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mo>[</mo><mi>j</mi><mo>]</mo><mo>=</mo><msub><mi>G</mi><mn>1</mn></msub><mo>[</mo><mi>j</mi><mo>]</mo><mtext>  </mtext><mstyle mathcolor="yellow"><mrow><mo>(</mo><mi>v</mi><mo>&gt;</mo><mi>j</mi><mo>≥</mo><mn>0</mn><mo>)</mo></mrow></mstyle></mrow><annotation encoding="application/x-tex">G[j] = G_1[j] \ \ \color{yellow}{(v&gt;j\ge0)} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace"> </span><span class="mspace"> </span><span class="mord" style="color:yellow;"><span class="mopen" style="color:yellow;">(</span><span class="mord mathdefault" style="margin-right:0.03588em;color:yellow;">v</span><span class="mspace" style="color:yellow;margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">&gt;</span><span class="mspace" style="color:yellow;margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;color:yellow;">j</span><span class="mspace" style="color:yellow;margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="color:yellow;margin-right:0.2777777777777778em;"></span><span class="mord" style="color:yellow;">0</span><span class="mclose" style="color:yellow;">)</span></span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mo>[</mo><mi>j</mi><mo>]</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo>{</mo><msub><mi>G</mi><mn>1</mn></msub><mo>[</mo><mi>j</mi><mo>]</mo><mo separator="true">,</mo><msub><mi>G</mi><mn>1</mn></msub><mo>[</mo><mi>j</mi><mo>−</mo><mi>v</mi><mo>]</mo><mo>+</mo><mi>w</mi><mo>}</mo><mtext>  </mtext><mstyle mathcolor="yellow"><mo>(</mo><mi>C</mi><mo>≥</mo><mi>j</mi><mo>≥</mo><mi>v</mi><mo>)</mo></mstyle></mrow><annotation encoding="application/x-tex">G[j] = \max\{ G_1[j] , G_1[j-v]+w \}\ \  \color{yellow}(C\ge j\ge v) 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">}</span><span class="mspace"> </span><span class="mspace"> </span><span class="mopen" style="color:yellow;">(</span><span class="mord mathdefault" style="margin-right:0.07153em;color:yellow;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;color:yellow;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;color:yellow;">v</span><span class="mclose" style="color:yellow;">)</span></span></span></span></span></p>
<p>这样的合并，时间复杂度仅为 O(C)，同样也是合并了一件物品，效率 比求两件泛化物品的和快很多。那么有没有办法用这种 O(C)的合并方式来 代替计算两个泛化物品的和来处理这道题呢？</p>
<p>泛化物品的并： 因为两个泛化物品之间存在交集，所以不能同时两者都取，那么我们就需要求 泛化物品的并，对同一体积，我们需要选取两者中价值较大的一者，效率 O(C)。</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mo>[</mo><mi>j</mi><mo>]</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo>{</mo><msub><mi>G</mi><mn>1</mn></msub><mo>[</mo><mi>j</mi><mo>]</mo><mo separator="true">,</mo><msub><mi>G</mi><mn>2</mn></msub><mo>[</mo><mi>j</mi><mo>]</mo><mo>}</mo><mstyle mathcolor="yellow"><mspace width="1em"/><mo>(</mo><mi>C</mi><mo>≥</mo><mi>j</mi><mo>≥</mo><mn>0</mn><mo>)</mo></mstyle></mrow><annotation encoding="application/x-tex">G[j] = \max\{ G_1[j] , G_2[j] \} \color{yellow}\quad(C\ge j\ge0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mclose">}</span><span class="mspace" style="color:yellow;margin-right:1em;"></span><span class="mopen" style="color:yellow;">(</span><span class="mord mathdefault" style="margin-right:0.07153em;color:yellow;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;color:yellow;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord" style="color:yellow;">0</span><span class="mclose" style="color:yellow;">)</span></span></span></span></p>
<p>重新考虑对以 i 为根的子树的处理，假设当前需要处理 i 的一个儿子 s。</p>
<p>如果我们在当前的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">F_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>中强制放入物品 s 后作为以 s 为根的子树的初始 状态的话，那么处理完以 s 为根的子树以后，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">F_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>就是与 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">F_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>有交集的泛化物 品（实际上是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">F_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>包含 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">F_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>），同时，Fs必须满足放了物品 s，即 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>s</mi></msub><mo>[</mo><mi>j</mi><mo>]</mo><mstyle mathcolor="yellow"><mspace width="1em"/><mo>(</mo><msub><mi>V</mi><mi>s</mi></msub><mo>&gt;</mo><mi>j</mi><mo>≥</mo><mn>0</mn><mo>)</mo></mstyle></mrow><annotation encoding="application/x-tex">F_s[j]\color{yellow}\quad (V_s&gt;j\ge0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="color:yellow;margin-right:1em;"></span><span class="mopen" style="color:yellow;">(</span><span class="mord" style="color:yellow;"><span class="mord mathdefault" style="margin-right:0.22222em;color:yellow;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:yellow;"><span class="mord mathdefault mtight" style="color:yellow;">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;color:yellow;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord" style="color:yellow;">0</span><span class="mclose" style="color:yellow;">)</span></span></span></span> 已经无意义了，而 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>s</mi></msub><mo>[</mo><mi>j</mi><mo>]</mo><mstyle mathcolor="yellow"><mspace width="1em"/><mo>(</mo><mi>C</mi><mo>&gt;</mo><mo>=</mo><mi>j</mi><mo>≥</mo><msub><mi>V</mi><mi>s</mi></msub><mo>)</mo></mstyle></mrow><annotation encoding="application/x-tex">F_s[j]\color{yellow}\quad(C&gt;=j\ge V_s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="color:yellow;margin-right:1em;"></span><span class="mopen" style="color:yellow;">(</span><span class="mord mathdefault" style="margin-right:0.07153em;color:yellow;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel" style="color:yellow;">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;color:yellow;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord" style="color:yellow;"><span class="mord mathdefault" style="margin-right:0.22222em;color:yellow;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:yellow;"><span class="mord mathdefault mtight" style="color:yellow;">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose" style="color:yellow;">)</span></span></span></span>必然包含物品 s。为了方便，经过处理以 后，在程序中规定只有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>s</mi></msub><mo>[</mo><mi>j</mi><mo>]</mo><mstyle mathcolor="yellow"><mspace width="1em"/><mo>(</mo><mi>C</mi><mo>−</mo><msub><mi>V</mi><mi>s</mi></msub><mo>≥</mo><mi>j</mi><mo>≥</mo><mn>0</mn><mo>)</mo></mstyle></mrow><annotation encoding="application/x-tex">F_s[j]\color{yellow}\quad(C-V_s\ge j\ge0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="color:yellow;margin-right:1em;"></span><span class="mopen" style="color:yellow;">(</span><span class="mord mathdefault" style="margin-right:0.07153em;color:yellow;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin" style="color:yellow;">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord" style="color:yellow;"><span class="mord mathdefault" style="margin-right:0.22222em;color:yellow;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:yellow;"><span class="mord mathdefault mtight" style="color:yellow;">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;color:yellow;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord" style="color:yellow;">0</span><span class="mclose" style="color:yellow;">)</span></span></span></span>是合法的。</p>
<p>接下来只需要把 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">F_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">F_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的并赋给<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">F_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，就完成了对一个儿子的处理。如 此，我们需要的总时间复杂度仅为 O(n*C)。</p>
<pre><code class="language-pascal">PROCEDURE DEAL i , C 
    FOR s: = 1 TO n 
        IF s 是 i 的儿子 THEN 
            Fi → Fs 
            DEAL s , C – Vs            //背包容量减小 Vs 
            FOR K: =Vs TO C            //求两者的并 
                Max ( Fi[ k ] , Fs[ k-Vs ] + Ws ) → Fi[ k ] 
            END FOR 
        END IF 
    END FOR 
END
</code></pre>
<h3 id="2-pku3093">2. PKU3093☆</h3>
<p>PKU3093：给定 n 件物品和一个背包，第 i 件物品的体积为 Vi，背包的容量为 C。 要求把一些物品放入背包使得剩下的物品都放不下，求方案数。</p>
<p>暂时先不考虑“使剩下的物品都放不下”的条件，那就是求 0-1 背包 的所有可行方案。 用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub><mo>[</mo><mi>j</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">F_i[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>表示前 i 件物品中选若干件总体积为 j 的方案数，初始为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>0</mn></msub><mo>[</mo><mn>0</mn><mo>]</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">F_0[0]=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，转移方程是</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub><mo>[</mo><mi>j</mi><mo>]</mo><mo>=</mo><msub><mi>F</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>[</mo><mi>j</mi><mo>]</mo><mstyle mathcolor="yellow"><mspace width="1em"/><mo>(</mo><mi>V</mi><mi>i</mi><mo>&gt;</mo><mi>j</mi><mo>)</mo></mstyle></mrow><annotation encoding="application/x-tex">F_i[j] = F_{i-1}[j]\color{yellow}\quad (Vi&gt;j)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="color:yellow;margin-right:1em;"></span><span class="mopen" style="color:yellow;">(</span><span class="mord mathdefault" style="margin-right:0.22222em;color:yellow;">V</span><span class="mord mathdefault" style="color:yellow;">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;color:yellow;">j</span><span class="mclose" style="color:yellow;">)</span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub><mo>[</mo><mi>j</mi><mo>]</mo><mo>=</mo><msub><mi>F</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>[</mo><mi>j</mi><mo>]</mo><mo>+</mo><msub><mi>F</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>[</mo><mi>j</mi><mo>−</mo><mi>V</mi><mi>i</mi><mo>]</mo><mstyle mathcolor="yellow"><mspace width="1em"/><mo>(</mo><mi>j</mi><mo>&gt;</mo><mo>=</mo><mi>V</mi><mi>i</mi><mo>)</mo></mstyle></mrow><annotation encoding="application/x-tex">F_i[j] = F_{i-1}[j] + F_{i-1}[j-Vi]\color{yellow}\quad(j&gt;=Vi)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mspace" style="color:yellow;margin-right:1em;"></span><span class="mopen" style="color:yellow;">(</span><span class="mord mathdefault" style="margin-right:0.05724em;color:yellow;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel" style="color:yellow;">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;color:yellow;">V</span><span class="mord mathdefault" style="color:yellow;">i</span><span class="mclose" style="color:yellow;">)</span></span></span></span></span></p>
<p>显然这个算法的效率是 O(n*C)的，它计算了所有装放背包的方案数。</p>
<p>现在考虑“使剩下的物品都放不进去”的条件，如果剩下的物品中体 积最小为 v，那么方案数就是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext>sum </mtext><mo>{</mo><msub><mi>F</mi><mi>n</mi></msub><mo>[</mo><mi>j</mi><mo>]</mo><mo>}</mo><mstyle mathcolor="yellow"><mspace width="1em"/><mo>(</mo><mi>C</mi><mo>≥</mo><mi>j</mi><mo>&gt;</mo><mi>C</mi><mo>−</mo><mi>v</mi><mo>)</mo></mstyle></mrow><annotation encoding="application/x-tex">\text{sum }\{ F_n[j] \}\color{yellow}\quad(C\ge j&gt;C-v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">sum </span></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mclose">}</span><span class="mspace" style="color:yellow;margin-right:1em;"></span><span class="mopen" style="color:yellow;">(</span><span class="mord mathdefault" style="margin-right:0.07153em;color:yellow;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;color:yellow;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;color:yellow;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin" style="color:yellow;">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;color:yellow;">v</span><span class="mclose" style="color:yellow;">)</span></span></span></span>。前提是我们事先确定 了剩下中体积最小的是哪个。 对体积排序后，下一步就是枚举 i 作为剩余物品中体积最小的一件。</p>
<p>对 于所有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>&lt;</mo><mi>i</mi></mrow><annotation encoding="application/x-tex">s&lt;i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 的物品必须都要放入背包，对于 i 则不能放入背包，对于 s&gt;i 的 物品做 0-1 背包可行方案的统计，将 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext>sum</mtext><mo>{</mo><msub><mi>F</mi><mi>n</mi></msub><mo>[</mo><mi>j</mi><mo>]</mo><mo>}</mo><mstyle mathcolor="yellow"><mspace width="1em"/><mo>(</mo><mi>C</mi><mo>≥</mo><mi>j</mi><mo>&gt;</mo><mi>C</mi><mo>−</mo><msub><mi>V</mi><mi>i</mi></msub><mo>)</mo></mstyle></mrow><annotation encoding="application/x-tex">\text{sum}\{ F_n[j]\}\color{yellow}\quad(C\ge j&gt;C-V_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">sum</span></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mclose">}</span><span class="mspace" style="color:yellow;margin-right:1em;"></span><span class="mopen" style="color:yellow;">(</span><span class="mord mathdefault" style="margin-right:0.07153em;color:yellow;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;color:yellow;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;color:yellow;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin" style="color:yellow;">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord" style="color:yellow;"><span class="mord mathdefault" style="margin-right:0.22222em;color:yellow;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:yellow;"><span class="mord mathdefault mtight" style="color:yellow;">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose" style="color:yellow;">)</span></span></span></span>累加到 ans。 由于每次都需要对 n-i 件物品做统计，一共统计 n 次，效率是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>∗</mo><mi>C</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^2*C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span>。</p>
<pre><code class="language-pascal">0 → sum                      //sum 记 1 到 i-1 的物品体积总和 
FOR i: = 1 TO N 
    F 数组清零 
    1 → F[ sum ]                //初始化 
    FOR s: = i + 1 TO N       //统计可行方案数 
        FOR j: = C DOWNTO Vs + sum 
            F[ j ] + F[ j-Vs ] → F[ j ] 
        END FOR 
    END FOR 
    FOR k: = C DOWNTO C - Vi + 1    //累加总方案数 
        IF k &gt;= sum THEN ans + F[ k ] → ans
    END FOR
    sum + Vi → sum 
END FOR
</code></pre>
<p>可以发现，同一个物品多次被考虑放入背包，这样会造成时间的浪费。 观察得到，第 i 件物品共考虑了 i-1 次。每一次循环都会少一件物品。如果 把整个过程倒置，每件物品是否可以只考虑一次呢？</p>
<p>由于初始状态不一样，我们还需要把初始状态统一。可以让每次 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>[</mo><mn>0</mn><mo>]</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">F[0]=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，总容量为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo>−</mo><mi>s</mi><mi>u</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">C-sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span></span></span></span>。 但是只统一初始化状态还不够，因为每次的背包容量还是不同的，做 背包统计的时候，背包容量不可以是一个变值，也必须要统一，所以每次 考虑一件物品都要用最大容量 C 来更新背包。 一次操作之后要将 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext>sum</mtext><mo>{</mo><mi>F</mi><mo>[</mo><mi>j</mi><mo>]</mo><mo>}</mo><mstyle mathcolor="yellow"><mspace width="1em"/><mo>(</mo><mi>C</mi><mo>−</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo>≥</mo><mi>j</mi><mo>&gt;</mo><mi>C</mi><mo>−</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo>−</mo><msub><mi>V</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>j</mi><mo>≥</mo><mn>0</mn><mo>)</mo></mstyle></mrow><annotation encoding="application/x-tex">\text{sum}\{ F[j] \}\color{yellow}\quad(C-sum\ge j&gt;C-sum-V_i , j\ge 0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">sum</span></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mclose">}</span><span class="mspace" style="color:yellow;margin-right:1em;"></span><span class="mopen" style="color:yellow;">(</span><span class="mord mathdefault" style="margin-right:0.07153em;color:yellow;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin" style="color:yellow;">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="color:yellow;">s</span><span class="mord mathdefault" style="color:yellow;">u</span><span class="mord mathdefault" style="color:yellow;">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;color:yellow;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;color:yellow;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin" style="color:yellow;">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="color:yellow;">s</span><span class="mord mathdefault" style="color:yellow;">u</span><span class="mord mathdefault" style="color:yellow;">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin" style="color:yellow;">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord" style="color:yellow;"><span class="mord mathdefault" style="margin-right:0.22222em;color:yellow;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:yellow;"><span class="mord mathdefault mtight" style="color:yellow;">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct" style="color:yellow;">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;color:yellow;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel" style="color:yellow;">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord" style="color:yellow;">0</span><span class="mclose" style="color:yellow;">)</span></span></span></span>累加到 ans。 现在，每件物品都只考虑一次，背包体积统一是 C，那么效率就变成 了 O(n*C)。</p>
<pre><code class="language-pascal">0 → sum 
1 → F[ 0 ] 
FOR i: = 1 TO n 
    sum + Vi → sum 
END FOR 
FOR i: = n DOWNTO 1 
    sum - Vi → sum 
    FOR j: = C - sum DOWNTO  Max( C – sum – Vi + 1 , 0 )//累加总方案数 
        ans + F[ k ] → ans 
    END FOR 
    FOR j: = C DOWNTO Vi             //考虑第 i 件物品放入背包 
        F[ j ] + F[ j – Vi ] → F[ j ] 
    END FOR
END FOR
</code></pre>
<h2 id="四-总结">四、 总结</h2>
<p>回顾全文的四道背包题：</p>
<ul>
<li>对于完全背包问题，用转化方程就解决了；</li>
<li>对于多次背包，使用了单调队列优化来实现 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>∗</mo><mi>C</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n*C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span>的效率；在树形依赖背包问题中，探索了新的概念，最终完成算法的转化；</li>
<li>在 PKU3093 一题中，通过合并相似 操作来达到优化的效果。 虽然用到的方法各不相同，每个方法都不仅仅限于背包问题，完全可以灵 活运用到其他问题中。</li>
<li>文中提到的问题最后都用时间复杂度 O(n*C)的算法解决了，这并不是 说所有背包题都可以优化到这个程度，但是，可以肯定的是不会有比这个更快的 效率了。</li>
<li>就目前来说，背包类的题目还有很多没有得到很好的解决，等待着大家去 继续探索研究。</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Yorg.io 进阶指南]]></title>
        <id>https://hesy-zhoulijie.github.io/post/yorgio/</id>
        <link href="https://hesy-zhoulijie.github.io/post/yorgio/">
        </link>
        <updated>2020-10-05T05:26:47.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="yorgio-进阶指南">Yorg.io 进阶指南</h1>
]]></summary>
        <content type="html"><![CDATA[<h1 id="yorgio-进阶指南">Yorg.io 进阶指南</h1>
<!-- more -->
<h2 id="目录">目录</h2>
<p>[TOC]</p>
<h2 id="开始">开始</h2>
<p>在你阅读这篇指南的时候，我假定你已经活过了第50天，Level10+。现有水晶在1千万以上。</p>
<h2 id="第一步">第一步</h2>
<p>存档，保存一下你现在的进度。</p>
<h2 id="第二步">第二步</h2>
<p>拆除你的所有设施。</p>
<p>可能你觉得很荒唐，但是就是这样的。拆除并重新建造是成神的第一步。</p>
<h2 id="第三步">第三步</h2>
<p>重新安排你的水晶矿机，围绕着主基地排列。</p>
<p>存档</p>
<h2 id="第四步">第四步</h2>
<p>重新安排其他矿机，让他们围绕着水晶矿机排列。</p>
<p>我们把这个区域叫做一个矿区。</p>
<p>存档</p>
<h2 id="第五步">第五步</h2>
<p>用运输线连接矿机</p>
<blockquote>
<p>如果你已经解锁了空间翘曲技术，请直接前往<a href="#%E7%AC%AC%E4%B8%83%E6%AD%A5">第七步</a></p>
</blockquote>
<h2 id="第六步">第六步</h2>
<p>将各种工厂安置在运输线上。</p>
<h2 id="第七步">第七步</h2>
<p>在每个矿区周围安置以下数量的武器：</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>数量</th>
</tr>
</thead>
<tbody>
<tr>
<td>加农大炮</td>
<td></td>
</tr>
<tr>
<td>弓箭塔</td>
<td></td>
</tr>
<tr>
<td>弓箭塔</td>
<td>8</td>
</tr>
<tr>
<td>闪电塔</td>
<td>4</td>
</tr>
</tbody>
</table>
<blockquote>
<h2 id="以后的步骤将会分成xa-xb两种请遵循其中的一种进行后面的更新">以后的步骤将会分成<code>x.A x.B</code>两种，请遵循其中的一种进行后面的更新。</h2>
</blockquote>
<h2 id="第八a步">第八.A步</h2>
<p>定位到地图的边缘，按住字母E的同时按住ASDW控制方向，绘制出连续的城墙。</p>
<h2 id="第八b步">第八.B步</h2>
<p>在每个矿区周围搭建围墙</p>
<h2 id="第九a步">第九.A步</h2>
<p>在城墙上开个口，然后如下图所示搭建城墙</p>
<p>（黑色的是地图边界，灰色的是城墙，红色的⭕是主基地）</p>
<figure data-type="image" tabindex="1"><img src="https://i.loli.net/2020/08/03/M4DEdc2fUynCmzJ.png" alt="image.png" loading="lazy"></figure>
<h2 id="第十a步">第十.A步</h2>
<p>在这个通道周围<code>布满</code>武器塔</p>
<h2 id="第十一步">第十一步</h2>
<p>开始游戏</p>
<h2 id="最终效果">最终效果</h2>
<p><img src="https://i.loli.net/2020/08/03/sMoylfAg8DKFIOJ.png" alt="image.png" loading="lazy"><br>
<img src="https://i.loli.net/2020/08/03/X4nStTPLDMpQNWu.png" alt="image.png" loading="lazy"><br>
<img src="https://i.loli.net/2020/08/03/5RythMsPipBbX2m.png" alt="image.png" loading="lazy"></p>
<h2 id="存档下载">存档下载</h2>
<p>你真的要这样吗？<a href="javascript.alert(%22%E4%B8%8D%E7%BB%99%EF%BC%81%22)">链接</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[国外浏览器评测]]></title>
        <id>https://hesy-zhoulijie.github.io/post/intlbrowser/</id>
        <link href="https://hesy-zhoulijie.github.io/post/intlbrowser/">
        </link>
        <updated>2020-10-05T05:26:11.000Z</updated>
        <content type="html"><![CDATA[<h1 id="国外浏览器评测">国外浏览器评测</h1>
<p>[toc]</p>
<h2 id="链接汇总">链接汇总</h2>
<p>大目录：https://o8.cn/5gIlMZ<br>
chrome_85.0.4183.102.exe：https://www.90pan.com/b2107538<br>
密码：2fv5<br>
Firefox80.0.1.exe：https://www.90pan.com/b2107539<br>
密码：qum4<br>
MicrosoftEdge85.0.564.51X86.msi：https://www.90pan.com/b2107540<br>
密码：a641<br>
chromium.zip：https://www.90pan.com/b2107556<br>
密码：ocy3<br>
Safari.zip：https://www.90pan.com/b2107561<br>
密码：dgcd<br>
Opera72.0.3798.0dev.zip：https://www.90pan.com/b2107581<br>
密码：no96</p>
<h2 id="谷歌浏览器google-chrome">谷歌浏览器(Google Chrome)</h2>
<h3 id="下载地址">【下载地址】</h3>
<blockquote>
<p>chrome_85.0.4183.102.exe：https://o8.cn/iKaCSK<br>
密码：2fv5</p>
</blockquote>
<p>谷歌浏览器Google Chrome是由Google公司开发的一款设计简单、高效的Web浏览工具，目前浏览器市场占有率绝对第一，谷歌浏览器带给用户高速、稳定、安全的网络浏览体验。 该浏览器是基于其他开放原始码软件所撰写，包括WebKit和Mozilla，目标是提升稳定性、速度和安全性，并创造出简单且有效率的使用者界面。Google Chrome支持多标签浏览，每个标签页面都在独立的“沙箱”内运行，在提高安全性的同时，一个标签页面的崩溃也不会导致其他标签页面被关闭。</p>
<figure data-type="image" tabindex="1"><img src="http://6.pic.pc6.com/thumb/n331w9c2ault15xfs36/16f5cc1077439bd0_600_0.jpeg" alt="谷歌浏览器(Google Chrome)" loading="lazy"></figure>
<p><strong>chrome浏览器相比其他浏览器胜在速度上</strong>，简洁快速，用了chrome再也看不上别的浏览器了。专业人士爱用chrome，不过占用内存有点大。chrome现在浏览器市场占有率超过60%基本是所向披靡。总结下chrome为什么会是主流的原因：</p>
<p>1.同步：基于谷歌账号的多端同步。能够满足对书签，浏览记录同步，等等有很强的需求。</p>
<p>2.chrome安全性好：沙盒设计，异步进程架构，再加上Google Safe Browsing，下载前检测机制等等。</p>
<p>3.快：还是那句话，用过快的，就不喜欢慢的。</p>
<p>4.chrome扩展多：各种实用的扩展，相比firefox的扩展，对浏览器本身影响更小，热更新。其中有些是上网必备的。如果chrome web store连不上，可以去国内的一些商店安装，还可以下载下来离线安装，还可以直接安装自定义的脚本，这些小工具有时候是非常管用的。</p>
<p>5.简洁：现在浏览器的 UI 都互相借鉴（或者说抄袭），我也不知道 Chrome 的 UI 是否原创，不过简洁的界面的确是一大优势，特别是最新的 Chromium，甚至隐藏了地址栏。</p>
<p>当然缺点也有，比如网银，很多都不支持Chrome，还有就是吃内存呀，另外就是链接内文字的复制也是一大缺点。</p>
<h3 id="特色">特色</h3>
<p>1、速度</p>
<p>谷歌浏览器(Google Chrome) 浏览器追求的是全方位的高速体验，它可以快速地从桌面上启动，并能迅速加载网页，而在运行复杂的网络应用时更是<a href="http://www.pc6.com/z/xunlei/">迅雷</a>不及掩耳。</p>
<p>2、简约</p>
<p>谷歌浏览器(Google Chrome) 浏览器的窗口采用了清爽简洁的流线型设计。例如，您可以通过同一个框执行搜索和导航操作，还可以轻松快捷地随意排列标签页。</p>
<p>3、安全性</p>
<p>谷歌浏览器(Google Chrome) 浏览器通过以下功能为您提供更加安全的上网体验：内置的恶意软件和网上诱骗防护功能、自动更新（可确保您获得所有最新的安全修补程序）等。</p>
<p>4、隐私设置</p>
<p>谷歌浏览器(Google Chrome) 能够让您控制自己的隐私信息，同时还能帮助保护您在网上共享的信息。</p>
<p>5、自定义</p>
<p>​	您可以通过各种各样的方法来自定义 谷歌浏览器(Google Chrome) 浏览器，从而享受独一无二的体验。无论是更改设置，还是从 谷歌浏览器(Google Chrome) 网上应用店添加应用、扩展程序和主题背景都轻而易举。</p>
<p>6、登录</p>
<p>​	登录谷歌浏览器(Google Chrome) 浏览器可让您在自己的所有上网设备上使用相同的书签、历史记录以及其他设置。这样还可以让您自动登录所有喜爱的 Google 服务。</p>
<h3 id="使用技巧">使用技巧</h3>
<p>一. 快速关闭标签页<br>
　　相信大多数人依旧是用鼠标直接点击那个关闭按钮来进行标签关闭的，你或许知道 Chrome 专门对标签关闭优化过，每次点击关闭后会自动改变标签宽度，这样可以通过在同一位置连续点击鼠标来快速关闭多个标签页，因此相对其他浏览器用鼠标点击关闭效率其实还算不低。不过这个优秀的细节面对固定标签就不行了，此外老是通过鼠标点击关闭的话对于一个极客来说也太显得图样图森破了，今天极客公园为你推荐另外两种快速关闭标签页的方法：1.在要关闭标签页下按下 Ctrl/ + W 组合快捷键 （适用于任何标签页关闭）2.在要关闭标签页下中键单击（按下滚轮） （关闭标签最简单最快捷方法）除了 Ctrl/ + W 快捷键关闭标签页外，你还应该记住 Ctrl/ + T 快速打开新标签页，Ctrl/+Shift+T 重新打开最新关闭的标签，Ctrl/+Shift+V 将剪切板中的内容无格式粘贴等快捷键组合，更多请查看官方指南。</p>
<p>二. 设备间同步标签页<br>
　　随着智能移动设备在生活中占据的地位越来越重，能够打通桌面与移动端的数据，统一体验将会越来越受用户欢迎。在这方面 Chrome 暂时做得还不错，近两年 Google相继推出官方的Chrome Andriod 版本（需4.0以上）和Chrome iOS 版本（需4.3以上）。通过“同步书签、同步密码、发送到移动设备、自动登录、智能建议”这些功能可以将在桌面电脑上打开的标签页、存储的书签和多功能框数据同步到您的手机或平板电脑上。下面以不同设备间标签页的同步为例为你介绍 Chrome 的同步功能。同步标签页需要相应设备对应版本，确保“打开的标签页”复选框处于选中状态当桌面版和移动版 Chrome 都已经登录同一账户并处于联网状态时就可以在新标签页（按下 Ctrl/⌘ +T ）下右下角的&quot;其他设备&quot;中查看，点击即可在当前设备上打开同步的标签页。打开的标签页是按设备进行分组的，要管理（隐藏、重命名、删除）特定设备的话，可以到云打印页面设置。</p>
<p>三. 发送标签页到移动设备<br>
　　除了不同设备间书签、标签等数据同步外，Chrome 还可以一键将当前浏览的标签页直接发送到关联在同一账户下的移动设备上。如果你安装的为 Chrome Dev 版本并且关联了其他设备下的 Chrome 版本的话你会发现在地址栏右侧会出现一个手机的图标，点击它就可以将当前网页一键发送至移动设备上去。（其他版本暂需安装官方Chrome to Mobile插件</p>
<p>四. Tab 智能搜索<br>
　　你可能知道在 Chrome 浏览器中直接在地址栏中就可以搜索，也可能知道直接选中文本然后右键选择在 Google 搜索或复制然后在地址栏中粘贴并搜索，但你或许不知道 Tab 搜索。那么什么是 Tab 搜索呢？ 如果 Chrome 已记录该网站的搜索引擎（即你在某个网站内使用过其搜索框），按下 Tab 键 Chrome 会自动选择该搜索引擎进行关键字搜索，即可以直接在地址栏内对特定的网站进行搜索。（与 Windows 8 内置的应用内搜索有点类似）以后再也不用先打开豆瓣，再点击豆瓣电影然后再在搜索框内进行搜索了……</p>
<p>五. Chrome 拖动技巧<br>
　　在 Chrome 中除了可以拖动上传以及拖动下载文件外，你或许还知道拖动标签（左右改变位置、里外分离拖拽回窗口），其实对于网页里的内容也是可以拖动的。1.拖动搜索 （地址栏、标签栏）2.拖动图片 （地址栏、标签栏）3.拖动链接 （地址栏、标签栏、书签栏）4.拖动本地 HTML、图片、pdf文件（地址栏、标签栏、书签栏）对应元素拖动到地址栏上将会在当前窗口搜索/打开该元素内容，如果拖动到标签栏上则新建窗口搜索/打开。</p>
<p>六. 使用语音识别搜索<br>
　　如果在 Chrome 浏览器中看到文本框带有麦克风图标的话就表示，那就表示可以通过语音输入，而不用键盘输入内容了。直接点击麦克风图标或将光标放到文本框中然后按Ctrl/⌘ + Shift + .（英文句号）组合键即可。语音搜索这一点对于输入不便的移动设备来说更是尤为重要，这也是为什么语音搜索服务最早登录移动平台（m.google.com），移动版 Chrome 在地址栏默认就有语音搜索功。</p>
<p>七. Chrome Experiments Google<br>
　　有一个叫做Chrome Experiments的网站，在这个网站里除了可以浏览各种以 JavaScript、HTML5 和 WebGL 编写的创新实验展示，如有趣好玩的游戏（Cube 3D地图）、互动电影，新颖惊艳的Impress.js（内容展示效果库，类似3D 版 PPT） 、Kinect+WebGL、其他各种有用的库等。此外今年还新增了专门面向移动设备的页面。</p>
<h2 id="firefox火狐浏览器">Firefox(火狐浏览器)</h2>
<h3 id="下载地址-2">【下载地址】</h3>
<blockquote>
<p>Firefox80.0.1.exe：https://o8.cn/1GfS2X<br>
密码：qum4</p>
</blockquote>
<p>Mozilla Firefox是一个自由的，开放源码的浏览器，火狐浏览器适用于Windows,Linux和MacOSX平台。火狐浏览器还有其它一些高级特征，如标签式浏览，可以禁止弹出式窗口。</p>
<p>Mozilla Firefox，中文名通常称为“火狐”或“火狐浏览器”。是一个自由的，开放源码的浏览器，适用于Windows, Linux 和 MacOS X平台。引擎反应更快，内存占用更少，速度更快，真正的隐私保护，还有众多自定义功能。</p>
<h3 id="功能介绍">功能介绍</h3>
<p><strong>选择外观: 主题</strong></p>
<p>打造符合你风格的火狐浏览器（Firefox）。您可以从几万个出自全世界不同国家设计师设计的火狐浏览器（Firefox）皮肤主题 中挑选适合您的主题，也可以自己动手 制作主题。只需简单的一个点击，即刻换上您想要的火狐浏览器（Firefox）主题皮肤。</p>
<p><strong>自定义：附加组件</strong></p>
<p>火狐浏览器（Firefox）拥有超过一万个的 扩展（add-ons），提供各种不同的扩展功能，您可以简单的下载、安装这些扩展以增强您的火狐功能，帮助您更好、更个性化的体验网上冲浪。无论是在网上听音乐，看视频，购物，看新闻...都能找到相应的火狐浏览器（Firefox）扩展能帮助您提升体验，这里 是一些我们推荐给您的扩展精选。</p>
<p><strong>插件更新检查</strong></p>
<p>插件是由类似 Adobe Systems 或者 Apple 这些公司制作的第三方软件，用来播放视频、实现动画或者制作游戏（例如 Flash Player 或者 Quicktime）。它们可能导致浏览器的崩溃或者在一段时间后被发现安全漏洞，所以火狐浏览器（Firefox）开发了一个简单的工具来确保您使用的插件是新版。</p>
<p><strong>自定义您的界面</strong></p>
<p>新版火狐浏览器（Firefox）中，彻底重新设计了自定义浏览器界面的交互体验，操作更简单方便。</p>
<p>在新版火狐浏览器（Firefox）的界面上，移除了底部的附加组件栏，同时火狐浏览器（Firefox）为您提供了一个全新的菜单面板，可以快速方便的在这里找到所有您需要的功能。点击火狐浏览器（Firefox）菜单面板下方的&quot;自定制&quot;，您将进入到自定义面板，在这里您可以通过直接拖拽按钮，自由的添加、移动、删除您要调整的按钮。确保那些您常用的功能（附加组件、隐私浏览、同步等等）一键即可进入。</p>
<h3 id="火狐浏览器和谷歌浏览器的对比">火狐浏览器和谷歌浏览器的对比：</h3>
<p><strong>在安全性方面：</strong></p>
<p>谷歌浏览器会定期的下载更新两组黑名单（分别是防止网络钓鱼和恶意软件），并会在使用者试图浏览可能造成电脑损害的网站时予以警告。</p>
<p>火狐浏览器（Firefox）自身有阻止弹出性窗口的功能，并且在安装火狐时自定义模式下可以安装一款扩展提高安全性能。</p>
<p><strong>在速度方面：</strong></p>
<p>谷歌浏览器使用谷歌自身研发的Chrome内核当你双击谷歌浏览器标志时，几乎立刻就能启动浏览器，这点是同类产品做不到的一点，同时在用谷歌浏览器浏览网页时几乎感觉不到是通过浏览器在浏览，给用户以全新流畅的体验。</p>
<p>火狐浏览器使用Gecko内核，具有上网速度快，整体轻便，界面简洁等特征。火狐浏览器（Firefox）浏览网页时采用的分页浏览的方式，可以加快页面加载的速度，这也是其成为好用的网页浏览器的重要原因之一。</p>
<p><strong>在功能方面：</strong></p>
<p>火狐浏览器<a href="http://www.pc6.com/pc/zydgdyouxi/">自由度高</a>，用户能够在浏览器上安装多种插件，方便用户使用站点的特殊功能。但由于开发者大部分使用谷歌浏览器，所以某些网站或内容在火狐浏览器不能完美呈现。</p>
<p>谷歌浏览器也有浏览器插件的功能，但由于<a href="http://www.pc6.com/pc/ggllqcj/">谷歌插件</a>商店经常处于打不开的状态，所以插件安装文件需要通过其他途径进行下载。</p>
<p><strong>在稳定性方面：</strong></p>
<p>Chrome大的亮点就是多进程架构，保护浏览器不会因恶意网页和应用软件而崩溃。通过将每个站点或应用程序封闭起来提高系统安全性。但谷歌浏览器的最大弊端是占用内存较大，特别是同时打开多个页面的情况下尤为明显，但同时也具有高性能的表现，所以更适合高内存计算机用户使用。而火狐浏览器的兼容性较强，牺牲了部分速度保证整体使用的稳定性。</p>
<h2 id="microsoft-edge浏览器">Microsoft Edge浏览器</h2>
<h3 id="下载地址-3">【下载地址】</h3>
<blockquote>
<p>MicrosoftEdge85.0.564.51X86.msi：https://o8.cn/VoGrVO<br>
密码：a641</p>
</blockquote>
<h3 id="内测版本">【内测版本】</h3>
<blockquote>
<p>https://www.microsoftedgeinsider.com/zh-cn/</p>
<p>最新的dev版本有彩蛋</p>
<figure data-type="image" tabindex="2"><img src="https://pic.rmb.bdstatic.com/bjh/6568dfafcda09e6ca0508da2525c1140.png" alt="image.png" loading="lazy"></figure>
</blockquote>
<p>微软已正式公布采用Chromium内核的全新Edge浏览器，Microsoft Edge浏览器在新版Windows 10上已经支持，交互界面更加简洁，还将兼容现有Chrome与Firefox两大浏览器的扩展程序。用户安装的插件将与Chrome与Firefox类似，显示在工具栏上。</p>
<p>全新的Edge浏览器支持同步书签、密码、历史记录和标签，实现类似于Firefox Sync的功能。</p>
<h3 id="软件特色">软件特色</h3>
<p><strong>IE 模式</strong></p>
<p>在新版的Edge中，可以一键切换为IE11内核，借助此功能你可以正常访问一些老旧的网站，例如部分学校和政府机构的网站</p>
<figure data-type="image" tabindex="3"><img src="https://thumb1.jfcdns.com/thumb/n331fxo31nta14fvr42/16f5e8302ab13327_600_0.jpg" alt="img" loading="lazy"></figure>
<p><strong>跟踪防护</strong></p>
<p>将会更加注重用户的安全隐私控制</p>
<figure data-type="image" tabindex="4"><img src="https://thumb.jfcdns.com/thumb/n331wy631hy314k7s42/16f5e8302aba7fd6_600_0.jpg" alt="img" loading="lazy"></figure>
<p><strong>快速收藏</strong></p>
<p>Edge可以和office套件便捷交互，导入导出分享将会变得更加轻松</p>
<figure data-type="image" tabindex="5"><img src="http://0.pic.pc6.com/thumb/n331m3k31guq142vz42/16f5e8302ac5ea72_600_0.jpg" alt="img" loading="lazy"></figure>
<p>新版Edge支持的平台非常多，除了 windows 还支持 macOS，当然Edge也有移动端的，Android和IOS版本均可和桌面版同步</p>
<h3 id="设置中文语言方法">设置中文语言方法</h3>
<p>点击右栏的菜单-Settings-languages</p>
<figure data-type="image" tabindex="6"><img src="http://thumb10.jfcdns.com/thumb/n331csx31wk514zp327/16f5e6ed320961ff_600_0.jpeg" alt="img" loading="lazy"></figure>
<p>点击Add languages</p>
<figure data-type="image" tabindex="7"><img src="http://6.pic.pc6.com/thumb/n331jo731za614aro27/16f5e6ed32180912_600_0.jpeg" alt="img" loading="lazy"></figure>
<p>这里我们可以通过搜索找到中文，推荐大家添加简体中文，这里因为我添加过了，所以没显示</p>
<figure data-type="image" tabindex="8"><img src="http://thumb11.jfcdns.com/thumb/n331s2f31n2w14qvn27/16f5e6ed3223b384_600_0.jpeg" alt="img" loading="lazy"></figure>
<p>依次勾选，应用语言到整个Edge浏览器</p>
<figure data-type="image" tabindex="9"><img src="https://thumb2.jfcdns.com/thumb/n331aub31e1b14gm427/16f5e6ed32304608_600_0.jpeg" alt="img" loading="lazy"></figure>
<p>再点击Restart重启浏览器</p>
<figure data-type="image" tabindex="10"><img src="http://6.pic.pc6.com/thumb/n331i5331liy14zwr27/16f5e6ed323b205b_600_0.jpeg" alt="img" loading="lazy"></figure>
<p>这样可以看到浏览器就是中文界面了</p>
<figure data-type="image" tabindex="11"><img src="http://6.pic.pc6.com/thumb/n3318so31fng145l627/16f5e6ed3246a57b_600_0.jpeg" alt="img" loading="lazy"></figure>
<h2 id="chromium浏览器">Chromium浏览器</h2>
<h3 id="下载地址-4">【下载地址】</h3>
<blockquote>
<p>chromium.zip：https://o8.cn/IY27Rh<br>
密码：ocy3</p>
</blockquote>
<p>Chromium浏览器是一款基于Google Chrome浏览器的开源版，Chromium浏览器相比Chrome具有更加丰富的功能更新颖的功能给专业人员使用，Chromium浏览器的核心思想就是简单、高速、稳定、安全的浏览网页。</p>
<figure data-type="image" tabindex="12"><img src="http://6.pic.pc6.com/thumb/n131t2ao13y33/16f5c6f4c3becc3b_600_0.jpeg" alt="img" loading="lazy"></figure>
<h3 id="基本简介">基本简介</h3>
<p>Chromium是一个由Google主导开发的网页浏览器。以BSD许可证等多重自由版权发行并开放源代码。Chromium设计思想基于简单、高速、稳定、安全等理念，在架构上使用了Apple发展出来的WebKit排版引擎、Safari的部份源代码与Firefox的成果，并采用Google独家开发出的V8引擎以提升解译JavaScript的效率，而且设计了“沙盒”、“黑名单”、“无痕浏览”等功能来实现稳定与安全的网页浏览环境。Chromium是Google为发展自家的浏览器Google Chrome（以下简称Chrome）而开启的计划，所以Chromium相当于Chrome的工程版或称实验版（尽管Chrome自身也有β版阶段），新功能会率先在Chromium上实现，待验证后才会应用在Chrome上，故Chrome的功能会相对落后但较稳定。Chromium和Chrome所使用的webkit内核是目前公认的最快的网页浏览方式。</p>
<h3 id="软件特色-2">软件特色</h3>
<p>- Chromium浏览器基于开源引擎WebKit、Blink，其中包含谷歌Gears。<br>
　　- Chromium提供了浏览器扩展框架，可以制作与Adobe-AIR类似的混合应用。</p>
<p>- 包含V8 Javascript虚拟机，这个多线程的虚拟机可以加速Javascript的执行。</p>
<p>- 具备隐私浏览模式，可以让用户无需在本地机器上登录即可使用，这个功能与微软IE8中的Incognito类似。</p>
<p>- 浏览器将内置防止“网络钓鱼“及恶意软件功能。</p>
<h3 id="功能介绍-2">功能介绍</h3>
<p>- Chromium浏览器使用了额外的Loader使配置文件与程序文件存放于同一个文件夹，适合U盘携带，或者经常重装的人群。<br>
　　- 能通过“设置默认浏览器。EXE”将浏览器设置为默认浏览器。并且设置之后在任何地方调用浏览器都不会出现丢失设置的情况。并且能创建桌面以及程序菜单快捷方式。不过设置默认浏览器之后，程序所在文件夹不能改名或者删除;</p>
<p>- 优化了浏览器配置。附加了一些常用的浏览器插件。其中有一些插件默认是停用的，如果需要的话，随时启用即可。</p>
<p>- 能通过一个批处理文件“清除所有个人信息与自定义设置。bat”快速的将所有此浏览器的浏览记录以及个人信息删除。以便重新定制并分发给其他用户。</p>
<ul>
<li>Loader使用<a href="http://www.pc6.com/pc/cyybyq/">c语言</a>编写。尽量减少垃圾文件产生以及资源占用。</li>
</ul>
<h3 id="常见问题">常见问题</h3>
<p><strong>问：chrome与chromium有什么区别？</strong></p>
<p>1、安装模式 Chromium可以免安装，下载zip压缩包后解压缩即可使用，而Chrome虽然理论上也可以免安装，但Google仅提供安装版。</p>
<p>2、程序图标 两者图标只在色彩上有不同，Chromium的是天蓝色系，而Chrome的则是Google公司的代表色（红、黄、蓝、绿）。</p>
<p>3、新功能会率先在Chromium上推出，Chrome则会相对落后许多。</p>
<p><strong>问：浏览器支持多用户登录吗？</strong></p>
<p>在实验室里打开Multiple profiles项目，在重启浏览器之后，即可看到窗口右上角显示当前登录的帐户名称。点击该名称，点击Create a new profile手动接创建一个新的帐户，这会让你再新打开一个使用不同帐户的窗口，你不仅可以用不同马甲帐户和cookies登录网站，还有完全不同的Chrome扩展、主题、网页应用、收藏夹、设置参数等等。</p>
<p><strong>问：缺少Google API密钥,chromium的部分功能无法使用怎么解决？</strong></p>
<p>1、在使用chrome浏览器便携版-chrome的时候，会出现以下问题：</p>
<p>2、缺少google api密钥,因此chromium的部分功能将无法使用</p>
<p>3、这时候，谷歌账户无法登陆，十分不便。</p>
<h2 id="safari浏览器">Safari浏览器</h2>
<p>【下载地址】</p>
<blockquote>
<p>Safari.zip：https://o8.cn/kigrgU<br>
密码：dgcd</p>
</blockquote>
<p>Safari是目前在windows平台上速度最快的浏览器，业界标准iBech测试显示，Safari浏览网页速度是IE 7的两倍，Firefox 2的1.6倍</p>
<p>Safari浏览器是苹果Mac OS X平台的多标签的网络浏览器。苹果电脑发布了Windows版本的Safari，它支持Windows XP和Windows Vista操作系统，目前Safari 5正式版已经发布。多国语言版，自适应简体中文界面。Safari5完美支持HTML5，还包括大量全新改进。</p>
<p>速度不错但是兼容性不佳，用Safari 点下载链接是不会打开迅雷的，同时qq秀也不支持，许多东西要装插件。不过界面很漂亮很智能，用的舒服。</p>
<p>顺便提示一下Safari 用迅雷的方法 ：先打开迅雷 ，在safari里找到要下载的东西之后选中链接右键复制，迅雷会自己跳出来</p>
<h3 id="软件特色-3">软件特色</h3>
<p>Safari 是第一个支持 HTML5 音频和视频标签的浏览器。开发者可以将媒体文件直接整合到标准网页中，大大节约了开发时间，提高了响应速度。<br>
　　对 HTML5 视频的全屏和隐藏字幕支持让开发者提供了更丰富、更易于获得的视频观看体验。<br>
　　有了地理定位支持，选择了共享位置信息的用户可定制个性化网站内容。<br>
　　Safari 还支持 HTML5 离线科技，基于网站的应用程序可以将信息存在本地硬盘中，无需网络连接也可随时使用。<br>
　　苹果浏览器功能特点介绍：<br>
　　多线程架构，让每一个网页都在独立线程中运行，互不影响，速度更快。<br>
　　内置播放器，自动匹配歌词，显示音乐频谱，给歌曲评分，设置智能播放列表。<br>
　　实时更新的黑白名单功能，阻止尽可能多的非法网站，为您的网络冲浪护航。<br>
　　苹果浏览器是目前占用内存最低的软件之一，使得浏览网页运行更快。<br>
　　苹果浏览器是一款集网络浏览和网络搜索于一体，使用户在冲浪更方便。</p>
<h3 id="发展趋势">发展趋势</h3>
<p><strong>苹果Safari浏览器增长速度比微软Edge快</strong></p>
<p>在浏览器市场，苹果和微软从来都不是直接竞争对手，毕竟每一家自己的浏览器方案都仅限于特定的平台或设备。其中，苹果的 Safari 主要针对 macOS 平台，其 Windows 版本在 2012 年就停止更新了。而微软现在全新的 Edge，如今只能在 Windows 10 上使用，并无针对其他平台的计划。</p>
<p>不过，现在有一个有趣的事实是，尽管微软 Windows 10 系统本身增长速度比 macOS 快得多，但实际上苹果的 Safari 浏览器增长速度比微软 Edge 还要快。</p>
<p>根据市场调研提供的统计数据了解，2017 年 5 月份，微软 Edge 浏览器仅提高了 0.01% 的市场份额，从 5.62% 增长到 5.63%。对比之下，苹果的 Safari 浏览器获得了 0.12% 的市场份额增长，在一个月时间内从 3.44% 增长到了 3.56%。</p>
<p>当然了，无论是微软 Edge 还是苹果 Safari，其实都是五十步笑百步，毕竟两者只占据了整个市场很小的市场份额。目前在整个浏览器市场上，最大魔头当属谷歌Chrome浏览器，目前在桌面平台上所占据的市场份额高达 59.36%。这意味着，无论是苹果 Mac 还是微软 Windows 平台，平均每 10 台电脑中就有高达 6 台安装了 Chrome 浏览器。</p>
<p>至于其他浏览器平台，Internet Explorer 的市场占有率仅剩下 17.55%，而 Mozilla Firefox 则为 11.98％ 的市场份额。</p>
<h2 id="opera浏览器">Opera浏览器</h2>
<h3 id="下载地址-5">【下载地址】</h3>
<blockquote>
<p>Opera72.0.3798.0dev.zip：https://o8.cn/qXaOgH<br>
密码：no96</p>
</blockquote>
<p>Opera浏览器绿色便携版是一款挪威Opera Software ASA公司制作的支持多页面标签式浏览的网络浏览器，作为一款主流桌面浏览器，Opera浏览器以它的快速、小巧和比其他浏览器更佳的标准兼容性在网上受到很多人的推崇。</p>
<p>Opera支持多种操作系统，如Windows、Linux、Mac、FreeBSD、Solaris、BeOS、OS/2、QNX等，此外，Opera还有手机用的版本，在2006年更与Nintendo签下合约，提供NDS及Wii游 乐器Opera浏览器软件；也支持多语言，包括简体中文和繁体中文。</p>
<p>Opera还提供很多方便的特性，包括Wand密码管理、会话管理、鼠标手势、键盘快捷键、内置搜索引擎、智能弹出式广告拦截、网址的过滤、浏览器识别伪装和超过400种,可以方便下载更换的皮肤，界面也可以在定制模式下通过拖放随意更改。下载一个大约10M的扩展以后，它甚至可以让你用语音控制以及阅读网页（英文）。而以上的这些，包括右键菜单都是可以由用户自定义的。</p>
<p>Opera浏览器绿色便携版是一款挪威Opera Software ASA公司制作的支持多页面标签式浏览的网络浏览器，作为一款主流桌面浏览器，Opera浏览器以它的快速、小巧和比其他浏览器更佳的标准兼容性在网上受到很多人的推崇。</p>
<figure data-type="image" tabindex="13"><img src="https://thumb1.jfcdns.com/thumb/n231cz2au622sy3a/16f5de0723eb7707_600_0.jpeg" alt="img" loading="lazy"></figure>
<h3 id="功能介绍-3">功能介绍</h3>
<p><strong>更方便的同步功能</strong></p>
<p>只需登录您的 Opera 帐户，同步浏览数据 - 书签、打开的标签、密码和输入的历史记录。</p>
<p><strong>更快的运行速度</strong></p>
<p>Opera Turbo 会压缩页面数据，实现更加快速地浏览。</p>
<p><strong>更具个性的浏览器</strong></p>
<p>Opera 浏览器拥有 1,000 多个扩展，您可以轻松进行自定义。</p>
<p><strong>更简单的风格</strong></p>
<p>Opera 浏览器具有合并的搜索和地址栏功能，更能够自定义键盘快捷键和鼠标手势。</p>
<p><strong>更安全、更隐私的浏览保护</strong></p>
<p>Opera 能够保护您的浏览安全，您尽可专心浏览。</p>
<p><strong>提高效率</strong></p>
<p>最近关闭的标签、标签循环功能，以及其他小改进都能替您节省上网时间。</p>
<p><strong>获取最新新闻</strong></p>
<p>凭借 Opera 焕然一新的新闻功能，您可以从浏览器首页直接以您的语言获取最新文章。</p>
<hr>
<p>这里我偷懒了，直接引用了PC6的链接。</p>
<h2 id="vivaldi浏览器"><a href="http://www.pc6.com/softview/SoftView_148320.html">Vivaldi浏览器</a></h2>
<h2 id="anaheim浏览器"><a href="http://www.pc6.com/softview/SoftView_630941.html">Anaheim浏览器</a></h2>
<h2 id="seamonkey浏览器"><a href="http://www.pc6.com/softview/SoftView_102409.html">Seamonkey浏览器</a></h2>
<h2 id="lunascape三核心浏览器"><a href="http://www.pc6.com/softview/SoftView_49583.html">Lunascape(三核心浏览器)</a></h2>
<h2 id="yandex浏览器"><a href="http://www.pc6.com/softview/SoftView_704884.html">Yandex浏览器</a></h2>
<h2 id="microsoft-edge-devchromium-edge开发版"><a href="http://www.pc6.com/softview/SoftView_657926.html">Microsoft Edge Dev(Chromium Edge开发版)</a></h2>
<h2 id="opera-developer"><a href="http://www.pc6.com/softview/SoftView_45055.html">Opera developer</a></h2>
<h2 id="icecat冰猫浏览器"><a href="http://www.pc6.com/softview/SoftView_870168.html">IceCat(冰猫浏览器)</a></h2>
<h2 id="slashbweb开发浏览器"><a href="http://www.pc6.com/softview/SoftView_855794.html">slashB(web开发浏览器)</a></h2>
<h2 id="whale浏览器"><a href="http://www.pc6.com/softview/SoftView_694674.html">Whale浏览器</a></h2>
<h2 id="opera-gx"><a href="http://www.pc6.com/softview/SoftView_668572.html">Opera GX</a></h2>
<h2 id="科摩多安全浏览器comodo-dragon"><a href="http://www.pc6.com/softview/SoftView_48779.html">科摩多安全浏览器(Comodo Dragon)</a></h2>
<h2 id="chrome懒人版"><a href="http://www.pc6.com/softview/SoftView_722860.html">Chrome懒人版</a></h2>
<h2 id="midori-for-windows轻量级浏览器"><a href="http://www.pc6.com/softview/SoftView_55847.html">Midori for Windows(轻量级浏览器)</a></h2>
<h2 id="deepnet-explorer"><a href="http://www.pc6.com/softview/SoftView_636001.html">Deepnet Explorer</a></h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[C++ 编译优化]]></title>
        <id>https://hesy-zhoulijie.github.io/post/o2/</id>
        <link href="https://hesy-zhoulijie.github.io/post/o2/">
        </link>
        <updated>2020-10-05T05:24:15.000Z</updated>
        <content type="html"><![CDATA[<h1 id="很多人说o2很快真的吗">很多人说O2很快，真的吗？</h1>
<p>话不多说，先贴图：<br>
环境：<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202007/2006459-20200722144034061-726260855.png" alt="" loading="lazy"><br>
WSL Ubuntu 18.04LTS</p>
<pre><code class="language-cpp">sweepy@DESKTOP-M79ULPC:/mnt/c/Users/zljzl/desktop$ g++ file.cpp -o file.out
sweepy@DESKTOP-M79ULPC:/mnt/c/Users/zljzl/desktop$ vi ./file.cpp
sweepy@DESKTOP-M79ULPC:/mnt/c/Users/zljzl/desktop$ time ./file.out

real    0m0.063s
user    0m0.047s
sys     0m0.016s
sweepy@DESKTOP-M79ULPC:/mnt/c/Users/zljzl/desktop$ g++ file.cpp -o file.out -O2
sweepy@DESKTOP-M79ULPC:/mnt/c/Users/zljzl/desktop$ time ./file.out

real    0m0.013s
user    0m0.000s
sys     0m0.000s
sweepy@DESKTOP-M79ULPC:/mnt/c/Users/zljzl/desktop$ g++ file.cpp -o file.out -O3
sweepy@DESKTOP-M79ULPC:/mnt/c/Users/zljzl/desktop$ time ./file.out

real    0m0.016s
user    0m0.016s
sys     0m0.000s
sweepy@DESKTOP-M79ULPC:/mnt/c/Users/zljzl/desktop$ g++ file.cpp -o file.out -Ofast
sweepy@DESKTOP-M79ULPC:/mnt/c/Users/zljzl/desktop$ time ./file.out

real    0m0.012s
user    0m0.000s
sys     0m0.016s
</code></pre>
<p>源代码是这样的（计算1~10000000的平方和）<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202007/2006459-20200722144217257-1597748224.png" alt="" loading="lazy"></p>
<pre><code class="language-cpp">#include&lt;iostream&gt;
using namespace std;
int main(){
    int ans=0;
 for(int i=0;i&lt;10000000;i++){
     ans+=i*i;
 }
 return 0;
}
</code></pre>
<p>总而言之，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>f</mi><mi>a</mi><mi>s</mi><mi>t</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(fast)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>真的很快</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[你还在用辣么贵的的Microsoft Word？来看看这些免费的替代品吧。]]></title>
        <id>https://hesy-zhoulijie.github.io/post/free-word/</id>
        <link href="https://hesy-zhoulijie.github.io/post/free-word/">
        </link>
        <updated>2020-10-05T05:23:10.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="你还在用辣么贵的的microsoft-word">你还在用辣么贵的的Microsoft Word？</h1>
<h2 id="来看看这些免费的替代品吧">来看看这些免费的替代品吧。</h2>
]]></summary>
        <content type="html"><![CDATA[<h1 id="你还在用辣么贵的的microsoft-word">你还在用辣么贵的的Microsoft Word？</h1>
<h2 id="来看看这些免费的替代品吧">来看看这些免费的替代品吧。</h2>
<!-- more -->
<h2 id="目录">目录</h2>
<p>[toc]</p>
<h2 id="libre-office-writer">Libre Office - Writer</h2>
<blockquote>
<p>LibreOffice是OpenOffice.org办公套件衍生版， 同样自由开源，以Mozilla Public License V2.0许可证分发源代码，但相比OpenOffice增加了很多特色功能。LibreOffice拥有强大的数据导入和导出功能，能直接导入PDF文档、微软Works、LotusWord，支持主要的OpenXML格式。软件本身并不局限于Debian和Ubuntu平台，现已持Windows、Mac和其它Linux发行版等多个系统平台。</p>
</blockquote>
<h3 id="支持文件格式">支持文件格式</h3>
<p>文本文档：</p>
<pre><code>*.odm, *.sgl, *.odt,*.ott, *.sxw, *.stw, *.fodt, *.xml, *.docx,*.docm, *.dotx, *.dotm, *.doc, *.dot, *.wps, *.pdb, *.hwp, *.html, *.htm, *.lwp, *.psw, *.rft, *.sdw, *.vor, *.txt, *.wpd ,*.oth. 
</code></pre>
<h3 id="评价">评价</h3>
<p>总的来说，LibreOffice的界面没有微软Office那么华丽，但非常简单实用。它的六大组件对应Office丝毫不差，而且对系统配置要求较低，占用资源很少。支持众多扩展插件，可增加许多实用功能；一个很好的特性就是LibreOffice可以随身携带。您可以将它安装在你的优盘或便携式硬盘里，甚至是一个SD卡，随便你把它放在哪儿都可以。</p>
<h3 id="分数">分数</h3>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋆</mo><mtext> </mtext><mo>⋆</mo><mtext> </mtext><mo>⋆</mo><mtext> </mtext><mo>⋆</mo><mtext> </mtext><mo>⋆</mo></mrow><annotation encoding="application/x-tex">\star\  \star\  \star\  \star\ \star</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">⋆</span></span></span></span></p>
<h2 id="google-docs"><s>Google Docs</s></h2>
<blockquote>
<p><s>因为众所周知的原因，这里就不写了</s></p>
</blockquote>
<h2 id="wps-office">WPS Office</h2>
<blockquote>
<p>WPS Office是由金山软件股份有限公司自主研发的一款办公软件套装，可以实现办公软件最常用的文字、表格、演示，PDF阅读等多种功能。具有内存占用低、运行速度快、云功能多、强大插件平台支持、免费提供海量在线存储空间及文档模板的优点。</p>
<p>支持阅读和输出PDF（.pdf）文件、具有全面兼容微软Office97-2010格式（doc/docx/xls/xlsx/ppt/pptx等）独特优势。覆盖Windows、Linux、Android、iOS等多个平台。WPS Office支持桌面和移动办公。且WPS移动版通过Google Play平台，已覆盖超50多个国家和地区。</p>
</blockquote>
<h3 id="支持文件格式-2">支持文件格式</h3>
<pre><code>.doc.docx.dot.dotx.wps.wpt等文件格式的打开，包括加密文档；
</code></pre>
<h3 id="评价-2">评价</h3>
<p>WPS Office个人版对个人用户永久免费，包含WPS文字、WPS表格、WPS演示三大功能模块，另外有PDF阅读功能。与Microsoft Office中的Word，Excel，PowerPoint一一对应，应用XML数据交换技术，无障碍兼容docx.xlsx.pptx，pdf等文件格式，你可以直接保存和打开 Microsoft Word、Excel和 PowerPoint 文件，也可以用 Microsoft Office轻松编辑WPS系列文档。</p>
<blockquote>
<p><strong>1、云文档，云服务</strong></p>
<ul>
<li>团队：WPS云文档支持团队创建，可以按照班级与自定义创建团队，方便课件、作业、资料的存储、共享、管理以及成员操作权限控制</li>
<li>协作：支持表格、文字、演示组件的多人多端实时协作，便捷进行文件的分发、流转、回收、统计与汇总</li>
<li>安全：支持云端备份、文档加密、历史版本追溯，安全创作云文档</li>
</ul>
<p><strong>2、智能AI工具</strong></p>
<ul>
<li>PDF转换工具集：支持PDF与Word、Excel、PPT之间的格式互转，支持各种格式文档输出为图片</li>
<li>OCR：文字识别技术抓取文档内容并整理形成新文档</li>
<li>PPT：一键美化，自动识别文档结构，快速匹配模板。</li>
<li>文档翻译：支持多国语言划词取词</li>
<li>智能校对：通过大数据智能识别和更正文章中的字词错误</li>
</ul>
<p><strong>3、校园工具</strong></p>
<ul>
<li>论文查重：多平台选择，计算重复率，定位到重复段落，提供参考性替换内容</li>
<li>简历助手：多平台选择简历模板库，一次填写，一键投递</li>
<li>答辩助手：答辩框架与模板</li>
<li>会议功能：远程课堂演示支持多人多端多屏同步播放，随时随地学习、讨论、分享</li>
<li>手机遥控：手机智能控制演讲</li>
<li>演讲实录：记录课堂讲演的每一分钟，课程整理、分享与传播</li>
</ul>
<p><strong>4、绘图工具</strong></p>
<ul>
<li>思维导图：多种结构、多样板式</li>
<li>几何图、LaTeX公式图：满足学科电脑制图需求</li>
</ul>
<p><strong>5、全面兼容，支持PDF</strong></p>
<ul>
<li>全面兼容Office格式，新增PDF组建支持</li>
</ul>
<p><strong>6、素材库和知识库</strong></p>
<ul>
<li>素材库：模板、字体、动画、图表、图片、图标......资源持续更新</li>
<li>知识库：考试辅导、个人提升、职场技能、商业管理.....名师课程持续更新</li>
</ul>
</blockquote>
<h3 id="分数-2">分数</h3>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋆</mo><mtext> </mtext><mo>⋆</mo><mtext> </mtext><mo>⋆</mo><mtext> </mtext><mo>⋆</mo></mrow><annotation encoding="application/x-tex">\star\ \star\ \star\ \star</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">⋆</span><span class="mspace"> </span><span class="mord">⋆</span></span></span></span>（广告太多，扣一分）</p>
<h2 id="永中office">永中Office</h2>
<blockquote>
<p>江苏永中软件股份有限公司旗下的一款办公软件，永中office在一套标准的用户界面下集成了文字处理、电子表格和简报制作三大应用；基于创新的数据对象储藏库专利技术，有效解决了Office各应用之间的数据集成共享问题。永中Office可以在Windows、Linux等多个不同操作系统上运行。历经多个主要版本的演进，永中Office的产品功能丰富，稳定可靠，可高度替代进口的同类软件，且具备诸多创新功能，是一款自主创新的优秀国产办公软件。</p>
</blockquote>
<h3 id="支持文件格式-3">支持文件格式</h3>
<pre><code>pdf、doc、docx、xls、xlsx、ppt、pptx、uof、eio、html、txt、...
</code></pre>
<h3 id="评价-3">评价</h3>
<blockquote>
<p>永中Office开创性地将三大应用集成于一体，并通过创新的数据对象储藏库专利技术，有效解决了Office各应用之间的数据集成、应用集成、文档集成等问题，构成了一套独具特色的集成办公解决方案，引领新一代办公革命。</p>
<h4 id="应用集成">应用集成</h4>
<p>开创性地将三大应用集成在一个界面之中，统一的交互方式更便于用户的使用。应用集成同时也成为各应用间的数据集成的基础。</p>
<h4 id="数据集成">数据集成</h4>
<p>三大应用中的数据建立链接关系后，互相引用，同步更新，使数据管理和维护工作变的得心应手。</p>
<h4 id="文件集成">文件集成</h4>
<p>多个文字处理、电子表格、简报制作文档可集成于一个集成文件中。产品特有的数据对象储藏库技术支持在电子表格中存放文字处理、简报制作应用，及其他多种数据对象，对文档及数据管理工作带来了极大的便利。</p>
<h4 id="跨平台">跨平台</h4>
<p>支持在Windows、Linux和Mac OS等操作系统上运行，并确保用户一致的使用体验。永中Office进一步扩展了系统平台，可在WindowsVista操作系统中直接安装和运行。同时支持在最新MID设备及U盘上直接运行，给用户带来全新的移动办公体验。</p>
<h4 id="精确兼容">精确兼容</h4>
<p>该产品可双向精确兼容微软Office97、2000、2003各版本的文档，同时支持微软最新的Office版本2007。可打开和保存doc、xls和ppt文件；微软Office模板文件（dot、xlt和pot文件），并可打开微软Office产生的碎片文件及加密的微软Office文档。<br>
三大应用均可存取纯文本TXT格式，也支持带编码的TXT文件并可进行编码转换；文字处理应用支持存取丰富文本格式；电子表格可打开DBF、DB等数据库文件，支持存取CSV文件，文字处理和简报制作文档可保存为一组图片。</p>
<h4 id="国家标准">国家标准</h4>
<p>标文通是由国家电子政务总体组所属的中文办公软件基础标准工作组组织制定的《中文办公软件文档格式规范》国家标准（简称标文通即UOF）是我国拥有自主知识产权的文档格式标准，该标准将为我国建立自主可控的信息产业发挥重要作用。永中Office 2010全面兼容标文通，开启中国标文通标准新纪元！<br>
标文通标准的制定，使得国产办公软件厂商能够有效掌握国内市场竞争的主动权，获得更大的生存空间。标文通标准是一个开放的、基于XML的标准，使用标文通文档格式进行信息交换，用户可以真正掌握文档信息的控制权。<br>
永中Office 2010基于自主开发环境，采用源代码级底层支持，具有存取速度快、内容完整、标准符合性高等特点，使得永中Office成为支持标文通文档标准的最佳Office产品。</p>
<h4 id="中文特色">中文特色</h4>
<p>永中Office具有符合国人使用习惯的特性，提供极其丰富的中文特色功能：文本竖排、稿纸信笺、自加注拼音、简繁体转换、中文项目编号、中文信封模板、中文斜线表格、信封打印工具、中文版式、文字工具、中文数字分节、内码转换、首字下沉、带圈字符。</p>
<h4 id="科教功能">科教功能</h4>
<p>产品提供涵盖数学、物理、化学、生物、地理、语言等多个领域，2000多种常用素材和多种管理工具。用户也可根据需要通过科教管理器或科教面板进行素材的管理和使用。产品支持素材的自定义，数理化公式编辑，实验器材以及生物地理等素材应用，函数图像动态呈现等实用的科教功能。</p>
<h4 id="国际化">国际化</h4>
<p>遵循国际化标准，支持双向文本编辑。提供简体中文、繁体中文、英文、日文、阿拉伯文、法文、西班牙文等多种语言版本，蒙文，俄罗斯文等语言版本正在开发中。</p>
<h4 id="功能完备">功能完备</h4>
<p>几乎全面覆盖了微软Office 2003之Excel、Word、PowerPoint所有功能，并有诸多实用的创新功能，既能满足用户的传统办公需要，又能带给用户很多创新的体验。</p>
<h4 id="二次开发">二次开发</h4>
<p>永中Office针对企业应用系统开发整合需求，在二次开发方面参照微软Office定义和实现的二次开发接口，结合永中Office的自主创新，用JAVA语言设计出了一整套Office接口和对象层次，使得熟悉面向对象设计的程序员更加容易地对永中Office进行二次开发。<br>
永中Office提供功能强大的宏编辑器和丰富的二次开发接口API，支持Office内部开发和外部调用。宏编辑器（MacroEditor）可编辑和运行Java代码，开发环境简单易学。永中Office提供了符合COM规范的接口，通过COM接口可支持使用C++、VB、Delphi等开发语言调用Office功能。永中Office可通过Applet方式或ActiveX方式嵌入浏览器或者其他应用程序运行。通过插件可对Office内部功能进行扩展，永中公司提供了基于永中Office的插件规范，按照该规范开发的第三方插件，均可在永中产品中应用。<br>
永中Office 2010全面支持电子政务平台，能够实现OA系统平滑移植，满足政府和企业信息化的需求。</p>
</blockquote>
<h3 id="分数-3">分数</h3>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋆</mo><mtext> </mtext><mo>⋆</mo><mtext> </mtext><mo>⋆</mo><mtext> </mtext><mo>⋆</mo></mrow><annotation encoding="application/x-tex">\star\ \star\ \star\ \star</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">⋆</span><span class="mspace"> </span><span class="mord">⋆</span></span></span></span>（文件太大，功能繁琐）</p>
<h2 id="石墨文档"><a href="shimo.im">石墨文档</a></h2>
<blockquote>
<p>石墨文档是中国一款支持云端实时协作的企业办公服务软件（功能类比于Google Docs、Quip），可以实现多人同时在同一文档及表格上进行编辑和实时讨论，同步响应速度达到毫秒级。</p>
</blockquote>
<h3 id="支持文档格式">支持文档格式</h3>
<figure data-type="image" tabindex="1"><img src="https://i.loli.net/2020/08/02/1SOIqJ35PBoQjbE.png" alt="image.png" loading="lazy"></figure>
<h3 id="评价-4">评价</h3>
<blockquote>
<h4 id="1-实时保存">1、实时保存</h4>
<p>文档/表格实时保存在云端，即写即存。在编辑过程中，文档页面上方会实时提示文档的状态，包括正在保存、保存成功和最后更新时间。</p>
<h4 id="2-轻松分享">2、轻松分享</h4>
<p>添加协作者，邀请小伙伴来一起协作，你可以自行控制文档/表格的协作权限，只读/可写/私有，或协作或私密。</p>
<h4 id="3-实时协作">3、实时协作</h4>
<p>实时协作可以多人多平台同时编辑在线文档和表格。</p>
<h4 id="4-还原历史">4、还原历史</h4>
<p>所有的编辑历史都将自动保存，随时追溯查看，还可一键还原到任一历史版本。</p>
</blockquote>
<h3 id="分数-4">分数</h3>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋆</mo><mtext> </mtext><mo>⋆</mo><mtext> </mtext><mo>⋆</mo></mrow><annotation encoding="application/x-tex">\star\ \star\ \star</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">⋆</span></span></span></span>（功能比较少）</p>
<h2 id="onedrive-for-business">Onedrive For Business</h2>
<h3 id="如果你们的学校公司的邮箱登陆界面是这样的">如果你们的学校/公司的邮箱登陆界面是这样的。。。</h3>
<figure data-type="image" tabindex="2"><img src="https://img2020.cnblogs.com/blog/2006459/202008/2006459-20200803104556453-1510448254.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://i.loli.net/2020/08/02/xEwbQkLahMSXJzP.png" alt="image.png" loading="lazy"></figure>
<p>简单来说，如果你们的组织使用的是Office邮箱系统，那么恭喜你，你有1T的免费存储空间。。。</p>
<figure data-type="image" tabindex="4"><img src="https://i.loli.net/2020/08/02/Pobx21R35JUqI4e.png" alt="image.png" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://i.loli.net/2020/08/02/TSWXPDZ9vuE6gOc.png" alt="image.png" loading="lazy"></figure>
<p>比如说这是我的</p>
<p><s>细细看来好像没有基本版office。。。</s></p>
<h3 id="这里的office-online-并没有挂">这里的Office Online 并没有挂</h3>
<figure data-type="image" tabindex="6"><img src="https://i.loli.net/2020/08/02/lfR5BbTtsaDIP72.png" alt="image.png" loading="lazy"></figure>
<p>内容经过处理，但是大部分功能都有。</p>
<p>还有很多我不知道干什么的软件<br>
<img src="https://i.loli.net/2020/08/02/DsJTdQF3kzyPh5Z.png" alt="image.png" loading="lazy"></p>
<h2 id="好了这就是总结的几个可以替代office的软件了希望大家喜欢">好了，这就是总结的几个可以替代Office的软件了，希望大家喜欢。</h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[北斗卫星为你做了什么？]]></title>
        <id>https://hesy-zhoulijie.github.io/post/beidou/</id>
        <link href="https://hesy-zhoulijie.github.io/post/beidou/">
        </link>
        <updated>2020-10-05T05:20:34.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="北斗卫星为你做了什么">北斗卫星为你做了什么？</h1>
]]></summary>
        <content type="html"><![CDATA[<h1 id="北斗卫星为你做了什么">北斗卫星为你做了什么？</h1>
<!-- more -->
<iframe src="//player.bilibili.com/player.html?aid=414001980&bvid=BV1TV411z7aB&cid=218691406&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" height=400 width=600> </iframe>
<p>2020 年 6 月 23 日，一枚长三乙运载火箭在西昌卫星发射中心顺利点火、升空。</p>
<p>经过近 26 分钟的飞行、调姿，将位于顶部仪器舱的导航卫星送入预定轨道，成功完成了北斗全球卫星导航系统的星座部署。</p>
<figure data-type="image" tabindex="1"><img src="https://cdn.sspai.com//2020/08/02/cf346aae86831c3e5279827e48bb4359.png" alt="" loading="lazy"></figure>
<p>这是北斗三号的最后一颗全球组网卫星。7 月 29 日，北斗官方宣布这颗卫星已经完成在轨测试，正式入网工作。</p>
<p>北斗系统究竟意味着什么？覆盖全球的精准定位到底有多难?</p>
<p>利用卫星实现导航定位的技术称为 GNSS（Global Navigation Satellite System）全球卫星导航系统，今天主要有美国的 GPS、俄罗斯的格洛纳斯、欧盟的伽利略，以及中国的北斗。</p>
<figure data-type="image" tabindex="2"><img src="https://cdn.sspai.com//2020/08/02/972c2337f9dbe9d25554f40da8e0c10e.png" alt="" loading="lazy"></figure>
<p>建设这样一个能覆盖全球的卫星导航系统并不容易。</p>
<p>中国从 1994 年开始，分三步建设北斗卫星导航系统。</p>
<p>在 2000 年发射了两颗卫星，建成北斗一号，为中国用户提供服务；2012 年完成 14 颗卫星发射，建成北斗二号，服务范围扩大至亚太地区；2020 年完成 30 颗卫星发射、组网，全面建成北斗三号，覆盖全球。</p>
<p>事实上，北斗在 26 年间一共发射了 59 颗卫星，目前除去退役、失效和用于试验的，有 45 颗卫星正常在轨工作，数量要多于其他三个系统。</p>
<figure data-type="image" tabindex="3"><img src="https://cdn.sspai.com//2020/08/02/c51a6464b23413d094da880973af3c9b.png" alt="" loading="lazy"></figure>
<p>此外，北斗的星座架构也不同。</p>
<p>GPS、格洛纳斯、伽利略的卫星基本都处在高度约 20,000 千米的中圆地球轨道。投影在地球上的是这种波浪状的运行轨迹，卫星分时段覆盖不同的区域，多颗卫星环绕覆盖全球。</p>
<figure data-type="image" tabindex="4"><img src="https://cdn.sspai.com//2020/08/02/20bda1ee9efbb07197dac95151b6bb42.png" alt="" loading="lazy"></figure>
<p>而北斗除了在中圆地球轨道有 27 颗卫星，环绕全球外，还有 10 颗在倾斜地球同步轨道，8 字形的轨迹可以增强亚太地区的信号覆盖；还有 8 颗在地球静止轨道，能全时段服务于亚太地区。</p>
<figure data-type="image" tabindex="5"><img src="https://cdn.sspai.com//2020/08/02/bd91ac94f3c7f60bec12e9107bfc0c7d.gif" alt="" loading="lazy"></figure>
<p>更多的卫星和轨道类型增强了北斗对全球，尤其是东半球的覆盖。</p>
<p>这两张图是北斗和 GPS 现役卫星的运行轨迹。</p>
<figure data-type="image" tabindex="6"><img src="https://cdn.sspai.com//2020/08/02/9d69c0bcb714a18753c388bc503ee1b2.png" alt="" loading="lazy"></figure>
<p>而这是两者在全球任意地点可见的卫星数目图，颜色越深，当地可见的卫星越多。北斗在东半球大部分区域可见的卫星能达到 14~16 颗乃至更多，在其他地区也至少能见到 6 颗。</p>
<figure data-type="image" tabindex="7"><img src="https://cdn.sspai.com//2020/08/02/b84d3c1f2dd73e3c1e04180d13a8764a.png" alt="" loading="lazy"></figure>
<p>那么这些卫星是如何实现全球定位的呢？</p>
<p>当你在地球上某个位置，拿着一个可以接收卫星信号的设备，比如手机，而天上飞着卫星，此时想要求取你在空间中的坐标 x、y、z，关键是测量卫星跟你之间的距离 S。</p>
<p>首先，通过卫星的星历数据能计算出卫星的坐标 x1、y1、z1，这些是已知的。</p>
<figure data-type="image" tabindex="8"><img src="https://cdn.sspai.com//2020/08/02/77d3a3c2cb56b2a82ea76707b2cb2ccf.gif" alt="" loading="lazy"></figure>
<p>只需要根据勾股定理求立方体的对角线长度，就能用这个式子表示卫星跟你之间的距离 S。</p>
<p>其次，卫星发出的电磁波信号也能测距。已知电磁波传播的速度，光速 c 每秒近 30 万公里（299,792,458 m/s），乘上电磁波从卫星发出到手机接收所耗费的时间 tB-tA， 即为距离。</p>
<figure data-type="image" tabindex="9"><img src="https://cdn.sspai.com//2020/08/02/4c01b3b1bbebb59792c19e906cafcbfe.png" alt="" loading="lazy"></figure>
<p>这个时间和距离的计算实际上要靠测距码。</p>
<p>卫星和手机会同时按相同规则持续生成一段测距码，而卫星会将测距码通过电磁波发送给手机。</p>
<p>但发送过程需要时间，所以手机接收到卫星发来的测距码时，会发现和自己生成的测距码有偏移，即为电磁波传播的时间。</p>
<p>以北斗的 B1C 信号为例，测距码速率为 1.023 Mbps，单个码片的宽度为速率的倒数，即 0.977517 μs。当偏移了 12 万个码片，即电磁波传播时间约为 0.117 秒，可算出距离约为 35,166 公里。</p>
<p>知道距离，就可以得到这个等式，其中三个未知量 x、y、z 仍然无法求解。但只要有 3 颗卫星，就能列出 3 个等式构成方程组，进而求出你的坐标 x、y、z。</p>
<figure data-type="image" tabindex="10"><img src="https://cdn.sspai.com//2020/08/02/defacbf0db2148dda324a3485d1bd548.png" alt="" loading="lazy"></figure>
<p>看起来似乎轻松又简单，然而，得到这样的坐标根本不准。</p>
<p>因为里面任何参数哪怕再小的误差都会让定位大幅偏移，比如电磁波传播的时间，只要 0.000001 秒的误差，计算距离就会变化 300 米。</p>
<p>为了减小这个误差，我们首先得考虑在卫星上的钟准不准。</p>
<figure data-type="image" tabindex="11"><img src="https://cdn.sspai.com//2020/08/02/eb760d626c532f3fa0a6fa95d93245af.png" alt="" loading="lazy"></figure>
<p>今天北斗卫星上搭载的原子钟，精度可达 300 万年只差一秒，但在太空中运行，它却会遭遇相对论效应。</p>
<p>简单来说，根据狭义相对论，卫星相对地面快速运动，那么从地面观测卫星上的时间会变慢。</p>
<p>而根据广义相对论，卫星相比地面离地心更远，拥有的引力势能绝对值也更小，时间又会比地面更快。</p>
<p>两者对卫星上时钟的综合影响就是比地面上的钟走得更快，其变化量可以用这个公式表示。</p>
<figure data-type="image" tabindex="12"><img src="https://cdn.sspai.com//2020/08/02/397cbfcf111e35a5fbd63c052fb0eeab.png" alt="" loading="lazy"></figure>
<p>那么如何才能消去这个变化量呢？</p>
<p>公式的前半部分可以通过地心引力常数 μ、光速 c 等数值计算得出。假设卫星在距离地心 36,000 公里的圆轨道运行，那么卫星上的时间会比地面每秒快上 0.00000000051 秒左右。</p>
<p>消除这部分的变化量可以在卫星发射之前就按一定倍数先调低卫星上原子钟的频率，让它走得更慢。</p>
<figure data-type="image" tabindex="13"><img src="https://cdn.sspai.com//2020/08/02/2117c3f5f4bad0bf5ad49a68de3100ee.png" alt="" loading="lazy"></figure>
<p>但卫星实际运行的轨道其实是椭圆，由相对论效应引发的变化会有周期性变化，主要是公式的后半部分。</p>
<p>当然，这也可以通过轨道偏心率、长半轴、偏近点角等参数计算得出数值实时修正。</p>
<figure data-type="image" tabindex="14"><img src="https://cdn.sspai.com//2020/08/02/f62820cdcb4615188a4140de6fef5808.png" alt="" loading="lazy"></figure>
<p>但这还不够，原子钟在无人维护情况下本身运行时仍有误差，卫星坐标在计算时也有误差，电磁波在大气中传播时受电离层、对流层影响速度也会变化。</p>
<p>不过别担心，今天已经有各种各样的数学模型可以计算出这些误差的数值。</p>
<figure data-type="image" tabindex="15"><img src="https://cdn.sspai.com//2020/08/02/00b0356e4a4cdca31bd4573a4c82f1e8.png" alt="" loading="lazy"></figure>
<p>然而，还有个麻烦的误差，就是地面接收机的时间误差。像手机这类设备会因为各种各样的原因出现误差，且误差大小很难直接计算修正。</p>
<p>别慌！</p>
<p>我们可以把这个误差也设为一个未知量，引入第 4 颗卫星，得到四个等式就能求出接收机的时间误差和坐标这四个未知量，进而更精确地确定你的位置。</p>
<figure data-type="image" tabindex="16"><img src="https://cdn.sspai.com//2020/08/02/2c36972247b6168fc5cb38447dbdeadb.png" alt="" loading="lazy"></figure>
<p>当然，北斗实现精准定位的技术远远不止这些。今天，北斗可以做到在全球的定位精度优于 10 米，在亚太地区的定位精度优于 5 米。</p>
<figure data-type="image" tabindex="17"><img src="https://cdn.sspai.com//2020/08/02/fb441b220c625342ab336bd9e2225688.png" alt="" loading="lazy"></figure>
<p>且通过基于大量地面基准站的地基增强、星基增强等方式，更能实现分米级、厘米级乃至后处理毫米级的高精度定位。</p>
<p>这种技术实力的应用在当代生活中已经随处可见。从大坝监测、电力通信、精准农业，到公交车、共享单车、手机，你都可以看到北斗的身影。</p>
<figure data-type="image" tabindex="18"><img src="https://cdn.sspai.com//2020/08/02/ed763f7f976f6a75cf8d564a92ccf97e.png" alt="" loading="lazy"></figure>
<p>而在这个利用卫星实现全球定位的过程中，凝结了无数科学家、工程师对于误差的锱铢必较。</p>
<figure data-type="image" tabindex="19"><img src="https://cdn.sspai.com//2020/08/02/7d55666c355035ab98e95a719beb0bd8.png" alt="" loading="lazy"></figure>
<p>所以当你再仰望苍穹时，别忘了北斗除了有七星之外，还有 45 颗卫星漂浮在数万公里的高空，让你得知自己身在何处，又去往何方。</p>
<figure data-type="image" tabindex="20"><img src="https://cdn.sspai.com//2020/08/02/b401ec5cd4011c042bc0c94f1f8c91f3.gif" alt="" loading="lazy"></figure>
<p>src=https://sspai.com/post/61857</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[C++ STL 迭代器]]></title>
        <id>https://hesy-zhoulijie.github.io/post/cppiter/</id>
        <link href="https://hesy-zhoulijie.github.io/post/cppiter/">
        </link>
        <updated>2020-10-05T05:17:59.000Z</updated>
        <content type="html"><![CDATA[<h1 id="c-stl-迭代器">C++ STL 迭代器</h1>
<p>STL概述的一个重要特点是数据结构和算法的分离。尽管这是个简单的概念，但这种分离确实使得变得非常通用。例如，由于的函数是完全通用的，你可以用它来操作几乎任何数据集合，包括链表，容器和数组。</p>
<p>[TOC]</p>
<h2 id="要点">要点</h2>
<p>STL算法作为模板函数提供。为了和其他组件相区别，以后接一对圆括弧的方式表示，例如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>o</mi><mi>r</mi><mi>t</mi><mo>(</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">sort()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span>。</p>
<p>STL另一个重要特性是它不是面向对象的。为了具有足够通用性，主要依赖于模板而不是封装，继承和虚函数（多态性）的三个要素。你在中找不到任何明显的类继承关系。这好像是一种倒退，但这正好是使得的组件具有广泛通用性的底层特征。另外，由于是基于模板，内联函数的使用使得生成的代码短小高效。</p>
<h3 id="提示">提示</h3>
<p>确保在编译使用了STL的 程序中至少要使用-O优化来保证内联扩展。</p>
<h2 id="stl-组件">STL 组件</h2>
<p>STL提供了大量的模板类和函数，可以在OOP和常规 编程中使用。所有的STL的大约50个算法都是完全通用的，而且不依赖于任何特定的数据类型。下面的小节说明了三个基本的STL  组件：</p>
<p>1）迭代器提供了访问容器中对象的方法。例如，可以使用一对迭代器指定list或vector中的一定范围的对象。迭代器就如同一个指针。事实上，C++的指 针也是一种迭代器。但是，迭代器也可以是那些定义了<code>operator*()</code>以及其他类似于指针的操作符地方法的类对象。</p>
<p>2）容器是一种数据结构，如list，vector，和deques ，以模板类的方法提供。为了访问容器中的数据，可以使用由容器类输出的迭代器。</p>
<p>3）算法是用来操作容器中的数据的模板函数。例如，STL用sort()来对一个vector中的数据进行排序，用find()来搜索一个list中的对象。 函数本身与他们操作的数据的结构和类型无关，因此他们可以在从简单数组到高度复杂容器的任何数据结构上使用。</p>
<h2 id="头文件">头文件</h2>
<p>为了避免和其他头文件冲突， STL的头文件不再使用常规的.h扩展。为了包含标准的string类，迭代器和算法，用下面的指示符：</p>
<pre><code class="language-c">#include &lt;string&gt; 
#include &lt;iterator&gt; 
#include &lt;algorithm&gt;  
</code></pre>
<p>如果你查看STL的头文件，你可以看到象<code>iterator.h</code>和<code>stl_iterator.h</code>这样的头文件。由于这些名字在各种STL实现之间都可能不同，你应该避免使用这些名字来引用这些头文件。为了确保可移植性，使用相应的没有.h后缀的文件名。表1列出了最常使用的各种容器类的头文件。该表并 不完整，对于其他头文件，我将在本章和后面的两章中介绍。</p>
<p><strong>表 1. STL头文件和容器类</strong></p>
<table>
<thead>
<tr>
<th>#include</th>
<th>Container Class</th>
</tr>
</thead>
<tbody>
<tr>
<td><deque></td>
<td>deque</td>
</tr>
<tr>
<td><list></td>
<td>list</td>
</tr>
<tr>
<td><map></td>
<td>map, multimap</td>
</tr>
<tr>
<td><queue></td>
<td>queue, priority_queue</td>
</tr>
<tr>
<td><set></td>
<td>set, multiset</td>
</tr>
<tr>
<td><stack></td>
<td>stack</td>
</tr>
<tr>
<td><vector></td>
<td>vector, vector<bool></td>
</tr>
</tbody>
</table>
<h2 id="名字空间">名字空间</h2>
<p>你的编译器可能不能识别名字空间。名字空间就好像一个信封，将标志符封装在另一个名字中。标志符只在名字空间中存在，因而避免了和其他标志符冲突。例如，可能有其他库和 程序模块定义了<code>sort()</code>函数，为了避免和STL地sort()算法冲突，STL的sort()以及其他标志符都封装在名字空间std中。STL的sort()算法编译为<code>std::sort()</code>，从而避免了名字冲突。 尽管你的编译器可能没有实现名字空间，你仍然可以使用他们。为了使用STL，可以将下面的指示符插入到你的源代码文件中，典型地是在所有的#include指示符的后面：</p>
<pre><code class="language-cpp">using namespace std;
```

##  迭代器

迭代器提供对一个容器中的对象的访问方法，并且定义了容器中对象的范围。迭代器就如同一个指针。事实上，C++的指针也是一种迭代器。但是，迭代器不仅仅是指针，因此你不能认为他们一定具有地址值。例如，一个数组索引，也可以认为是一种迭代器。 

迭代器有各种不同的创建方法。程序可能把迭代器作为 一个变量创建。一个STL容器类可能为了使用一个特定类型的数据而创建一个迭代器。作为指针，必须能够使用*操作符类获取数据。你还可以使用其他数学操作 符如$++$。典型的，++操作符用来递增迭代器，以访问容器中的下一个对象。如果迭代器到达了容器中的最后一个元素的后面，则迭代器变成past-the- end值。使用一个past-the-end值得指针来访问对象是非法的，就好像使用NULL或为初始化的指针一样。 

### 提示 

STL不保证可以从另一个迭代器来抵达一个迭代器。例如，当对一个集合中的对象排序时，如果你在不同的结构中指定了两个迭代器，第二个迭代器无法从第一个迭代器抵达，此时程序注定要失败。这是STL灵活性的一个代价。STL不保证检测毫无道理的错误。 



### 迭代器的类型

对于STL数据结构和算法，你可以使用五种迭代器。下面简要说明了这五种类型：

- Input iterators 提供对数据的只读访问。 
- Output iterators 提供对数据的只写访问 
- Forward iterators 提供读写操作，并能向前推进迭代器。 
- Bidirectional iterators提供读写操作，并能向前和向后操作。 
- Random access iterators提供读写操作，并能在数据中随机移动。 

尽管各种不同的STL实现细节方面有所不同，还是可以将上面的迭代器想象为一种类继承关系。从这个意义上说，下面的迭代器继承自上面的迭代器。由于 这种继承关系，你可以将一个Forward迭代器作为一个output或input迭代器使用。同样，如果一个算法要求是一个bidirectional 迭代器，那么只能使用该种类型和随机访问迭代器。  

### 指针迭代器

正如下面的小程序显示的，一个指针也是一种迭代器。该程序同样显示了STL的一个主要特性——它不只是能够用于它自己的类类型，而且也能用于任何C或C++类型。

Listing 1, iterdemo.cpp, 显示了如何把指针作为迭代器用于STL的find()算法来搜索普通的数组。 

```cpp
#include &lt;iostream.h&gt;
#include &lt;algorithm&gt;
 
using namespace std;
 
#define SIZE 100
int iarray[SIZE];   
 
int main()
{
  iarray[20] = 50;
  int* ip = find(iarray, iarray + SIZE, 50);
  if (ip == iarray + SIZE)
    cout &lt;&lt; &quot;50 not found in array&quot; &lt;&lt; endl;
  else
    cout &lt;&lt; *ip &lt;&lt; &quot; found in array&quot; &lt;&lt; endl;
  return 0;
}

```

在引用了I/O流库和STL算法头文件（注意没有.h后缀），该 程序告诉编译器使用std名字空间。使用std名字空间的这行是可选的，因为可以删除该行对于这么一个小程序来说不会导致名字冲突。  程序中定义了尺寸为SIZE的全局数组。由于是全局变量，所以运行时数组自动初始化为零。下面的语句将在索引20位置处地元素设置为50,并使用find()算法来搜索值50:  

```cpp
iarray[20] = 50;
int* ip = find(iarray, iarray + SIZE, 50);
```

find() 函数接受三个参数。头两个定义了搜索的范围。由于C和C++数组等同于指针，表达式`iarray`指向数组的第一个元素。而第二个参数`iarray + SIZE`等同于`past-the-end` 值，也就是数组中最后一个元素的后面位置。第三个参数是待定位的值，也就是50。find()函数返回和前两个参数相同类型的迭代器，这儿是一个指向整数 的指针ip。  



提示 

必须记住STL使用模板。因此，STL函数自动根据它们使用的数据类型来构造。 为了判断find()是否成功，例子中测试ip和 past-the-end 值是否相等：  

```cpp
if (ip == iarray + SIZE) ...
```

如果表达式为真，则表示在搜索的范围内没有指定的值。否则就是指向一个合法对象的指针，这时可以用下面的语句显示：

```cpp
cout &lt;&lt; *ip &lt;&lt; &quot; found in array&quot; &lt;&lt; endl;
```

测试函数返回值和$NULL$是否相等是不正确的。不要象下面这样使用：

``` cpp
int* ip = find(iarray, iarray + SIZE, 50);
if (ip != NULL) ...  // ??? incorrect
```

当使用STL函数时，只能测试`ip`是否和`past-the-end` 值是否相等。尽管在本例中ip是一个C++指针,其用法也必须符合STL迭代器的规则。 

### 容器迭代器

尽管C++指针也是迭代器，但用的更多的是容器迭代器。容器迭代器用法和iterdemo.cpp一样，但和将迭代器申明为指针 变量不同的是，你可以使用容器类方法来获取迭代器对象。两个典型的容器类方法是`begin()`和`end()`。它们在大多数容器中表示整个容器范围。其他一 些容器还使用`rbegin()`和`rend()`方法提供反向迭代器，以按反向顺序指定对象范围。 下面的    程序创建了一个矢量容器（STL的和数组等价的对象），并使用迭代器在其中搜索。该    程序和前一章中的程序相同。


```cpp
Listing 2. vectdemo.cpp  #include &lt;iostream.h&gt;
#include &lt;algorithm&gt;
#include &lt;vector&gt;
 
using namespace std;
 
vector&lt;int&gt; intVector(100);
 
void main()
{
  intVector[20] = 50;
  vector&lt;int&gt;::iterator intIter =
    find(intVector.begin(), intVector.end(), 50);
  if (intIter != intVector.end())
    cout &lt;&lt; &quot;Vector contains value &quot; &lt;&lt; *intIter &lt;&lt; endl;
  else
    cout &lt;&lt; &quot;Vector does not contain 50&quot; &lt;&lt; endl;
}
 

```

注意用下面的方法显示搜索到的数据： 

```cpp
cout &lt;&lt; &quot;Vector contains value &quot; &lt;&lt; *intIter &lt;&lt; endl;
```

### 常量迭代器

和指针一样，你可以给一个迭代器赋值。例如，首先申明一个迭代器：``` vector&lt;int&gt;::iterator first;```
该语句创建了一个`vector&lt;int&gt;`类的迭代器。下面的语句将该迭代器设置到```int  Vector```的第一个对象，并将它指向的对象值设置为123：

```cpp
first = intVector.begin();
*first = 123;
```

这种赋值对于大多数容器类都是允许的，除了只读变量。为了防止错误赋值，可以申明迭代器为： 

```cpp
const vector&lt;int&gt;::iterator result;
result = find(intVector.begin(), intVector.end(), value);
if (result != intVector.end())
  *result = 123;  // ???
```</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[C++中的inline用法]]></title>
        <id>https://hesy-zhoulijie.github.io/post/C++inline/</id>
        <link href="https://hesy-zhoulijie.github.io/post/C++inline/">
        </link>
        <updated>2020-10-05T05:17:25.000Z</updated>
        <content type="html"><![CDATA[<h1 id="c中的inline用法">C++中的<code>inline</code>用法<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h1>
<h2 id="目录">目录</h2>
<p>[toc]</p>
<h2 id="1-引入inline关键字的原因">1. 引入inline关键字的原因</h2>
<p>在c/c++中，<strong>为了解决</strong>一些频繁调用的小函数大量消耗栈空间（栈内存）的问题，特别的引入了inline修饰符，表示为内联函数。</p>
<p><strong>栈空间</strong>就是指放置程序的局部数据（也就是函数内数据）的内存空间。</p>
<p>在系统下，栈空间是有限的，假如频繁大量的使用就会造成因栈空间不足而导致程序出错的问题，如，函数的死循环递归调用的最终结果就是导致栈内存空间枯竭。</p>
<p>下面我们来看一个例子：</p>
<pre><code class="language-cpp">#include &lt;stdio.h&gt;
//函数定义为inline即:内联函数
inline char* dbtest(int a) {
    return (i % 2 &gt; 0) ? &quot;奇&quot; : &quot;偶&quot;;
} 

int main()
{
   int i = 0;
   for (i=1; i &lt; 100; i++) {
       printf(&quot;i:%d    奇偶性:%s /n&quot;, i, dbtest(i));    
   }
}
</code></pre>
<p>上面的例子就是标准的内联函数的用法，使用inline修饰带来的好处我们表面看不出来，其实，在内部的工作就是在每个for循环的内部任何调用*<strong>dbtest(i)*<strong>的地方都换成了</strong>*(i%2&gt;0)?”奇”:”偶”*</strong>，这样就避免了频繁调用函数对栈内存重复开辟所带来的消耗。</p>
<h2 id="2-inline使用限制">2. inline使用限制</h2>
<p>inline的使用是<strong>有所限制的</strong>，inline只适合涵数体内代码简单的涵数使用，不能包含复杂的结构控制语句例如while、switch，并且不能内联函数本身不能是直接递归函数（即，自己内部还调用自己的函数）。</p>
<h2 id="3-inline仅是一个对编译器的建议">3. inline仅是一个对编译器的建议</h2>
<p>inline函数仅仅是一个<strong>对编译器的建议</strong>，所以<strong>最后能否真正内联，看编译器的意思</strong>，它如果认为函数不复杂，能在调用点展开，就会真正内联，并不是说声明了内联就会内联，声明内联只是一个建议而已。</p>
<h2 id="4-建议inline函数的定义放在头文件中">4. 建议：inline函数的定义放在头文件中</h2>
<p>其次，因为内联函数要在调用点展开，所以<strong>编译器必须随处可见内联函数的定义</strong>，要不然就成了非内联函数的调用了。所以，这要求每个调用了内联函数的文件都出现了该<strong>内联函数的定义</strong>。</p>
<p>因此，将<strong>内联函数的定义</strong>放在<strong>头文件</strong>里实现是合适的，省却你为每个文件实现一次的麻烦。</p>
<p><strong>声明跟定义要一致</strong>：如果在每个文件里都实现一次该内联函数的话，那么，最好保证每个定义都是一样的，否则，将会引起未定义的行为。如果不是每个文件里的定义都一样，那么，编译器展开的是哪一个，那要看具体的编译器而定。所以，最好将<strong>内联函数定义</strong>放在<strong>头文件</strong>中。</p>
<h2 id="5-类中的成员函数与inline">5. 类中的成员函数与inline</h2>
<p><strong>定义</strong>在类中的<strong>成员函数</strong>缺省都是<strong>内联的</strong>，如果在类定义时就在类内给出函数定义，那当然最好。如果在类中未给出成员函数定义，而又想内联该函数的话，那在类外要加上inline，否则就认为不是内联的。</p>
<p>例如，</p>
<pre><code class="language-cpp">class A
{
    public:void Foo(int x, int y) {  } // 自动地成为内联函数
}
</code></pre>
<p>将成员函数的定义体放在类声明之中虽然能带来书写上的方便，但不是一种良好的编程风格，上例应该改成：</p>
<pre><code class="language-cpp">// 头文件
class A
{
    public:
    void Foo(int x, int y);
}
</code></pre>
<pre><code class="language-cpp">// 定义文件
inline void A::Foo(int x, int y){} 
</code></pre>
<h2 id="6-inline-是一种用于实现的关键字">6. inline 是一种“用于实现的关键字”</h2>
<p>关键字inline 必须与<strong>函数定义体</strong>放在一起才能使函数成为内联，仅将inline 放在函数声明前面<strong>不起任何作用</strong>。</p>
<p>如下风格的函数Foo 不能成为内联函数：</p>
<pre><code class="language-cpp">inline void Foo(int x, int y); // inline 仅与函数声明放在一起

void Foo(int x, int y){}
</code></pre>
<p>而如下风格的函数Foo 则成为内联函数：</p>
<pre><code class="language-cpp">void Foo(int x, int y);

inline void Foo(int x, int y) {} // inline 与函数定义体放在一起
</code></pre>
<p>所以说，inline 是一种“<strong>用于实现的关键字</strong>”，而不是一种“用于声明的关键字”。一般地，用户可以阅读函数的声明，但是看不到函数的定义。尽管在大多数教科书中内联函数的声明、定义体前面都加了inline 关键字，但我认为<strong>inline不应该出现在函数的声明中</strong>。这个细节虽然不会影响函数的功能，但是体现了高质量C++/C 程序设计风格的一个基本原则：<strong>声明与定义不可混为一谈，用户没有必要、也不应该知道函数是否需要内联。</strong></p>
<h2 id="7-慎用inline">7. 慎用inline</h2>
<p>内联能提高函数的执行效率，为什么不把所有的函数都定义成内联函数？如果所有的函数都是内联函数，还用得着“内联”这个关键字吗？<br>
内联是以**代码膨胀（复制）**为代价，仅仅省去了函数调用的开销，从而提高函数的执行效率。<br>
如果执行函数体内代码的时间，相比于函数调用的开销较大，那么效率的收获会很少。另一方面，每一处内联函数的调用都要复制代码，将使程序的总代码量增大，消耗更多的内存空间。</p>
<p><strong>以下情况不宜使用内联：</strong><br>
（1）如果函数体内的代码<strong>比较长</strong>，使用内联将导致<strong>内存消耗代价较高</strong>。<br>
（2）如果函数体内出现<strong>循环</strong>，那么执行函数体内代码的时间要比函数调用的开销大。类的构造函数和析构函数容易让人误解成使用内联更有效。要当心<strong>构造函数和析构函数可能会隐藏一些行为</strong>，如“偷偷地”执行了<strong>基类或成员对象</strong>的构造函数和析构函数。所以<strong>不要随便地将构造函数和析构函数的定义体放在类声明中</strong>。一个好的编译器将会根据函数的定义体，自动地取消不值得的内联（这进一步说明了 inline 不应该出现在函数的声明中）。</p>
<h2 id="8-总结">8. 总结</h2>
<p>内联函数并不是一个增强性能的灵丹妙药。只有当<strong>函数非常短小</strong>的时候它才能得到我们想要的效果；但是，如果函数并不是很短而且在很多地方都被调用的话，那么将会使得可执行体的体积增大。<br>
<strong>最令人烦恼的</strong>还是当<strong>编译器拒绝内联</strong>的时候。在老的实现中，结果很不尽人意，虽然在新的实现中有很大的改善，但是仍然还是不那么完善的。一些编译器能够足够的聪明来指出哪些函数可以内联哪些不能，但是大多数编译器就不那么聪明了，因此这就需要我们的经验来判断。<strong>如果内联函数不能增强性能，就避免使用它！</strong></p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>src=http://suo.im/5DJMtR <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[C++ 关键字auto]]></title>
        <id>https://hesy-zhoulijie.github.io/post/cppauto/</id>
        <link href="https://hesy-zhoulijie.github.io/post/cppauto/">
        </link>
        <updated>2020-10-05T05:17:02.000Z</updated>
        <content type="html"><![CDATA[<h1 id="c-关键字auto">C++ 关键字auto<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h1>
<h2 id="目录">目录</h2>
<p>[toc]</p>
<h2 id="c98-auto">c++98 auto</h2>
<p>早在C++98标准中就存在了auto关键字，那时的auto用于声明变量为自动变量，拥有自动的生命周期；但是该作用是多余的，变量默认拥有自动的生命周期。</p>
<pre><code class="language-cpp">int a = 10;      // 自动生命周期
auto int b = 20; // 自动生命周期
</code></pre>
<p>在C++ 11 中，已经删除了该用法，取而代之的作用是：自动推断变量的类型。</p>
<h2 id="c11-auto">c++11 auto</h2>
<p>auto可以在声明变量的时候根据变量初始值的类型自动为此变量选择匹配的类型：</p>
<pre><code class="language-cpp">auto i =100;  // i 是 int 
auto p = new A();  // p 是 A* 
auto k = 34343LL;  // k 是 long long
</code></pre>
<p>这种用法就类似于C#中的var关键字。auto的自动类型推断发生在编译期，所以使用auto并不会造成程序运行时效率的降低。是否会造成编译期的时间消耗，我认为是不会的，在未使用auto时，编译器也需要得知右操作数的类型，再与左操作数的类型进行比较，检查是否可以发生相应的转化，是否需要进行隐式类型转换。</p>
<p>对于上面的示例，在实际编程中并不推荐，因为不便于他人阅读，直接写出变量的类型会更加的清晰易懂，主要用于代替<strong>冗长复杂，变量使用范围专一的变量声明</strong>，比如：</p>
<pre><code class="language-cpp">std::vector&lt;std::string&gt; vec;
for (auto iter = vec.begin(); iter != vec.end(); ++iter) {}
</code></pre>
<p>在定义函数模板时，用于声明依赖模板参数的变量类型，模板函数依赖于模板参数的返回值：</p>
<pre><code class="language-cpp">template&lt;typename Tx, typename Ty&gt;
auto multiply(Tx x, Ty y)          // c++14
{
    return x * y;
}
</code></pre>
<h2 id="auto使用注意事项">auto使用注意事项</h2>
<h3 id="1auto-变量必须在定义时初始化这类似于const关键字">（1）auto 变量必须在定义时初始化，这类似于const关键字；</h3>
<h3 id="2定义在一个auto序列的变量必须始终推导成同一类型如">（2）定义在一个auto序列的变量必须始终推导成同一类型，如：</h3>
<pre><code class="language-cpp">auto a = 1, b = 2, c = 3;     // 正确
auto a = 1, b = 2.2, c = 'c'; // 错误（这个道理和第一点注意事项相同）
</code></pre>
<h3 id="3如果初始化表达式是引用则去除引用语义如">（3）如果初始化表达式是引用，则去除引用语义，如：</h3>
<pre><code class="language-cpp">int  a = 1;
int &amp;b = a;

auto  c = b; // 此时c的类型被推导为 int32，而不是int32&amp;
auto &amp;c = b; // 此时c的类型才是int&amp;
</code></pre>
<h3 id="4如果初始化表达式为const或volatile或者两者兼有则除去constvolatile语义">（4）如果初始化表达式为const或volatile（或者两者兼有），则除去const/volatile语义。</h3>
<pre><code class="language-cpp">const int a = 10;
auto  b= a;         // b的类型为int而非const int（去除const）
const auto c = a;   // 此时c的类型为const int

b = 100;   // 合法
c = 100;   // 非法
</code></pre>
<h3 id="5如果auto关键字带上号则不去除const语义">（5）如果auto关键字带上&amp;号，则不去除const语义。</h3>
<pre><code class="language-cpp">const int a = 10;
auto &amp;b = a;    // 因为auto带上&amp;，故不去除const，b类型为const int

b = 10;   /非法
</code></pre>
<h3 id="6初始化表达式为数组时auto关键字推导类型为指针">（6）初始化表达式为数组时，auto关键字推导类型为指针。</h3>
<pre><code class="language-cpp">int a[3] = { 1, 2, 3 };
auto b = a;

std::cout &lt;&lt; typeid(b).name() &lt;&lt; std::endl;   // 这里输出 int*
</code></pre>
<h3 id="7如果表达式为数组且auto带上则推导类型为数组类型">（7）如果表达式为数组且auto带上&amp;，则推导类型为数组类型。</h3>
<pre><code class="language-cpp">int a[3] = { 1, 2, 3 };
auto &amp;b = a;

std::cout &lt;&lt; typeid(b).name() &lt;&lt; std::endl; // 这里输出 int[3]
</code></pre>
<h3 id="8函数或模板参数不能被声明为auto">（8）函数或模板参数不能被声明为auto。</h3>
<pre><code class="language-cpp">void func(auto a)  // 错误
{
    //... 
}
</code></pre>
<h3 id="9auto不是一个真正的类型仅仅是一个占位符不能使用一些以类型为操作数的操作符如sizeof或typeid">（9）auto不是一个真正的类型，仅仅是一个占位符，不能使用一些以类型为操作数的操作符，如sizeof或typeid：</h3>
<pre><code class="language-cpp">std::cout &lt;&lt; sizeof(auto) &lt;&lt; std::endl;        // 错误
std::cout &lt;&lt; typeid(auto).name() &lt;&lt; std::endl; // 错误
</code></pre>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>src=http://suo.im/67P9DK <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[数据结构百科全书]]></title>
        <id>https://hesy-zhoulijie.github.io/post/data-structure/</id>
        <link href="https://hesy-zhoulijie.github.io/post/data-structure/">
        </link>
        <updated>2020-10-05T05:16:08.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="数据结构">数据结构</h1>
<p>整理不易，全文比较长，而且有很多的代码段，建议收藏。</p>
]]></summary>
        <content type="html"><![CDATA[<h1 id="数据结构">数据结构</h1>
<p>整理不易，全文比较长，而且有很多的代码段，建议收藏。</p>
<!-- more -->
<p>[toc]</p>
<h2 id="vector-动态数组-的使用">vector (动态数组) 的使用`</h2>
<h3 id="文件名">文件名</h3>
<p>vector.cpp</p>
<h3 id="分数">分数</h3>
<p>1</p>
<hr>
<h3 id="初始化代码">初始化代码</h3>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;

int main() {

    return 0;
}
</code></pre>
<hr>
<h3 id="第一步">第一步</h3>
<h4 id="讲解">讲解</h4>
<p>首先我们引入需要的头文件<code>vector</code>，在代码头部写下</p>
<pre><code class="language-c++">#include &lt;vector&gt;
</code></pre>
<h4 id="代码">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;vector&gt;
using namespace std;
int main() {

    return 0;
}
</code></pre>
<hr>
<h3 id="第二步">第二步</h3>
<h4 id="讲解-2">讲解</h4>
<p>首先我们学习如何使用一维的<code>vector</code>。</p>
<p>在<code>main</code>函数里面通过<code>vector&lt;int&gt; v</code>来定义一个储存整数的空的<code>vector</code>。当然<code>vector</code>可以存任何类型的数据，比如<code>vector&lt;string&gt; v</code>等等。在本课中我们用 int 来举例。</p>
<pre><code class="language-c++">vector&lt;int&gt; v;
</code></pre>
<h4 id="提示">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;vector&gt;
using namespace std;
int main() {
    vector&lt;int&gt; v;

    return 0;
}
</code></pre>
<h4 id="代码-2">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;vector&gt;
using namespace std;
int main() {
    vector&lt;int&gt; v;

    return 0;
}
</code></pre>
<hr>
<h3 id="第三步">第三步</h3>
<h4 id="讲解-3">讲解</h4>
<p>我们把 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>10</mn></mrow><annotation encoding="application/x-tex">10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span> 的平方依次存到<code>vector</code>。<br>
在刚才的定义下面写下</p>
<pre><code class="language-c++">for (int i = 1; i &lt;= 10; ++i) {
    v.push_back(i * i);
}
</code></pre>
<h4 id="提示-2">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;vector&gt;
using namespace std;
int main() {
    vector&lt;int&gt; v;
    for (int i = 1; i &lt;= 10; ++i) {
        v.push_back(i * i);
    }

    return 0;
}
</code></pre>
<h4 id="代码-3">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;vector&gt;
using namespace std;
int main() {
    vector&lt;int&gt; v;
    for (int i = 1; i &lt;= 10; ++i) {
        v.push_back(i * i);
    }

    return 0;
}
</code></pre>
<hr>
<h3 id="第四步">第四步</h3>
<h4 id="讲解-4">讲解</h4>
<p>然后依次输出我们刚才压入<code>vector</code>的值。继续写下</p>
<pre><code class="language-c++">for (int i = 0; i &lt; v.size(); ++i) {
    cout &lt;&lt; v[i] &lt;&lt; &quot; &quot;;
}
cout &lt;&lt; endl;
</code></pre>
<h4 id="提示-3">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;vector&gt;
using namespace std;
int main() {
    vector&lt;int&gt; v;
    for (int i = 1; i &lt;= 10; ++i) {
        v.push_back(i * i);
    }
    for (int i = 0; i &lt; v.size(); ++i) {
        cout &lt;&lt; v[i] &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;

    return 0;
}
</code></pre>
<h4 id="代码-4">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;vector&gt;
using namespace std;
int main() {
    vector&lt;int&gt; v;
    for (int i = 1; i &lt;= 10; ++i) {
        v.push_back(i * i);
    }
    for (int i = 0; i &lt; v.size(); ++i) {
        cout &lt;&lt; v[i] &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;

    return 0;
}
</code></pre>
<hr>
<h3 id="第五步">第五步</h3>
<h4 id="讲解-5">讲解</h4>
<p>到这里，里可以点击<strong>运行</strong>看看效果。</p>
<p>接下来我们学习二维的<code>vector</code>的使用。二维的<code>vector</code>就是一个<code>vector</code>里面在套一个<code>vector</code>。通过如下的代码定义一个空的二维的<code>vector</code>。在刚才的输出代码后面继续写下，<strong>特别注意：里面的<code>vector&lt;int&gt;</code>后面有一个空格，这个空格不能到少，因为在没有开启 c++11 的情况下，会被识别成一个<code>&gt;&gt;</code></strong>。</p>
<pre><code class="language-c++">vector&lt;vector&lt;int&gt; &gt; v2d;
</code></pre>
<h4 id="提示-4">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;vector&gt;
using namespace std;
int main() {
    vector&lt;int&gt; v;
    for (int i = 1; i &lt;= 10; ++i) {
        v.push_back(i * i);
    }
    for (int i = 0; i &lt; v.size(); ++i) {
        cout &lt;&lt; v[i] &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;
    vector&lt;vector&lt;int&gt; &gt; v2d;
    for (int i = 0; i &lt; 5; ++i) {
        v2d.push_back(vector&lt;int&gt;());
    }

    return 0;
}
</code></pre>
<h4 id="代码-5">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;vector&gt;
using namespace std;
int main() {
    vector&lt;int&gt; v;
    for (int i = 1; i &lt;= 10; ++i) {
        v.push_back(i * i);
    }
    for (int i = 0; i &lt; v.size(); ++i) {
        cout &lt;&lt; v[i] &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;
    vector&lt;vector&lt;int&gt; &gt; v2d;

    return 0;
}
</code></pre>
<hr>
<h3 id="第六步">第六步</h3>
<h4 id="讲解-6">讲解</h4>
<p>接下来我们给第一维赋值，第一维是一个一维的<code>vector</code>，在定义后面写下：</p>
<pre><code class="language-c++">for (int i = 0; i &lt; 5; ++i) {
    v2d.push_back(vector&lt;int&gt;());
}
</code></pre>
<h4 id="提示-5">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;vector&gt;
using namespace std;
int main() {
    vector&lt;int&gt; v;
    for (int i = 1; i &lt;= 10; ++i) {
        v.push_back(i * i);
    }
    for (int i = 0; i &lt; v.size(); ++i) {
        cout &lt;&lt; v[i] &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;
    vector&lt;vector&lt;int&gt; &gt; v2d;
    for (int i = 0; i &lt; 5; ++i) {
        v2d.push_back(vector&lt;int&gt;());
    }

    return 0;
}
</code></pre>
<h4 id="代码-6">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;vector&gt;
using namespace std;
int main() {
    vector&lt;int&gt; v;
    for (int i = 1; i &lt;= 10; ++i) {
        v.push_back(i * i);
    }
    for (int i = 0; i &lt; v.size(); ++i) {
        cout &lt;&lt; v[i] &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;
    vector&lt;vector&lt;int&gt; &gt; v2d;
    for (int i = 0; i &lt; 5; ++i) {
        v2d.push_back(vector&lt;int&gt;());
    }

    return 0;
}
</code></pre>
<hr>
<h3 id="第七步">第七步</h3>
<h4 id="讲解-7">讲解</h4>
<p>我们让第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 行第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span> 列的元素的值为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>∗</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i*j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>。继续写下下面的代码：</p>
<pre><code class="language-c++">for (int i = 0; i &lt; v2d.size(); ++i) {
    for (int j = 0; j &lt; 5; ++j) {
        v2d[i].push_back(i * j);
    }
}
</code></pre>
<h4 id="提示-6">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;vector&gt;
using namespace std;
int main() {
    vector&lt;int&gt; v;
    for (int i = 1; i &lt;= 10; ++i) {
        v.push_back(i * i);
    }
    for (int i = 0; i &lt; v.size(); ++i) {
        cout &lt;&lt; v[i] &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;
    vector&lt;vector&lt;int&gt; &gt; v2d;
    for (int i = 0; i &lt; 5; ++i) {
        v2d.push_back(vector&lt;int&gt;());
    }
    for (int i = 0; i &lt; v2d.size(); ++i) {
        for (int j = 0; j &lt; 5; ++j) {
            v2d[i].push_back(i * j);
        }
    }

    return 0;
}
</code></pre>
<h4 id="代码-7">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;vector&gt;
using namespace std;
int main() {
    vector&lt;int&gt; v;
    for (int i = 1; i &lt;= 10; ++i) {
        v.push_back(i * i);
    }
    for (int i = 0; i &lt; v.size(); ++i) {
        cout &lt;&lt; v[i] &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;
    vector&lt;vector&lt;int&gt; &gt; v2d;
    for (int i = 0; i &lt; 5; ++i) {
        v2d.push_back(vector&lt;int&gt;());
    }
    for (int i = 0; i &lt; v2d.size(); ++i) {
        for (int j = 0; j &lt; 5; ++j) {
            v2d[i].push_back(i * j);
        }
    }

    return 0;
}
</code></pre>
<hr>
<h3 id="第八步">第八步</h3>
<h4 id="讲解-8">讲解</h4>
<p>然后我们输出一个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>5</mn></mrow><annotation encoding="application/x-tex">5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span></span></span></span> 行 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>5</mn></mrow><annotation encoding="application/x-tex">5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span></span></span></span> 列的矩阵。</p>
<pre><code class="language-c++">for (int i = 0; i &lt; v2d.size(); ++i) {
    for (int j = 0; j &lt; v2d[i].size(); ++j) {
        cout &lt;&lt; v2d[i][j] &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;
}
</code></pre>
<h4 id="提示-7">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;vector&gt;
using namespace std;
int main() {
    vector&lt;int&gt; v;
    for (int i = 1; i &lt;= 10; ++i) {
        v.push_back(i * i);
    }
    for (int i = 0; i &lt; v.size(); ++i) {
        cout &lt;&lt; v[i] &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;
    vector&lt;vector&lt;int&gt; &gt; v2d;
    for (int i = 0; i &lt; 5; ++i) {
        v2d.push_back(vector&lt;int&gt;());
    }
    for (int i = 0; i &lt; v2d.size(); ++i) {
        for (int j = 0; j &lt; 5; ++j) {
            v2d[i].push_back(i * j);
        }
    }
    for (int i = 0; i &lt; v2d.size(); ++i) {
        for (int j = 0; j &lt; v2d[i].size(); ++j) {
            cout &lt;&lt; v2d[i][j] &lt;&lt; &quot; &quot;;
        }
        cout &lt;&lt; endl;
    }
    return 0;
}
</code></pre>
<h4 id="代码-8">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;vector&gt;
using namespace std;
int main() {
    vector&lt;int&gt; v;
    for (int i = 1; i &lt;= 10; ++i) {
        v.push_back(i * i);
    }
    for (int i = 0; i &lt; v.size(); ++i) {
        cout &lt;&lt; v[i] &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;
    vector&lt;vector&lt;int&gt; &gt; v2d;
    for (int i = 0; i &lt; 5; ++i) {
        v2d.push_back(vector&lt;int&gt;());
    }
    for (int i = 0; i &lt; v2d.size(); ++i) {
        for (int j = 0; j &lt; 5; ++j) {
            v2d[i].push_back(i * j);
        }
    }
    for (int i = 0; i &lt; v2d.size(); ++i) {
        for (int j = 0; j &lt; v2d[i].size(); ++j) {
            cout &lt;&lt; v2d[i][j] &lt;&lt; &quot; &quot;;
        }
        cout &lt;&lt; endl;
    }
    return 0;
}
</code></pre>
<hr>
<h3 id="完成讲解">完成讲解</h3>
<p>这一节已经完成了，赶紧运行看看效果。</p>
<p>聪明的你一定学会了<code>vector</code>怎么用了。</p>
<h2 id="set-配对-的使用">set (配对) 的使用`</h2>
<h3 id="文件名-2">文件名</h3>
<p>set.cpp</p>
<h3 id="分数-2">分数</h3>
<p>1</p>
<hr>
<h3 id="初始化代码-2">初始化代码</h3>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;

int main() {

    return 0;
}
</code></pre>
<hr>
<h3 id="第一步-2">第一步</h3>
<h4 id="讲解-9">讲解</h4>
<p>首先我们引入需要的头文件<code>set</code>，在代码头部写下</p>
<pre><code class="language-c++">#include &lt;set&gt;
</code></pre>
<h4 id="代码-9">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;set&gt;
using namespace std;
int main() {

    return 0;
}
</code></pre>
<hr>
<h3 id="第二步-2">第二步</h3>
<h4 id="讲解-10">讲解</h4>
<p>首先我们学习如何创建一个<code>set</code>。</p>
<p>在<code>main</code>函数里面通过<code>set&lt;string&gt; country</code>来定义一个储存字符串的空的<code>set</code>。当然<code>set</code>可以存任何类型的数据，比如<code>set&lt;int&gt; s</code>等等。在本课中我们用 string 来举例。</p>
<pre><code class="language-c++">set&lt;string&gt; country;
</code></pre>
<h4 id="提示-8">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;set&gt;
using namespace std;
int main() {
    set&lt;string&gt; country;

    return 0;
}
</code></pre>
<h4 id="代码-10">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;set&gt;
using namespace std;
int main() {
    set&lt;string&gt; country;

    return 0;
}
</code></pre>
<hr>
<h3 id="第三步-2">第三步</h3>
<h4 id="讲解-11">讲解</h4>
<p>我们把<code>China</code> <code>America</code> <code>France</code>依次插入到<code>set</code>。<br>
在刚才的定义下面写下</p>
<pre><code class="language-c++">country.insert(&quot;China&quot;);
country.insert(&quot;America&quot;);
country.insert(&quot;France&quot;);
</code></pre>
<h4 id="提示-9">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;set&gt;
using namespace std;
int main() {
    set&lt;string&gt; country;
    country.insert(&quot;China&quot;);
    country.insert(&quot;America&quot;);
    country.insert(&quot;France&quot;);

    return 0;
}
</code></pre>
<h4 id="代码-11">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;set&gt;
using namespace std;
int main() {
    set&lt;string&gt; country;
    country.insert(&quot;China&quot;);
    country.insert(&quot;America&quot;);
    country.insert(&quot;France&quot;);

    return 0;
}
</code></pre>
<hr>
<h3 id="第四步-2">第四步</h3>
<h4 id="讲解-12">讲解</h4>
<p>然后依次输出我们刚才插入<code>set</code>的字符串。继续写下</p>
<pre><code class="language-c++">set&lt;string&gt;::iterator it;
for (it = country.begin(); it != country.end(); ++it) {
    cout &lt;&lt; * it  &lt;&lt; &quot; &quot;;
}
cout &lt;&lt; endl;
</code></pre>
<h4 id="提示-10">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;set&gt;
using namespace std;
int main() {
    set&lt;string&gt; country;
    country.insert(&quot;China&quot;);
    country.insert(&quot;America&quot;);
    country.insert(&quot;France&quot;);
    set&lt;string&gt;::iterator it;
    for (it = country.begin(); it != country.end(); ++it) {
        cout &lt;&lt; * it  &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;

    return 0;
}
</code></pre>
<h4 id="代码-12">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;set&gt;
using namespace std;
int main() {
    set&lt;string&gt; country;
    country.insert(&quot;China&quot;);
    country.insert(&quot;America&quot;);
    country.insert(&quot;France&quot;);
    set&lt;string&gt;::iterator it;
    for (it = country.begin(); it != country.end(); ++it) {
        cout &lt;&lt; * it  &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;

    return 0;
}
</code></pre>
<hr>
<h3 id="第五步-2">第五步</h3>
<h4 id="讲解-13">讲解</h4>
<p>到这里，里可以点击<strong>运行</strong>看看效果。<br>
可以发现我们刚才插入的字符串按照字典序排列好了。</p>
<p>接下来我们学习<code>set</code>的删除操作。</p>
<pre><code class="language-c++">country.erase(&quot;American&quot;);
country.erase(&quot;England&quot;);
</code></pre>
<h4 id="提示-11">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;set&gt;
using namespace std;
int main() {
    set&lt;string&gt; country;
    country.insert(&quot;China&quot;);
    country.insert(&quot;America&quot;);
    country.insert(&quot;France&quot;);
    set&lt;string&gt;::iterator it;
    for (it = country.begin(); it != country.end(); ++it) {
        cout &lt;&lt; * it  &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;
    country.erase(&quot;American&quot;);
    country.erase(&quot;England&quot;);

    return 0;
}
</code></pre>
<h4 id="代码-13">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;set&gt;
using namespace std;
int main() {
    set&lt;string&gt; country;
    country.insert(&quot;China&quot;);
    country.insert(&quot;America&quot;);
    country.insert(&quot;France&quot;);
    set&lt;string&gt;::iterator it;
    for (it = country.begin(); it != country.end(); ++it) {
        cout &lt;&lt; * it  &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;
    country.erase(&quot;American&quot;);
    country.erase(&quot;England&quot;);

    return 0;
}
</code></pre>
<hr>
<h3 id="第六步-2">第六步</h3>
<h4 id="讲解-14">讲解</h4>
<p>接下来我们统计<code>set</code>中<code>China</code>字符串的个数</p>
<pre><code class="language-c++">if (country.count(&quot;China&quot;)) {
    cout &lt;&lt; &quot;China in country.&quot; &lt;&lt; endl;
}
</code></pre>
<h4 id="提示-12">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;set&gt;
using namespace std;
int main() {
    set&lt;string&gt; country;
    country.insert(&quot;China&quot;);
    country.insert(&quot;America&quot;);
    country.insert(&quot;France&quot;);
    set&lt;string&gt;::iterator it;
    for (it = country.begin(); it != country.end(); ++it) {
        cout &lt;&lt; * it  &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;
    country.erase(&quot;American&quot;);
    country.erase(&quot;England&quot;);
    if (country.count(&quot;China&quot;)) {
        cout &lt;&lt; &quot;China in country.&quot; &lt;&lt; endl;
    }

    return 0;
}
</code></pre>
<h4 id="代码-14">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;set&gt;
using namespace std;
int main() {
    set&lt;string&gt; country;
    country.insert(&quot;China&quot;);
    country.insert(&quot;America&quot;);
    country.insert(&quot;France&quot;);
    set&lt;string&gt;::iterator it;
    for (it = country.begin(); it != country.end(); ++it) {
        cout &lt;&lt; * it  &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;
    country.erase(&quot;American&quot;);
    country.erase(&quot;England&quot;);
    if (country.count(&quot;China&quot;)) {
        cout &lt;&lt; &quot;China in country.&quot; &lt;&lt; endl;
    }

    return 0;
}
</code></pre>
<hr>
<h3 id="第七步-2">第七步</h3>
<h4 id="讲解-15">讲解</h4>
<p>最后我们将使用完成的<code>set</code>清空。继续写下下面的代码：</p>
<pre><code class="language-c++">country.clear();
</code></pre>
<h4 id="提示-13">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;set&gt;
using namespace std;
int main() {
    set&lt;string&gt; country;
    country.insert(&quot;China&quot;);
    country.insert(&quot;America&quot;);
    country.insert(&quot;France&quot;);
    set&lt;string&gt;::iterator it;
    for (it = country.begin(); it != country.end(); ++it) {
        cout &lt;&lt; * it  &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;
    country.erase(&quot;American&quot;);
    country.erase(&quot;England&quot;);
    if (country.count(&quot;China&quot;)) {
        cout &lt;&lt; &quot;China in country.&quot; &lt;&lt; endl;
    }
    country.clear();

    return 0;
}
</code></pre>
<h4 id="代码-15">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;set&gt;
using namespace std;
int main() {
    set&lt;string&gt; country;
    country.insert(&quot;China&quot;);
    country.insert(&quot;America&quot;);
    country.insert(&quot;France&quot;);
    set&lt;string&gt;::iterator it;
    for (it = country.begin(); it != country.end(); ++it) {
        cout &lt;&lt; * it  &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;
    country.erase(&quot;American&quot;);
    country.erase(&quot;England&quot;);
    if (country.count(&quot;China&quot;)) {
        cout &lt;&lt; &quot;China in country.&quot; &lt;&lt; endl;
    }
    country.clear();

    return 0;
}
</code></pre>
<hr>
<h3 id="完成讲解-2">完成讲解</h3>
<p>这一节已经完成了，赶紧运行看看效果。</p>
<p>聪明的你一定学会了<code>set</code>怎么用了。</p>
<h2 id="map-字典-的使用">map (字典) 的使用`</h2>
<h3 id="文件名-3">文件名</h3>
<p>map.cpp</p>
<h3 id="分数-3">分数</h3>
<p>1</p>
<hr>
<h3 id="初始化代码-3">初始化代码</h3>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;

int main() {

    return 0;
}
</code></pre>
<hr>
<h3 id="第一步-3">第一步</h3>
<h4 id="讲解-16">讲解</h4>
<p>首先我们引入需要的头文件<code>map</code>，在代码头部写下</p>
<pre><code class="language-c++">#include &lt;map&gt;
#include &lt;string&gt;
</code></pre>
<h4 id="代码-16">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;map&gt;
#include &lt;string&gt;
using namespace std;
int main() {

    return 0;
}
</code></pre>
<hr>
<h3 id="第二步-3">第二步</h3>
<h4 id="讲解-17">讲解</h4>
<p>首先我们学习如何创建一个<code>map</code>。</p>
<p>在<code>main</code>函数里面通过<code>map&lt;string, int&gt; dict</code>来定义一个<code>key:value</code>映射关系的空的<code>map</code>。当然<code>map</code>可以存任何类型的数据，比如<code>map&lt;int, int&gt; m</code>等等。在本课中我们用<code>string:int</code>来举例。</p>
<pre><code class="language-c++">map&lt;string, int&gt; dict;
</code></pre>
<h4 id="提示-14">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;map&gt;
using namespace std;
int main() {
    map&lt;string, int&gt; dict;

    return 0;
}
</code></pre>
<h4 id="代码-17">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;map&gt;
using namespace std;
int main() {
    map&lt;string, int&gt; dict;

    return 0;
}
</code></pre>
<hr>
<h3 id="第三步-3">第三步</h3>
<h4 id="讲解-18">讲解</h4>
<p>我们把<code>Tom</code> <code>Jone</code> <code>Mary</code>依次插入到<code>map</code>并一一对应的赋值。<br>
在刚才的定义下面写下</p>
<pre><code class="language-c++">dict[&quot;Tom&quot;] = 1;
dict[&quot;Jone&quot;] = 2;
dict[&quot;Mary&quot;] = 1;
</code></pre>
<h4 id="提示-15">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;map&gt;
using namespace std;
int main() {
    map&lt;string, int&gt; dict;
    dict[&quot;Tom&quot;] = 1;
    dict[&quot;Jone&quot;] = 2;
    dict[&quot;Mary&quot;] = 1;

    return 0;
}
</code></pre>
<h4 id="代码-18">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;map&gt;
using namespace std;
int main() {
    map&lt;string, int&gt; dict;
    dict[&quot;Tom&quot;] = 1;
    dict[&quot;Jone&quot;] = 2;
    dict[&quot;Mary&quot;] = 1;

    return 0;
}
</code></pre>
<hr>
<h3 id="第四步-3">第四步</h3>
<h4 id="讲解-19">讲解</h4>
<p>接下来我们查看<code>map</code>中<code>Mary</code>对应的value值，先判断一下<code>map</code>中是否有<code>Mary</code>。继续写下</p>
<pre><code class="language-c++">if (dict.count(&quot;Mary&quot;)) {
    cout &lt;&lt; &quot;Mary is in class &quot; &lt;&lt; dict[&quot;Mary&quot;];
}
</code></pre>
<h4 id="提示-16">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;map&gt;
using namespace std;
int main() {
    map&lt;string, int&gt; dict;
    dict[&quot;Tom&quot;] = 1;
    dict[&quot;Jone&quot;] = 2;
    dict[&quot;Mary&quot;] = 1;
    if (dict.count(&quot;Mary&quot;)) {
        cout &lt;&lt; &quot;Mary is in class &quot; &lt;&lt; dict[&quot;Mary&quot;];
    }

    return 0;
}
</code></pre>
<h4 id="代码-19">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;map&gt;
using namespace std;
int main() {
    map&lt;string, int&gt; dict;
    dict[&quot;Tom&quot;] = 1;
    dict[&quot;Jone&quot;] = 2;
    dict[&quot;Mary&quot;] = 1;
    if (dict.count(&quot;Mary&quot;)) {
        cout &lt;&lt; &quot;Mary is in class &quot; &lt;&lt; dict[&quot;Mary&quot;];
    }

    return 0;
}
</code></pre>
<hr>
<h3 id="第五步-3">第五步</h3>
<h4 id="讲解-20">讲解</h4>
<p>到这里，里可以点击<strong>运行</strong>看看效果。</p>
<p>接下来我们学习<code>map</code>的遍历操作。</p>
<pre><code class="language-c++">for (map&lt;string, int&gt;::iterator it = dict.begin(); it != dict.end(); ++it) {
    cout &lt;&lt; it-&gt;first &lt;&lt; &quot; is in class &quot; &lt;&lt; it-&gt;second &lt;&lt; endl;
}
</code></pre>
<h4 id="提示-17">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;map&gt;
using namespace std;
int main() {
    map&lt;string, int&gt; dict;
    dict[&quot;Tom&quot;] = 1;
    dict[&quot;Jone&quot;] = 2;
    dict[&quot;Mary&quot;] = 1;
    if (dict.count(&quot;Mary&quot;)) {
        cout &lt;&lt; &quot;Mary is in class &quot; &lt;&lt; dict[&quot;Mary&quot;];
    }
    for (map&lt;string, int&gt;::iterator it = dict.begin(); it != dict.end(); ++it) {
        cout &lt;&lt; it-&gt;first &lt;&lt; &quot; is in class &quot; &lt;&lt; it-&gt;second &lt;&lt; endl;
    }

    return 0;
}
</code></pre>
<h4 id="代码-20">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;map&gt;
using namespace std;
int main() {
    map&lt;string, int&gt; dict;
    dict[&quot;Tom&quot;] = 1;
    dict[&quot;Jone&quot;] = 2;
    dict[&quot;Mary&quot;] = 1;
    if (dict.count(&quot;Mary&quot;)) {
        cout &lt;&lt; &quot;Mary is in class &quot; &lt;&lt; dict[&quot;Mary&quot;];
    }
    for (map&lt;string, int&gt;::iterator it = dict.begin(); it != dict.end(); ++it) {
        cout &lt;&lt; it-&gt;first &lt;&lt; &quot; is in class &quot; &lt;&lt; it-&gt;second &lt;&lt; endl;
    }

    return 0;
}
</code></pre>
<hr>
<h3 id="第六步-3">第六步</h3>
<h4 id="讲解-21">讲解</h4>
<p>到这里，里可以点击<strong>运行</strong>看看效果。<br>
可以发现<code>map</code>里的key字符串按照字典序排列好了。</p>
<p>最后我们再清空<code>map</code></p>
<pre><code class="language-c++">dict.clear();
</code></pre>
<h4 id="提示-18">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;map&gt;
using namespace std;
int main() {
    map&lt;string, int&gt; dict;
    dict[&quot;Tom&quot;] = 1;
    dict[&quot;Jone&quot;] = 2;
    dict[&quot;Mary&quot;] = 1;
    if (dict.count(&quot;Mary&quot;)) {
        cout &lt;&lt; &quot;Mary is in class &quot; &lt;&lt; dict[&quot;Mary&quot;];
    }
    for (map&lt;string, int&gt;::iterator it = dict.begin(); it != dict.end(); ++it) {
        cout &lt;&lt; it-&gt;first &lt;&lt; &quot; is in class &quot; &lt;&lt; it-&gt;second &lt;&lt; endl;
    }
    dict.clear();
    return 0;
}
</code></pre>
<h4 id="代码-21">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;map&gt;
using namespace std;
int main() {
    map&lt;string, int&gt; dict;
    dict[&quot;Tom&quot;] = 1;
    dict[&quot;Jone&quot;] = 2;
    dict[&quot;Mary&quot;] = 1;
    if (dict.count(&quot;Mary&quot;)) {
        cout &lt;&lt; &quot;Mary is in class &quot; &lt;&lt; dict[&quot;Mary&quot;];
    }
    for (map&lt;string, int&gt;::iterator it = dict.begin(); it != dict.end(); ++it) {
        cout &lt;&lt; it-&gt;first &lt;&lt; &quot; is in class &quot; &lt;&lt; it-&gt;second &lt;&lt; endl;
    }
    dict.clear();
    return 0;
}
</code></pre>
<hr>
<h3 id="完成讲解-3">完成讲解</h3>
<p>这一节已经完成了，赶紧运行看看效果。</p>
<p>聪明的你一定学会了<code>map</code>怎么用了。</p>
<h2 id="stack-栈-的使用">stack (栈) 的使用`</h2>
<h3 id="文件名-4">文件名</h3>
<p>stack.cpp</p>
<h3 id="分数-4">分数</h3>
<p>1</p>
<hr>
<h3 id="初始化代码-4">初始化代码</h3>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;

int main() {

    return 0;
}
</code></pre>
<hr>
<h3 id="第一步-4">第一步</h3>
<h4 id="讲解-22">讲解</h4>
<p>首先我们引入需要的头文件<code>stack</code>，在代码头部写下</p>
<pre><code class="language-c++">#include &lt;stack&gt;
</code></pre>
<h4 id="代码-22">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;stack&gt;
using namespace std;
int main() {

    return 0;
}
</code></pre>
<hr>
<h3 id="第二步-4">第二步</h3>
<h4 id="讲解-23">讲解</h4>
<p>首先我们学习如何使用<code>stack</code>。</p>
<p>在<code>main</code>函数上方通过<code>stack&lt;int&gt; S</code>来定义一个全局栈来储存整数的空的<code>stack</code>。当然<code>stack</code>可以存任何类型的数据，比如<code>stack&lt;string&gt; S</code>等等。在本课中我们用 int 来举例。</p>
<pre><code class="language-c++">stack&lt;int&gt; S;
</code></pre>
<h4 id="提示-19">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;stack&gt;
using namespace std;
stack&lt;int&gt; S;
int main() {

    return 0;
}
</code></pre>
<h4 id="代码-23">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;stack&gt;
using namespace std;
stack&lt;int&gt; S;
int main() {

    return 0;
}
</code></pre>
<hr>
<h3 id="第三步-4">第三步</h3>
<h4 id="讲解-24">讲解</h4>
<p>我们把<code>1</code> <code>10</code> <code>7</code>三个数依次存到<code>stack</code>。<br>
在<code>main</code>函数里写下</p>
<pre><code class="language-c++">S.push(1);
S.push(10);
S.push(7);
</code></pre>
<h4 id="提示-20">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;stack&gt;
using namespace std;
stack&lt;int&gt; S;
int main() {
    S.push(1);
    S.push(10);
    S.push(7);

    return 0;
}
</code></pre>
<h4 id="代码-24">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;stack&gt;
using namespace std;
stack&lt;int&gt; S;
int main() {
    S.push(1);
    S.push(10);
    S.push(7);

    return 0;
}
</code></pre>
<hr>
<h3 id="第四步-4">第四步</h3>
<h4 id="讲解-25">讲解</h4>
<p>然后我们判断一下<code>stack</code>的是否为空。继续写下</p>
<pre><code class="language-c++">while (!S.empty()) {

}
</code></pre>
<h4 id="提示-21">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;stack&gt;
using namespace std;
stack&lt;int&gt; S;
int main() {
    S.push(1);
    S.push(10);
    S.push(7);
    while (!S.empty()) {

    }

    return 0;
}
</code></pre>
<h4 id="代码-25">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;stack&gt;
using namespace std;
stack&lt;int&gt; S;
int main() {
    S.push(1);
    S.push(10);
    S.push(7);
    while (!S.empty()) {

    }

    return 0;
}
</code></pre>
<hr>
<h3 id="第五步-4">第五步</h3>
<h4 id="讲解-26">讲解</h4>
<p>如果<code>stack</code>不为空，我们将<code>stack</code>里的数依次取出来，在<code>while</code>里继续写下</p>
<pre><code class="language-c++">cout &lt;&lt; S.top() &lt;&lt; endl;
S.pop();
</code></pre>
<h4 id="提示-22">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;stack&gt;
using namespace std;
stack&lt;int&gt; S;
int main() {
    S.push(1);
    S.push(10);
    S.push(7);
    while (!S.empty()) {
      cout &lt;&lt; S.top() &lt;&lt; endl;
      S.pop();
    }
    return 0;
}
</code></pre>
<h4 id="代码-26">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;stack&gt;
using namespace std;
stack&lt;int&gt; S;
int main() {
    S.push(1);
    S.push(10);
    S.push(7);
    while (!S.empty()) {
      cout &lt;&lt; S.top() &lt;&lt; endl;
      S.pop();
    }
    return 0;
}
</code></pre>
<hr>
<h3 id="完成讲解-4">完成讲解</h3>
<p>这一节已经完成了，赶紧运行看看效果，可以发现<code>stack</code>有先进后出的特性。</p>
<p>聪明的你一定学会了<code>stack</code>怎么用了。</p>
<h2 id="queue-队列-的使用">queue (队列) 的使用`</h2>
<h3 id="文件名-5">文件名</h3>
<p>queue.cpp</p>
<h3 id="分数-5">分数</h3>
<p>1</p>
<hr>
<h3 id="初始化代码-5">初始化代码</h3>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;

int main() {

    return 0;
}
</code></pre>
<hr>
<h3 id="第一步-5">第一步</h3>
<h4 id="讲解-27">讲解</h4>
<p>首先我们引入需要的头文件<code>queue</code>，在代码头部写下</p>
<pre><code class="language-c++">#include &lt;queue&gt;
</code></pre>
<h4 id="代码-27">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;queue&gt;
using namespace std;
int main() {

    return 0;
}
</code></pre>
<hr>
<h3 id="第二步-5">第二步</h3>
<h4 id="讲解-28">讲解</h4>
<p>首先我们学习如何使用<code>queue</code>。</p>
<p>在<code>main</code>函数里面通过<code>queue&lt;int&gt; q</code>来定义一个储存整数的空的<code>queue</code>。当然<code>queue</code>可以存任何类型的数据，比如<code>queue&lt;string&gt; q</code>等等。在本课中我们用 int 来举例。</p>
<pre><code class="language-c++">queue&lt;int&gt; q;
</code></pre>
<h4 id="提示-23">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;queue&gt;
using namespace std;
int main() {
    queue&lt;int&gt; q;

    return 0;
}
</code></pre>
<h4 id="代码-28">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;queue&gt;
using namespace std;
int main() {
    queue&lt;int&gt; q;

    return 0;
}
</code></pre>
<hr>
<h3 id="第三步-5">第三步</h3>
<h4 id="讲解-29">讲解</h4>
<p>我们把<code>1</code> <code>2</code> <code>3</code>三个数依次存到<code>queue</code>。<br>
在<code>main</code>函数里写下</p>
<pre><code class="language-c++">q.push(1);
q.push(2);
q.push(3);
</code></pre>
<h4 id="提示-24">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;queue&gt;
using namespace std;
int main() {
    queue&lt;int&gt; q;
    q.push(1);
    q.push(2);
    q.push(3);

    return 0;
}
</code></pre>
<h4 id="代码-29">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;queue&gt;
using namespace std;
int main() {
    queue&lt;int&gt; q;
    q.push(1);
    q.push(2);
    q.push(3);

    return 0;
}
</code></pre>
<hr>
<h3 id="第四步-5">第四步</h3>
<h4 id="讲解-30">讲解</h4>
<p>然后我们判断一下<code>queue</code>的是否为空。继续写下</p>
<pre><code class="language-c++">while (!q.empty()) {

}
</code></pre>
<h4 id="提示-25">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;queue&gt;
using namespace std;
int main() {
    queue&lt;int&gt; q;
    q.push(1);
    q.push(2);
    q.push(3);
    while (!q.empty()) {

    }

    return 0;
}
</code></pre>
<h4 id="代码-30">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;queue&gt;
using namespace std;
int main() {
    queue&lt;int&gt; q;
    q.push(1);
    q.push(2);
    q.push(3);
    while (!q.empty()) {

    }

    return 0;
}
</code></pre>
<hr>
<h3 id="第五步-5">第五步</h3>
<h4 id="讲解-31">讲解</h4>
<p>如果<code>queue</code>不为空，我们将<code>queue</code>里的数依次取出来，在<code>while</code>里继续写下</p>
<pre><code class="language-c++">cout &lt;&lt; q.front() &lt;&lt; endl;
q.pop();
</code></pre>
<h4 id="提示-26">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;queue&gt;
using namespace std;
int main() {
    queue&lt;int&gt; q;
    q.push(1);
    q.push(2);
    q.push(3);
    while (!q.empty()) {
        cout &lt;&lt; q.front() &lt;&lt; endl;
        q.pop();
    }
    return 0;
}
</code></pre>
<h4 id="代码-31">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;queue&gt;
using namespace std;
int main() {
    queue&lt;int&gt; q;
    q.push(1);
    q.push(2);
    q.push(3);
    while (!q.empty()) {
        cout &lt;&lt; q.front() &lt;&lt; endl;
        q.pop();
    }
    return 0;
}
</code></pre>
<hr>
<h3 id="完成讲解-5">完成讲解</h3>
<p>这一节已经完成了，赶紧运行看看效果，可以发现<code>queue</code>有先进先出的特性。</p>
<p>聪明的你一定学会了<code>queue</code>怎么用了。</p>
<h2 id="priority_queue-优先队列-的使用">priority_queue (优先队列) 的使用`</h2>
<h3 id="文件名-6">文件名</h3>
<p>priority_queue.cpp</p>
<h3 id="分数-6">分数</h3>
<p>1</p>
<hr>
<h3 id="初始化代码-6">初始化代码</h3>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;

int main() {

    return 0;
}
</code></pre>
<hr>
<h3 id="第一步-6">第一步</h3>
<h4 id="讲解-32">讲解</h4>
<p>首先我们引入需要的头文件<code>queue</code>，在代码头部写下</p>
<pre><code class="language-c++">#include &lt;queue&gt;
</code></pre>
<h4 id="代码-32">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;queue&gt;
using namespace std;
int main() {

    return 0;
}
</code></pre>
<hr>
<h3 id="第二步-6">第二步</h3>
<h4 id="讲解-33">讲解</h4>
<p>首先我们学习如何使用<code>priority_queue</code>。</p>
<p>在<code>main</code>函数里面通过<code>priority_queue&lt;int&gt; q</code>来定义一个储存整数的空的<code>priority_queue</code>。当然<code>priority_queue</code>可以存任何类型的数据，比如<code>priority_queue&lt;string&gt; q</code>等等。在本课中我们用 int 来举例。</p>
<pre><code class="language-c++">priority_queue&lt;int&gt; q;
</code></pre>
<h4 id="提示-27">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;queue&gt;
using namespace std;
int main() {
    priority_queue&lt;int&gt; q;

    return 0;
}
</code></pre>
<h4 id="代码-33">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;queue&gt;
using namespace std;
int main() {
    priority_queue&lt;int&gt; q;

    return 0;
}
</code></pre>
<hr>
<h3 id="第三步-6">第三步</h3>
<h4 id="讲解-34">讲解</h4>
<p>我们把<code>1</code> <code>2</code> <code>3</code>三个数依次存到<code>priority_queue</code>。<br>
在<code>main</code>函数里写下</p>
<pre><code class="language-c++">q.push(1);
q.push(2);
q.push(3);
</code></pre>
<h4 id="提示-28">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;queue&gt;
using namespace std;
int main() {
    priority_queue&lt;int&gt; q;
    q.push(1);
    q.push(2);
    q.push(3);

    return 0;
}
</code></pre>
<h4 id="代码-34">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;queue&gt;
using namespace std;
int main() {
    priority_queue&lt;int&gt; q;
    q.push(1);
    q.push(2);
    q.push(3);

    return 0;
}
</code></pre>
<hr>
<h3 id="第四步-6">第四步</h3>
<h4 id="讲解-35">讲解</h4>
<p>然后我们判断一下<code>priority_queue</code>的是否为空。继续写下</p>
<pre><code class="language-c++">while (!q.empty()) {

}
</code></pre>
<h4 id="提示-29">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;queue&gt;
using namespace std;
int main() {
    priority_queue&lt;int&gt; q;
    q.push(1);
    q.push(2);
    q.push(3);
    while (!q.empty()) {

    }

    return 0;
}
</code></pre>
<h4 id="代码-35">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;queue&gt;
using namespace std;
int main() {
    priority_queue&lt;int&gt; q;
    q.push(1);
    q.push(2);
    q.push(3);
    while (!q.empty()) {

    }

    return 0;
}
</code></pre>
<hr>
<h3 id="第五步-6">第五步</h3>
<h4 id="讲解-36">讲解</h4>
<p>如果<code>priority_queue</code>不为空，我们将<code>priority_queue</code>里的数依次取出来，在<code>while</code>里继续写下</p>
<pre><code class="language-c++">cout &lt;&lt; q.top() &lt;&lt; endl;
q.pop();
</code></pre>
<h4 id="提示-30">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;priority_queue&gt;
using namespace std;
int main() {
    priority_queue&lt;int&gt; q;
    q.push(1);
    q.push(2);
    q.push(3);
    while (!q.empty()) {
        cout &lt;&lt; q.top() &lt;&lt; endl;
        q.pop();
    }
    return 0;
}
</code></pre>
<h4 id="代码-36">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
#include &lt;queue&gt;
using namespace std;
int main() {
    priority_queue&lt;int&gt; q;
    q.push(1);
    q.push(2);
    q.push(3);
    while (!q.empty()) {
        cout &lt;&lt; q.top() &lt;&lt; endl;
        q.pop();
    }
    return 0;
}
</code></pre>
<hr>
<h3 id="完成讲解-6">完成讲解</h3>
<p>这一节已经完成了，赶紧运行看看效果，可以发现<code>priority_queue</code>会自动从大到小排好序。</p>
<p>聪明的你一定学会了<code>priority_queue</code>怎么用了。</p>
<h2 id="disjoint-并查集-的使用">disjoint (并查集) 的使用`</h2>
<h3 id="文件名-7">文件名</h3>
<p>disjoint.cpp</p>
<h3 id="分数-7">分数</h3>
<p>1</p>
<hr>
<h3 id="初始化代码-7">初始化代码</h3>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;

int main() {

    return 0;
}
</code></pre>
<hr>
<h3 id="第一步-7">第一步</h3>
<h4 id="讲解-37">讲解</h4>
<p>首先我们需要定义节点个数<code>n</code>，<code>father</code>父节点数组，<code>dist</code>距离数组，<code>size</code>权值数组，在<code>main</code>函数上方写下</p>
<pre><code class="language-c++">int father[110], n;
int dist[110], size[110];
</code></pre>
<h4 id="代码-37">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;
int father[110], n;
int dist[110], size[110];
int main() {

    return 0;
}
</code></pre>
<hr>
<h3 id="第二步-7">第二步</h3>
<h4 id="讲解-38">讲解</h4>
<p>然后对这些数组进行初始化。在<code>main</code>函数里写下</p>
<pre><code class="language-c++">n = 10;
init();
</code></pre>
<h4 id="提示-31">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;
int father[110], n;
int dist[110], size[110];
int main() {
    n = 10;
    init();

    return 0;
}
</code></pre>
<h4 id="代码-38">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;
int father[110], n;
int dist[110], size[110];
int main() {
    n = 10;
    init();

    return 0;
}
</code></pre>
<hr>
<h3 id="第三步-7">第三步</h3>
<h4 id="讲解-39">讲解</h4>
<p>接下来具体实现<code>init</code>函数。继续在<code>main</code>函数上面写下</p>
<pre><code class="language-c++">void init() {
    for (int i = 1; i &lt;= n; ++i) {
        father[i] = i, dist[i] = 0, size[i] = 1;
    }
}
</code></pre>
<h4 id="提示-32">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;
int father[110], n;
int dist[110], size[110];

void init() {
    for (int i = 1; i &lt;= n; ++i) {
        father[i] = i, dist[i] = 0, size[i] = 1;
    }
}
int main() {
    n = 10;
    init();

    return 0;
}
</code></pre>
<h4 id="代码-39">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;
int father[110], n;
int dist[110], size[110];

void init() {
    for (int i = 1; i &lt;= n; ++i) {
        father[i] = i, dist[i] = 0, size[i] = 1;
    }
}
int main() {
    n = 10;
    init();

    return 0;
}
</code></pre>
<hr>
<h3 id="第四步-7">第四步</h3>
<h4 id="讲解-40">讲解</h4>
<p>现在开始学习并查集的<code>merge</code>操作，我们将<code>1</code>和<code>2</code>、<code>10</code>和<code>7</code>、<code>3</code>和<code>4</code>、<code>3</code>和<code>7</code>合并。在<code>main</code>函数里继续写下</p>
<pre><code class="language-c++">merge(1, 2);
merge(10, 7);
merge(3, 4);
merge(3, 7);
</code></pre>
<h4 id="提示-33">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;
int father[110], n;
int dist[110], size[110];

void init() {
    for (int i = 1; i &lt;= n; ++i) {
        father[i] = i, dist[i] = 0, size[i] = 1;
    }
}
int main() {
    n = 10;
    init();
    merge(1, 2);
    merge(10, 7);
    merge(3, 4);
    merge(3, 7);

    return 0;
}
</code></pre>
<h4 id="代码-40">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;
int father[110], n;
int dist[110], size[110];

void init() {
    for (int i = 1; i &lt;= n; ++i) {
        father[i] = i, dist[i] = 0, size[i] = 1;
    }
}
int main() {
    n = 10;
    init();
    merge(1, 2);
    merge(10, 7);
    merge(3, 4);
    merge(3, 7);

    return 0;
}
</code></pre>
<hr>
<h3 id="第五步-7">第五步</h3>
<h4 id="讲解-41">讲解</h4>
<p>接下来我们具体实现<code>merge</code>函数。在<code>main</code>上方继续写下</p>
<pre><code class="language-c++">void merge(int a, int b) {
    a = get(a);
    b = get(b);
    if (a != b) {
        father[a] = b;
        dist[a] = size[b];
        size[b] += size[a];
    }
}
</code></pre>
<h4 id="提示-34">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;
int father[110], n;
int dist[110], size[110];

void init() {
    for (int i = 1; i &lt;= n; ++i) {
        father[i] = i, dist[i] = 0, size[i] = 1;
    }
}
void merge(int a, int b) {
    a = get(a);
    b = get(b);
    if (a != b) {
        father[a] = b;
        dist[a] = size[b];
        size[b] += size[a];
    }
}
int main() {
    n = 10;
    init();
    merge(1, 2);
    merge(10, 7);
    merge(3, 4);
    merge(3, 7);

    return 0;
}
</code></pre>
<h4 id="代码-41">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;
int father[110], n;
int dist[110], size[110];

void init() {
    for (int i = 1; i &lt;= n; ++i) {
        father[i] = i, dist[i] = 0, size[i] = 1;
    }
}
void merge(int a, int b) {
    a = get(a);
    b = get(b);
    if (a != b) {
        father[a] = b;
        dist[a] = size[b];
        size[b] += size[a];
    }
}
int main() {
    n = 10;
    init();
    merge(1, 2);
    merge(10, 7);
    merge(3, 4);
    merge(3, 7);

    return 0;
}
</code></pre>
<hr>
<h3 id="第六步-4">第六步</h3>
<h4 id="讲解-42">讲解</h4>
<p>接下来我们查找<code>1</code>所在集合的根节点并输出<code>1</code>到根节点的距离<code>dist</code>。在<code>main</code>函数里继续写下</p>
<pre><code class="language-c++">get(1); // 一定要先 get，可能没有直接连接根节点
cout &lt;&lt; dist[1] + 1 &lt;&lt; endl;
</code></pre>
<h4 id="提示-35">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;
int father[110], n;
int dist[110], size[110];

void init() {
    for (int i = 1; i &lt;= n; ++i) {
        father[i] = i, dist[i] = 0, size[i] = 1;
    }
}
void merge(int a, int b) {
    a = get(a);
    b = get(b);
    if (a != b) {
        father[a] = b;
        dist[a] = size[b];
        size[b] += size[a];
    }
}
int main() {
    n = 10;
    init();
    merge(1, 2);
    merge(10, 7);
    merge(3, 4);
    merge(3, 7);
    get(1); // 一定要先 get，可能没有直接连接根节点
    cout &lt;&lt; dist[1] + 1 &lt;&lt; endl;

    return 0;
}
</code></pre>
<h4 id="代码-42">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;
int father[110], n;
int dist[110], size[110];

void init() {
    for (int i = 1; i &lt;= n; ++i) {
        father[i] = i, dist[i] = 0, size[i] = 1;
    }
}
void merge(int a, int b) {
    a = get(a);
    b = get(b);
    if (a != b) {
        father[a] = b;
        dist[a] = size[b];
        size[b] += size[a];
    }
}
int main() {
    n = 10;
    init();
    merge(1, 2);
    merge(10, 7);
    merge(3, 4);
    merge(3, 7);
    get(1); // 一定要先 get，可能没有直接连接根节点
    cout &lt;&lt; dist[1] + 1 &lt;&lt; endl;

    return 0;
}
</code></pre>
<hr>
<h3 id="第七步-3">第七步</h3>
<h4 id="讲解-43">讲解</h4>
<p>我们接着实现<code>get</code>函数。在<code>merge</code>函数上方继续写下</p>
<pre><code class="language-c++">int get(int x) {
    if (father[x] == x) {
        return x;
    }
    int y = father[x];
    father[x] = get(y);
    dist[x] += dist[y];
    return father[x];
}
</code></pre>
<h4 id="提示-36">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;
int father[110], n;
int dist[110], size[110];

void init() {
    for (int i = 1; i &lt;= n; ++i) {
        father[i] = i, dist[i] = 0, size[i] = 1;
    }
}
int get(int x) {
    if (father[x] == x) {
        return x;
    }
    int y = father[x];
    father[x] = get(y);
    dist[x] += dist[y];
    return father[x];
}
void merge(int a, int b) {
    a = get(a);
    b = get(b);
    if (a != b) {
        father[a] = b;
        dist[a] = size[b];
        size[b] += size[a];
    }
}
int main() {
    n = 10;
    init();
    merge(1, 2);
    merge(10, 7);
    merge(3, 4);
    merge(3, 7);
    get(1); // 一定要先 get，可能没有直接连接根节点
    cout &lt;&lt; dist[1] + 1 &lt;&lt; endl;

    return 0;
}
</code></pre>
<h4 id="代码-43">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;
int father[110], n;
int dist[110], size[110];

void init() {
    for (int i = 1; i &lt;= n; ++i) {
        father[i] = i, dist[i] = 0, size[i] = 1;
    }
}
int get(int x) {
    if (father[x] == x) {
        return x;
    }
    int y = father[x];
    father[x] = get(y);
    dist[x] += dist[y];
    return father[x];
}
void merge(int a, int b) {
    a = get(a);
    b = get(b);
    if (a != b) {
        father[a] = b;
        dist[a] = size[b];
        size[b] += size[a];
    }
}
int main() {
    n = 10;
    init();
    merge(1, 2);
    merge(10, 7);
    merge(3, 4);
    merge(3, 7);
    get(1); // 一定要先 get，可能没有直接连接根节点
    cout &lt;&lt; dist[1] + 1 &lt;&lt; endl;

    return 0;
}
</code></pre>
<hr>
<h3 id="第八步-2">第八步</h3>
<h4 id="讲解-44">讲解</h4>
<p>到这里，里可以点击<strong>运行</strong>看看效果。</p>
<p>接下来我们查找<code>3</code>所在集合的根节点并输出<code>3</code>到根节点的距离<code>dist</code>。在<code>main</code>函数里继续写下</p>
<pre><code class="language-c++">get(3);
cout &lt;&lt; dist[3] + 1 &lt;&lt; endl;
</code></pre>
<h4 id="提示-37">提示</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;
int father[110], n;
int dist[110], size[110];

void init() {
    for (int i = 1; i &lt;= n; ++i) {
        father[i] = i, dist[i] = 0, size[i] = 1;
    }
}
int get(int x) {
    if (father[x] == x) {
        return x;
    }
    int y = father[x];
    father[x] = get(y);
    dist[x] += dist[y];
    return father[x];
}
void merge(int a, int b) {
    a = get(a);
    b = get(b);
    if (a != b) {
        father[a] = b;
        dist[a] = size[b];
        size[b] += size[a];
    }
}
int main() {
    n = 10;
    init();
    merge(1, 2);
    merge(10, 7);
    merge(3, 4);
    merge(3, 7);
    get(1); // 一定要先 get，可能没有直接连接根节点
    cout &lt;&lt; dist[1] + 1 &lt;&lt; endl;
    get(3);
    cout &lt;&lt; dist[3] + 1 &lt;&lt; endl;
    return 0;
}
</code></pre>
<h4 id="代码-44">代码</h4>
<pre><code class="language-c++">#include &lt;iostream&gt;
using namespace std;
int father[110], n;
int dist[110], size[110];

void init() {
    for (int i = 1; i &lt;= n; ++i) {
        father[i] = i, dist[i] = 0, size[i] = 1;
    }
}
int get(int x) {
    if (father[x] == x) {
        return x;
    }
    int y = father[x];
    father[x] = get(y);
    dist[x] += dist[y];
    return father[x];
}
void merge(int a, int b) {
    a = get(a);
    b = get(b);
    if (a != b) {
        father[a] = b;
        dist[a] = size[b];
        size[b] += size[a];
    }
}
int main() {
    n = 10;
    init();
    merge(1, 2);
    merge(10, 7);
    merge(3, 4);
    merge(3, 7);
    get(1); // 一定要先 get，可能没有直接连接根节点
    cout &lt;&lt; dist[1] + 1 &lt;&lt; endl;
    get(3);
    cout &lt;&lt; dist[3] + 1 &lt;&lt; endl;
    return 0;
}
</code></pre>
<hr>
<h3 id="完成讲解-7">完成讲解</h3>
<p>这一节已经完成了，赶紧运行看看效果。</p>
<p>聪明的你一定学会了<code>disjoint</code>怎么用了。</p>
<h2 id="队列">队列`</h2>
<h3 id="简介">简介</h3>
<p>队列是一种特殊的线性表，特殊之处在于它只允许在表的前端（front）进行删除操作，而在表的后端（rear）进行插入操作，和栈一样，队列是一种操作受限制的线性表。进行插入操作的端称为队尾，进行删除操作的端称为队头。</p>
<ul>
<li>重要特性：元素先进先出</li>
</ul>
<h3 id="实现方式">实现方式</h3>
<ul>
<li>数组</li>
<li>链表</li>
<li>STL</li>
</ul>
<h3 id="标程">标程</h3>
<pre><code class="language-cpp">#include &lt;cstdio&gt;
#include &lt;queue&gt;
#include &lt;algorithm&gt;
using namespace std;

struct Queue {
    /* 数组实现 */
    void Queue_Array() {
        int q[1005] = {0};
        int head = 0;
        int tail = head;
        q[tail++] = 1;
        q[tail++] = 2;
        q[tail++] = 3;
        while (head &lt; tail) {
            printf(&quot;%d\n&quot;, q[head]);
            head++;
        }
    }

    /* STL实现 */
    void Queue_STL() {
        queue&lt;int&gt; q;
        q.push(1);
        q.push(2);
        q.push(3);
        while (!q.empty()) {
            printf(&quot;%d\n&quot;, q.front());
            q.pop();
        }
    }
}Q;

int main() {
    Q.Queue_Array();
    Q.Queue_STL();
    return 0;
}

</code></pre>
<h2 id="单调队">单调队`</h2>
<h3 id="简介-2">简介</h3>
<p>单调队列，即单调递减或单调递增的队列。使用频率不高，但在有些程序中会有非同寻常的作用。</p>
<ul>
<li>重要特性：元素可以从两端进出</li>
</ul>
<p>实现方式</p>
<ul>
<li>数组</li>
<li>链表</li>
<li>STL</li>
</ul>
<p>deque的性质</p>
<ul>
<li>容器中间插入和删除效率很低</li>
<li>与vector容器操作类似</li>
</ul>
<h3 id="例题">例题</h3>
<ul>
<li>题目链接：http://acm.hdu.edu.cn/showproblem.php?pid=4286</li>
</ul>
<p>题意：n个数字一开始排成一行，有两个指针L和R，指向了这串数字的一个区间的端点。<br>
现在有7种操作</p>
<ul>
<li>使一个指针左移</li>
<li>使一个指针右移</li>
<li>在L后插入一个数字X</li>
<li>在R前插入一个数字X</li>
<li>删除L所指元素</li>
<li>删除R所指元素</li>
<li>翻转[L,R]区间</li>
</ul>
<p>Question：m次操作后，整串数字是什么样的？</p>
<p>分析：如果区间L和R每一次都是任意范围的，那么肯定是平衡树问题。但是现在区间断点L和R每次只能左移一位或右移一位，那么可以将整串数字以L、R为中点分为三段，然后模拟这几种操作。但是翻转不能直接模拟，用一个标记来判断一下正反。</p>
<h2 id="双端队列">双端队列`</h2>
<h3 id="简介-3">简介</h3>
<p>双端队列（deque，全名double-ended queue）是一个限定插入和删除操作的数据结构，具有队列和栈的性质。双端队列中的元素可以从两端弹出，其限定插入和删除操作在表的两端进行。<br>
双端队列是限定插入和删除操作在表的两端进行的线性表。这两端分别称做端点1和端点2。也可像栈一样，可以用一个铁道转轨网络来比喻双端队列。</p>
<ul>
<li>重要特性：元素可以从两端进出</li>
</ul>
<p>实现方式</p>
<ul>
<li>数组</li>
<li>链表</li>
<li>STL</li>
</ul>
<p>deque的性质</p>
<ul>
<li>容器中间插入和删除效率很低</li>
<li>与vector容器操作类似</li>
</ul>
<h3 id="例题-2">例题</h3>
<ul>
<li>题目链接：http://acm.hdu.edu.cn/showproblem.php?pid=4286</li>
</ul>
<p>题意：n个数字一开始排成一行，有两个指针L和R，指向了这串数字的一个区间的端点。<br>
现在有7种操作</p>
<ul>
<li>使一个指针左移</li>
<li>使一个指针右移</li>
<li>在L后插入一个数字X</li>
<li>在R前插入一个数字X</li>
<li>删除L所指元素</li>
<li>删除R所指元素</li>
<li>翻转[L,R]区间</li>
</ul>
<p>Question：m次操作后，整串数字是什么样的？</p>
<p>分析：如果区间L和R每一次都是任意范围的，那么肯定是平衡树问题。但是现在区间断点L和R每次只能左移一位或右移一位，那么可以将整串数字以L、R为中点分为三段，然后模拟这几种操作。但是翻转不能直接模拟，用一个标记来判断一下正反。</p>
<h3 id="标程-2">标程</h3>
<pre><code class="language-cpp">#include&lt;algorithm&gt;
#include&lt;deque&gt;
#include&lt;iostream&gt;
using namespace std;

int main() {
    deque&lt;int&gt; dq;
    dq.push_back(1);
    dq.push_back(2);
    dq.push_back(3);
    dq.push_front(4);
    dq.push_front(5);
    dq.push_front(6);
    dq.pop_back();
    dq.pop_front();
    deque&lt;int&gt;::iterator it;
    for (it = dq.begin(); it != dq.end(); it++) {
        cout &lt;&lt; *it &lt;&lt; &quot; &quot;;
    }
    cout &lt;&lt; endl;
    return 0;
}

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[光一直以光速向前传播，可为何光逃离不了黑洞？]]></title>
        <id>https://hesy-zhoulijie.github.io/post/blackhole/</id>
        <link href="https://hesy-zhoulijie.github.io/post/blackhole/">
        </link>
        <updated>2020-10-05T05:14:43.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="光一直以光速向前传播可为何光逃离不了黑洞">光一直以光速向前传播，可为何光逃离不了黑洞？</h1>
]]></summary>
        <content type="html"><![CDATA[<h1 id="光一直以光速向前传播可为何光逃离不了黑洞">光一直以光速向前传播，可为何光逃离不了黑洞？</h1>
<!-- more -->
<p>（本文冗长。最后有一句话比喻，通俗易懂。）</p>
<p>一句话：<strong>因为在黑洞内部，光锥是永远向内的。</strong></p>
<p>[toc]</p>
<h2 id="首先解释一个关键的概念什么是光锥"><strong>首先解释一个关键的概念，什么是「光锥」。</strong></h2>
<p>简单地说，<strong>光锥就是光的时空路径</strong>——注意是「时空」，而不是「空间」。即，在某时某地发射<strong>一闪光</strong>，此后光传播所经历到的<strong>时空</strong>区域就是「光锥」。换句话说，就是能看到这个闪光的<strong>时空</strong>区域。当然，这严格说是未来光锥。</p>
<p>这样说还是很抽象，举个1维空间的例子。这个世界不妨称之为「1+1维」时空（因为是1维空间+1维时间）。简单起见，假设光速为常数 v=1。<br>
时间 t = 0 时，在空间坐标原点 x = 0 处发生一闪光。这时，因为光以有限的速度 v = 1 传播，其路径就是 x = t 或者 x = - t。这里有<strong>两条</strong>路径，因为在一维空间里，光能朝「前」、「后」<strong>两个</strong>方向传播。<br>
画在 (x, t) 平面上，光的时空路径 x = t 或者 x = - t 就是通过原点的45度角射线。这射线就是「1+1维」时空的光锥。如下图所示，红色射线就是光锥。</p>
<figure data-type="image" tabindex="1"><img src="https://pic2.zhimg.com/7ca34d67e96f0430466220cb0b9ae089_b.jpg" alt="img" loading="lazy"></figure>
<p>在这个「1+1维」时空里，只有在光锥上的点，才能看到闪光。比如 (x = 2, t = 1) 这个点，就不在光锥上，也看不到闪光。因为在 t = 1 秒的时候，光还没有传播到 x = 2 处。x = 2 处只有在等到 t = 2 时才能看到闪光，于是 (x = 2, t = 2) 这个点正好就在光锥上。上面这个例子很容易推广到真实的「3+1维」时空（3维空间，1维时间），只不过这时候射线变成了锥子（当然是3维的锥子），所以叫光锥。<br>
所以光锥是时空的一个截面，维度比时空少一维。光锥的存在正是因为光速有限。</p>
<p>更物理地说，光锥是<strong>时空</strong>的一个「界限」，即，能发生因果关联与否的区分边界。因为光速是最大速度，<strong>光在光锥表面传播</strong>，其他信号在光锥内部传播，所以光锥内部就是可发生信号联系（因果关联）的区域，光锥外则是不可能有因果关联的区域。<br>
以下图为例（引子wiki）</p>
<figure data-type="image" tabindex="2"><img src="https://pic3.zhimg.com/dff39123dd69d894cb6206e81af6ea1a_b.jpg" alt="img" loading="lazy"></figure>
<p>这里展示的是「2+1维时空」：2维空间（横向）+1维时间（纵向）。A代表某时某地一「事件」，光锥内部（上图黄色区域）就是A事件未来可影响到的时空区域，比如B点（下部黄色区域代表可以过去可能影响过A的时空区域）；而光锥外的其他区域，过去、未来都不可能与A事件发生关联，比如C点。</p>
<h2 id="回到光传播的问题上"><strong>回到光传播的问题上。</strong></h2>
<p>广义相对论说，时空可以弯曲。于是在这个弯曲的时空里，光就不一定走 x = t 或者 x = - t 这么简单的直线了。比如在「1+1维」的时空里，光的路径可能就是这个样子：<img src="https://pic2.zhimg.com/7269d2f7d5c0e70f41f53906f8c2037d_b.jpg" alt="img" loading="lazy"></p>
<p>根据时空弯曲的程度，光可以走各种扭曲的路径。上图中，虽然光的路径很扭曲，但是左边 x1(t) 还是在朝「左」传播，右边 x2(t) 还是在朝右传播。那么有没有可能扭曲成这个样子：<img src="https://pic2.zhimg.com/8b722702054afb27278888c17b4f4a3d_b.jpg" alt="img" loading="lazy">也就是说，无论光<strong>自己以为</strong>在朝哪个方向传播，实际上都是在朝左传播？<br>
回答是当然可能！<strong>这正是光无法离开黑洞的关键！</strong></p>
<p>具体而言：对于比较正常的时空里的正常的光锥，光可以（沿着光锥表面）向前后左右任意<strong>空间</strong>方向传播。但是<strong>在黑洞内部，光锥被扭曲，光锥的所有空间方向都朝向黑洞内部，使得光只能向内传播。</strong></p>
<h2 id="以最简单的不带电不旋转黑洞即schwarzschild黑洞为例"><strong>以最简单的不带电不旋转黑洞即「Schwarzschild黑洞」为例。</strong></h2>
<p>下图（引自wiki）中左边白色区域为黑洞外，右边黑色区域为黑洞内。在左边即黑洞外，光锥比较正常，光可以朝两个方向传播——比如朝左也就是背离黑洞，或者朝右也就是朝向黑洞。<br>
<img src="https://pic2.zhimg.com/6dc635fa5e334b7ef295c143f1fdc9b1_b.jpg" alt="img" loading="lazy">如果我们靠近黑洞，如下图（引自wiki），光锥开始扭曲，明显开始朝黑洞倾斜。于是光倾向于向黑洞（朝右）内传播，只有少部分可以背离黑洞（朝左）。<img src="https://pic4.zhimg.com/a2238e2adcfda9ace3ba709ecd81d373_b.jpg" alt="img" loading="lazy">如果我们进入黑洞内部（黑色区域），如下图（引自wiki），这时，光锥完全被扭曲，<strong>光锥的任何方向都是指向黑洞内部</strong>。也就是说，<strong>光无论怎么传播，都是在「朝内」传播。</strong><img src="https://pic4.zhimg.com/1cf0dfcf9528317afe025f0f6d0167c3_b.jpg" alt="img" loading="lazy">下图（来自网络）是个更形象的说明：</p>
<p><img src="https://pic3.zhimg.com/923ab201fb34844b1b9c5769b5f736a6_b.jpg" alt="img" loading="lazy">圆柱代表黑洞视界，圆柱内是黑洞内，圆柱外是黑洞外。黑洞外光锥被扭曲的不厉害，光可以朝向黑洞也可以背离黑洞。黑洞里面，光锥完全倒向黑洞内，光锥的所有方向都指向黑洞内，于是光无论朝哪个方向传播都是在向内传播。<br>
总之，一句话，<strong>在黑洞（视界）内部，时空被扭曲了——只有向内，没有向外。</strong></p>
<p><strong>最后，如果觉得还是很抽象的话</strong>，可以考虑这样的例子（虽然不严谨，但本质上一个道理）：<br>
你在坐高铁，你以为你可以来回走动，但是因为你不可能比高铁走的更快，所以在地面上的人看来，你只能永远在朝前走，就像光在黑洞内只能永远朝里走。</p>
<p><a href="https://www.zhihu.com/question/310891875/answer/1186554752">原文链接</a></p>
<p><font color="#F6F6F6">转载自知乎日报2013.05.19</font></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何优雅地使用 Windows 系统？]]></title>
        <id>https://hesy-zhoulijie.github.io/post/userwin/</id>
        <link href="https://hesy-zhoulijie.github.io/post/userwin/">
        </link>
        <updated>2020-10-05T05:12:42.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="如何优雅地使用-windows-系统">如何优雅地使用 Windows 系统？</h1>
<p><strong>是否优雅不得而知，仅提供个人用法。</strong></p>
]]></summary>
        <content type="html"><![CDATA[<h1 id="如何优雅地使用-windows-系统">如何优雅地使用 Windows 系统？</h1>
<p><strong>是否优雅不得而知，仅提供个人用法。</strong></p>
<!-- more -->
<p>[toc]</p>
<h2 id="1-概览"><strong>1、概览：</strong></h2>
<p>这是我的桌面，无杀软。（壁纸出处：<a href="http://10wallpaper.com/cn/view/Lion_of_the_Serengeti_National_Park-MAC_OS_X_Mountain_Lion_HD_Wallpapers.html">塞伦盖蒂国家公园狮子</a>，感谢@棒棒糖elaine）<img src="https://pic3.zhimg.com/ce0c99327d1fa2889b0a8fbf0722beda_b.jpg" alt="img" loading="lazy"></p>
<h2 id="2-使用云服务"><strong>2、使用云服务</strong></h2>
<p>比如 Chrome 的书签同步插件 Xmarks（在天朝自带的同步功能有些鸡肋，但是除了书签之外的数据可以使用自带同步功能）； Evernote 写笔记、GTD、知识系统管理；将平时不用的但是有价值的东西上传到网盘里； 使用同步文件夹，将重要的文件同步上传到云空间；项目都同步到 SVN 或 GitHub 中。</p>
<p>使用云端软件平台（<a href="http://yunduan.cn/">云端 - 创新生活新体验</a>），把软件都装在上面，也可以将本地软件导入平台中（虚拟化），这样即使是重装系统后也无需重装应用，可携带缓存文件夹到不同电脑上使用平台上的软件，无需安装。绿色，便于管理。<br>
<img src="https://pic4.zhimg.com/fe582e84f2211acf6d7a32418be3e55f_b.jpg" alt="img" loading="lazy"></p>
<h2 id="3-美化"><strong>3、美化</strong></h2>
<h3 id="31-如上面有人说的使用mactype字体渲染-优化后效果好很多"><strong>3.1</strong> 如上面有人说的，使用Mactype字体渲染。（优化后效果好很多）</h3>
<figure data-type="image" tabindex="1"><img src="https://pic2.zhimg.com/495638b1101881d200cf642fcf3b92bd_b.jpg" alt="img" loading="lazy"></figure>
<h3 id="32-使用-clover-创建标签式资源管理器窗口clover-brings-chrome-style-tabs-to-windows-explorer"><strong>3.2</strong> 使用 clover 创建标签式资源管理器窗口（<a href="http://ejie.me/">Clover Brings Chrome-Style Tabs to Windows Explorer.</a>）</h3>
<figure data-type="image" tabindex="2"><img src="https://pic4.zhimg.com/01cc0cf40f8adf3cb8967587db522fc7_b.jpg" alt="img" loading="lazy"></figure>
<h3 id="33-使用-netspeedmonitor-来监控网速-floriangillescom"><strong>3.3</strong> 使用 NetSpeedMonitor 来监控网速。（<a href="http://www.floriangilles.com/software/netspeedmonitor">FlorianGilles.com</a>）<img src="https://pic2.zhimg.com/8f7ec90559ae22db77e7941a1eb5b03d_b.jpg" alt="img" loading="lazy"></h3>
<h3 id="34-用一个快速而且不弹框的好输入法小狼毫downloads-rimeime-下載-rime-輸入法"><strong>3.4</strong> 用一个快速而且不弹框的好输入法：《小狼毫》（<a href="http://code.google.com/p/rimeime/wiki/Downloads">Downloads - rimeime - 下載 Rime 輸入法</a>）</h3>
<figure data-type="image" tabindex="3"><img src="https://pic4.zhimg.com/c4763d20ec0cf76ce3a4946143a0035b_b.jpg" alt="img" loading="lazy"></figure>
<p>这是相关的介绍：<a href="http://www.byvoid.com/blog/recommend-rime">推薦一個神級輸入法——Rime</a> ( 谢谢 @郭家寶 提醒更新）</p>
<h2 id="4-优化">4**、优化**</h2>
<p>定期清理系统垃圾，使用CCleaner（<a href="http://www.piriform.com/CCLEANER">CCleaner - PC Optimization and Cleaning</a>）。<br>
一个月碎片整理一次。使用Defraggler（<a href="https://www.piriform.com/defraggler">Defraggler - File and Disk Defragmentation</a>）。</p>
<h2 id="5-其他"><strong>5、其他</strong></h2>
<p>优雅地使用Windows唯一的手段就是找到符合自己的操作习惯，把不顺心的情况化解，并乐于挖掘适合自己的功能或者操作，包括快捷键、个性化设置等。</p>
<p>嗯，有人喜欢「番茄工作法」的吗？ 对于精力不集中的人，建议使用Focus Booster，一款小巧优雅的软件。（下载：<a href="http://www.focusboosterapp.com/">focus booster</a>）<br>
<img src="https://pic2.zhimg.com/f607fef019b58bd3b4c2c0e3dced6231_b.jpg" alt="img" loading="lazy"><br>
有人想要一个款优雅的 editor，这里推荐一款性感无比的编辑器：Sublime Text 2（各种配色任你选：<a href="https://github.com/daylerees/colour-schemes">daylerees/colour-schemes 路 GitHub</a>）<br>
<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ges1dzuu01j30k00h6wgc.jpg" alt="" loading="lazy"></p>
<p>- - Update - -<br>
有人说桌面没有一个图标以及任务栏隐藏就很优雅吗？为什么要学Mac OS？<br>
我想说：这些都是个人习惯问题，只要用得顺手，在两三步下可以迅速找到自己要用得东西就行了。 精简就一定是Mac的专利？</p>
<p>写的时候没想到大家反响这么积极啊，弄到我都有些心虚了，谈不上优雅，只能算利用工具提高生产里而已。 还有，上面推荐的软件真不是广告 - _ -||</p>
<p><font color="#47A8FF"><a href="https://daily.zhihu.com/story/395">原文链接</a></font></p>
<p><font color="#F6F6F6">转载自知乎日报2013.05.19</font></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[夸克浏览器，轻量但好用的浏览工具]]></title>
        <id>https://hesy-zhoulijie.github.io/post/quark/</id>
        <link href="https://hesy-zhoulijie.github.io/post/quark/">
        </link>
        <updated>2020-10-05T05:11:46.000Z</updated>
        <summary type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://cdn.sspai.com/attachment/origin/2016/10/31/353057.jpg?imageMogr2/quality/95/thumbnail/!1250x686.6666666666666r/gravity/Center/crop/1250x686.6666666666666/interlace/1" alt="" loading="lazy"></figure>
<h1 id="夸克浏览器轻量但好用的浏览工具">夸克浏览器，轻量但好用的浏览工具</h1>
]]></summary>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://cdn.sspai.com/attachment/origin/2016/10/31/353057.jpg?imageMogr2/quality/95/thumbnail/!1250x686.6666666666666r/gravity/Center/crop/1250x686.6666666666666/interlace/1" alt="" loading="lazy"></figure>
<h1 id="夸克浏览器轻量但好用的浏览工具">夸克浏览器，轻量但好用的浏览工具</h1>
<!-- more -->
<p>在谈及浏览器的时候，我们更希望拥有的是一款具有优秀「工具属性」的应用：在相对较少却高度专注的使用情景里，它能够尽最大可能为我们提供更好的网页浏览体验——而不是不由分说地接管你的视线、分散你的注意力，甚至在首页向你推送一些不合口味的「热点新闻」。</p>
<p>换言之，有时候我们需要的是一款「轻量但够用」的浏览工具。除了之前我们介绍过的 Via 和 Ninja 之外，现在 Android 用户又有了一个新的选择，夸克浏览器。</p>
<h2 id="简约精致的视觉风格">简约精致的视觉风格</h2>
<p>夸克浏览器在视觉风格上和 Chrome 浏览器有着些许的相似：主界面 Logo、搜索 / 地址框、快速导航标签自上而下一字排开，下方分别为标签页管理和菜单按钮，除此之外并无其他不必要的信息造成过多的视觉干扰。</p>
<p>标签页管理、菜单和快速导航编辑页面也都采用了卡片堆叠效果，轻巧灵动，无论是阴影还是动效都不会给我们留下半点「廉价感」。</p>
<p>在滚动浏览网页的过程中，网页标题栏将会缩小，多标签管理和菜单按钮也会随之隐藏，为网页内容留出了足够的展示空间。</p>
<figure data-type="image" tabindex="2"><img src="https://cdn.sspai.com/attachment/origin/2016/10/26/352156.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://cdn.sspai.com/attachment/origin/2016/10/26/352157.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://cdn.sspai.com/attachment/origin/2016/10/26/352158.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<h2 id="贴心的细节设计">贴心的细节设计</h2>
<p>考虑到现在的手机屏幕越做越大，夸克浏览器并没有像大多数浏览器那样把地址栏放在顶部，而是将整合后的「搜索 / 地址栏」放在了用户更容易操作的底部，常用网址建议会以彩色标签的方式出现在地址栏上方。</p>
<p>同时应用在输入网址时提供了一个快速补全工具条，用于一键输入一些常用的网址符号和后缀，这个工具条中间还放置着一个用于移动输入光标的「摇杆」，进行复杂网址输入时相当有用，长按「摇杆」后还可进行文字选中操作。</p>
<figure data-type="image" tabindex="5"><img src="https://cdn.sspai.com/attachment/origin/2016/10/26/352254.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="6"><img src="https://cdn.sspai.com/attachment/origin/2016/10/26/352255.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>夸克浏览器还支持滑动前进/后退、底部上滑返回首页、长按标签管理按钮打开新标签页等一些基本的手势操作，配合「搜索框/地址栏下置」设计，浏览网页的过程中单手操作便能解决大部分网页浏览和导航需求。</p>
<figure data-type="image" tabindex="7"><img src="https://cdn.sspai.com/attachment/origin/2016/10/26/352166.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>不得不提的是，在夸克浏览器的设置当中还埋藏这一个相当强大的**「云端加速」**功能。</p>
<p>尽管从字面上看该功能似乎很多同类浏览器都在做，但在夸克浏览器当中，这个功能的「能力范围」却可以等同于 <strong>网页加速 + 广告过滤 + 网页再排版</strong>（也叫「酷影模式」）：当你打开豆瓣、淘宝的网页版客户端时，烦人的 App 下载提示被过滤掉了；而校园网、政府网站等各种「老式网站」上面飘来飘去的悬浮窗也会被自动屏蔽掉，极大提升了使用 Web App 和浏览网站网站的体验。</p>
<p>事实上，自其前身「极简浏览器」面世起，这款应用已经经历了数个版本的更迭。好在它一直秉承着一份难能可贵的「克制」：没有选择不断地加入各种臃肿的功能，而是在细节设计和用户体验上进行不断优化，最终在「浏览网页」这件事情上做出了一些不一样的东西。</p>
<p>如果你只需要一款轻量但是又够用浏览器，夸克也许是个不错的选择。你可以前往 <a href="../su/16hb">豌豆荚</a> 或者 <a href="https://itunes.apple.com/cn/app/kua-ke-liu-lan-qi/id1160172628?mt=8">App Store</a> 免费下载。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Air Keyboard在iPad上控制键鼠]]></title>
        <id>https://hesy-zhoulijie.github.io/post/airkeyboard/</id>
        <link href="https://hesy-zhoulijie.github.io/post/airkeyboard/">
        </link>
        <updated>2020-10-05T05:09:28.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="使用air-keyboard在ipad上控制键鼠">使用Air Keyboard在iPad上控制键鼠</h1>
]]></summary>
        <content type="html"><![CDATA[<h1 id="使用air-keyboard在ipad上控制键鼠">使用Air Keyboard在iPad上控制键鼠</h1>
<!-- more -->
<blockquote>
<p>其他平台（建议使用第一个链接）<br>
镜像1 : <a href="http://suo.im/6lNYqH">http://suo.im/6lNYqH</a><br>
镜像2 : <a href="http://suo.im/5R3bnC">http://suo.im/5R3bnC</a><br>
镜像3 : <a href="http://suo.im/6em1ta">http://suo.im/6em1ta</a></p>
</blockquote>
<p>[toc]</p>
<h2 id="操作方法">操作方法</h2>
<p>在App Store找到这个<code>Air Keyboard（空气键盘）</code><br>
免费版是<a href="https://apps.apple.com/cn/app/id726059761">这个</a><br>
如果你想氪金，不拦你用<a href="https://apps.apple.com/cn/app/air-keyboard-mian-fei-wu-xian/id541873446">这个</a>（18块）</p>
<blockquote>
<p>Air Keyboard allows you to use your iPad as a wireless keyboard and touch pad for your PC or Mac.<br>
Features available in the Pro version of the app:<br>
• 9 built-in keyboard layouts.<br>
Including regular keyboard, iPad soft keyboard, Media Player, Photoshop, shooter game, AZERTY and Cyrillic layouts.<br>
• Fully customizable keyboard layout designer.<br>
It allows you to create your own layout, place buttons as you want, set their appearance and bind keys. You can also download images for your buttons from Internet or local Photo Library. Layouts can be exported and imported via iTunes.<br>
• Key and event sequences.<br>
You can create a sequence containing key press, mouse movement, delay or scroll event and then bind the sequence to a button. This can simplify working with complex software.<br>
• Touch pad with multi-touch.<br>
Scroll gesture is supported on all systems.<br>
Multitouch is available for Windows 8+.<br>
This free Lite version has limited functionality.<br>
How can you use Air Keyboard? There are some ideas:<br>
• Use it for presentations<br>
• Play games sitting in a comfortable position<br>
• Control your home cinema distantly when resting on your sofa<br>
• Simplify using complex programs by creating special layouts and emulating shortcut sequences<br>
To use this app you have to install a server program on your computer.<br>
Get it for free at www.airkeyboardapp.com.<br>
Before you use this app, we recommend you to read the FAQ section on our website: www.airkeyboardapp.com/faq</p>
</blockquote>
<p>来自App Store</p>
<blockquote>
<p>Air键盘允许您使用iPad作为无线键盘和PC或Mac的触摸板。<br>
Pro版应用程序提供的功能：<br>
•9个内置键盘布局。<br>
包括普通键盘、iPad软键盘、媒体播放器、Photoshop、shooter game、AZERTY和Cyrillic布局。<br>
•完全可定制的键盘布局设计器。<br>
它允许您创建自己的布局、根据需要放置按钮、设置其外观和绑定键。您还可以从Internet或本地照片库下载按钮的图像。布局可以通过iTunes导出和导入。<br>
•键和事件序列。<br>
您可以创建包含按键、鼠标移动、延迟或滚动事件的序列，然后将该序列绑定到按钮。这可以简化复杂软件的工作。<br>
•多点触控的触摸板。<br>
所有系统都支持滚动手势。<br>
多点触控可用于Windows 8+。<br>
这个免费的Lite版本功能有限。<br>
如何使用气动键盘？有一些想法：<br>
•用于演示<br>
•坐在舒适的位置上玩游戏<br>
•在沙发上休息时，远距离控制家庭影院<br>
•通过创建特殊布局和模拟快捷顺序简化复杂程序的使用<br>
要使用此应用程序，您必须在计算机上安装服务器程序。<br>
在www.airkeyboardapp.com上免费获取。<br>
在使用此应用程序之前，我们建议您阅读我们网站上的常见问题部分：www.airkeyboardapp.com/FAQ</p>
</blockquote>
<p>来自百度翻译</p>
<p>废话不多说，上图<br>
<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geip1q9wpij30sg0lc1b8.jpg" alt="" loading="lazy"><br>
这是最标准的界面，挺好看的。我是用这个，用iPad Pro会很舒服，但是不巧我不是iPad Pro。😭😭😭<br>
<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geip38l3p7j30sg0lcalb.jpg" alt="" loading="lazy"><br>
这个使用的是iPad自带的键盘，这个不太好用。<br>
<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geip4g47l1j30sg0lc7ho.jpg" alt="" loading="lazy"><br>
这个是需要付费的一个键盘布局，高仿MacBook的键盘，但是姚要付钱，算了。<br>
<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geip54w567j30sg0lcqul.jpg" alt="" loading="lazy"><br>
这是一个打游戏用的键盘，好用归好用，付钱，算了。<br>
<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geip8nevvrj30sg0lc1kx.jpg" alt="" loading="lazy"><br>
这是一个媒体控制键盘，付钱，哎。。。<br>
这个软件也支持绑定PS，但是还是要付钱，而且也没搞到图，……</p>
<h2 id="高级一点">高级一点</h2>
<p>这个软件有个模式是当触摸板，不过要付钱，但是这个可以用一个小技巧来**掉。<br>
就是使用我屏幕上的这个图标进行缩放，不需要软件。<br>
<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geip82lzazj3019019744.jpg" alt="" loading="lazy"><br>
<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geip99z5vyj30sg0lc0up.jpg" alt="" loading="lazy"><br>
先找到设置里的通用，点辅助功能<br>
<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geip9q8lk3j30sg0lcac5.jpg" alt="" loading="lazy"><br>
找到缩放的选项卡<br>
<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geipa7tuijj30sg0lc772.jpg" alt="" loading="lazy"><br>
建议大家打开“控制器”，“智能键入”这两个标签页，这样就可以放大到触摸板的那块屏幕，调整一下灵敏度，这样就OK了。</p>
<h2 id="后记">后记</h2>
<p>虽然好像不付费的功能有点少，不过我体验下来还是够了的，这款软件比市面上的很多的软件都良心，所以推荐给大家。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[12 张卡片，在 Windows 上带回 macOS 的特性]]></title>
        <id>https://hesy-zhoulijie.github.io/post/win-mac/</id>
        <link href="https://hesy-zhoulijie.github.io/post/win-mac/">
        </link>
        <updated>2020-10-05T05:08:07.000Z</updated>
        <summary type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://cdn.sspai.com/2020/03/16/02b8b85ad3f38869133e64784f291eb0.png?imageMogr2/quality/95/thumbnail/!1218x669.088r/gravity/Center/crop/1218x669.088/interlace/1" alt="" loading="lazy"></figure>
<h1 id="12-张卡片在-windows-上带回-macos-的特性">12 张卡片，在 Windows 上带回 macOS 的特性</h1>
]]></summary>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://cdn.sspai.com/2020/03/16/02b8b85ad3f38869133e64784f291eb0.png?imageMogr2/quality/95/thumbnail/!1218x669.088r/gravity/Center/crop/1218x669.088/interlace/1" alt="" loading="lazy"></figure>
<h1 id="12-张卡片在-windows-上带回-macos-的特性">12 张卡片，在 Windows 上带回 macOS 的特性</h1>
<!-- more -->
<p>在离开 macOS 这段时间，每天在家依赖 Windows To Go 为生，感到日常工作流程在四处冒烟。这才发现 macOS 的有些特性就如同空气一样，虽然毫无存在感，却不可缺失。</p>
<p>关于「如何在 Windows 中实现 macOS 的 xxx」，随便上网一搜就可以搜出很多结果，然而这些当中很多都是「为了实现而实现」，未能真正带回 macOS 散落在系统各处的便捷功能。另一方面，正因为有些功能的存在感低，所以自己在平时使用的时候也未必就留意，只有当想用到这个功能却发现没有的时候才会想起来。</p>
<p>macOS 与 Windows 的差异，有些是功能层面的差异，还有一些就是操作系统理念层面的东西了，深究下去难免会犯一些形而上的错误。从实事求是的角度出发，我还是很希望能够在 Windows 上复现一些 macOS 的优秀特性或理念的，好在能有所成，为之记。</p>
<h2 id="spotlight">Spotlight</h2>
<figure data-type="image" tabindex="2"><img src="https://cdn.sspai.com/2020/03/16/8bd0eaa08cbcf63c7a1b6da84de9fbca.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>Windows 上的启动器说多也多，强大的也很强大，但是我对自定义配置感到力不从心。<a href="https://www.listary.com/download">Listary</a> 是一个非常好用的全局搜索工具，学习成本也很低，双击 Ctrl 键就可以在屏幕中央弹出搜索框，不用再进行太多的配置。</p>
<figure data-type="image" tabindex="3"><img src="https://cdn.sspai.com/2020/03/14/ec70ee4bc7e7340c5e43a5ba0cbdc113.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>双击 Ctrl 键</p>
<p>值得一提的是，Listary 的这两个功能也让我印象深刻：</p>
<ul>
<li>平时在执行应用的「打开…」操作后，定位的往往是默认的路径，用它可以自动定位至「文件资源管理器正在浏览的路径」。</li>
<li>在文件资源管理器中搜索文件时，忘掉右上角的搜索栏吧，甚至双击 Ctrl 的步骤也可以省略，直接打字即可，Listary 会被自动唤出，并且显示全盘的文件搜索结果。</li>
</ul>
<figure data-type="image" tabindex="4"><img src="https://cdn.sspai.com/2020/03/14/21ffea981cc5f2f60ed0ea50b8f2c9f6.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>自动定位至「文件资源管理器正在浏览的路径」</p>
<p>诚然，Listary 还有很多优秀的功能，但是对于我这样一个非计算机出身的「麻瓜」来说，光是描述清楚这些功能就得费老鼻子劲，还不一定讲得明白，更别说试着去用了。目前 Listary 对我而言就是一款简简单单的「Windows 上的 Spotlight」。</p>
<h2 id="程序坞">程序坞</h2>
<figure data-type="image" tabindex="5"><img src="https://cdn.sspai.com/2020/03/16/342f63780346ef6c52faf51b720a3873.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p><a href="https://punklabs.com/">RocketDock</a> 自带的模板丑出天际，但是好在自定义简单，随手改改纯色背景就很耐看了。可以把 dock 固定在桌面，然后往上面添加应用、目录、分隔符等等。此外，「鼠标经过放大」、「移到废纸篓」等特性也都一应俱全，甚至连「最小化窗口到 Dock」、「高亮正在运行的程序」等等细节都可以复现。</p>
<p>「控制面板」的理念和 macOS 的「系统偏好设置」很相似，我也把它放在了 Dock 上。</p>
<figure data-type="image" tabindex="6"><img src="https://cdn.sspai.com/2020/03/14/87f5b26d9eb35108dad186bb03c5c95c.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>鼠标经过放大</p>
<h2 id="快速查看">快速查看</h2>
<figure data-type="image" tabindex="7"><img src="https://cdn.sspai.com/2020/03/16/37b67e0157ae20b95da89b14cd466ac6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>「空格预览」同样是 macOS 最为人津津乐道的几大特性之一，<a href="https://github.com/QL-Win/QuickLook/releases">QuickLook</a> 很好地复现了这一点。和 macOS 一样，它也支持安装增强插件。好用就完事了，不多赘述。</p>
<h2 id="触发角">触发角</h2>
<figure data-type="image" tabindex="8"><img src="https://cdn.sspai.com/2020/03/16/4037e4b25d57f7998fd86a9256852094.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>触发角也是很不错的功能，实现起来难度也不大，尝试了好几款之后，最终确定了开源、轻量、好看的 <a href="https://github.com/vhanla/winxcorners/releases">WinXCorners</a>。除了常规功能，它也支持触发指令的自定义。</p>
<figure data-type="image" tabindex="9"><img src="https://cdn.sspai.com/2020/03/16/99071a68a0be56ee7431bdec30da851f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="10"><img src="https://cdn.sspai.com/2020/03/16/9f064794ff018f5dcc19862d7ee00d87.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>自定义触发指令</p>
<h2 id="剪贴板共享">剪贴板共享</h2>
<figure data-type="image" tabindex="11"><img src="https://cdn.sspai.com/2020/03/16/21031fb176f4ef911e295e9a73e80f42.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>这款应用。美中不足的地方在于，这样的剪贴板共享只能共享文字，图片必须作为文件来发送，这一点还是没有 Handoff 来得完善，即便如此，它也极大地提升了我的效率。</p>
<h2 id="截图和录屏">截图和录屏</h2>
<p>说完文字，来说图片和视频，我把截图、录屏、录制动图这三点放一块说。macOS 虽然自带了截图录屏的功能，但是很多人还是会寻求第三方应用。</p>
<h3 id="截图">截图</h3>
<figure data-type="image" tabindex="12"><img src="https://cdn.sspai.com/2020/03/16/718dc73de8a9f75557fee99dcf28d814.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p><a href="https://zh.snipaste.com/download.html">Snipaste</a> 是双平台最广为人知的第三方截图工具之一，界面清晰、功能全面，可以一站式满足标注、打码、贴图等多种需求。</p>
<h3 id="录屏">录屏</h3>
<figure data-type="image" tabindex="13"><img src="https://cdn.sspai.com/2020/03/16/af9d437a3a3267fbeb4c91313e8da059.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p><a href="https://getsharex.com/">ShareX</a> 是一个专注于上传和分享的、附加功能非常丰富的工具包。我用到的是仅仅是它基于 ffmpeg 的录屏功能。</p>
<p>其实用它就可以完成截图、录屏、上传的一条龙工作流，并且支持的上传目的地非常丰富，囊括了各大相册、网盘、分享平台等等。</p>
<figure data-type="image" tabindex="14"><img src="https://cdn.sspai.com/2020/03/16/51b0e487cd363d4279666d1131c45e1f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>ShareX 的功能</p>
<figure data-type="image" tabindex="15"><img src="https://cdn.sspai.com/2020/03/16/2389b585098498aa6b0dced4f35a6a7b.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>上传目的地非常丰富</p>
<h3 id="录制动图">录制动图</h3>
<figure data-type="image" tabindex="16"><img src="https://cdn.sspai.com/2020/03/16/793b13f89058bfa5341d17f774c44449.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>在尝试了多个录制 Gif 的应用之后，参考 选择了 <a href="https://www.cockos.com/licecap/">LICEcap</a>，重在方便，选好帧率、窗口一拉，就可以开始录，生成的文件也非常小。美中不足的地方在于，录制的窗口无法固定长宽比例，如果想保证 4:3、16:9 等画面，只能通过手动修改像素值来实现。而且无法一键操作，录屏的窗口处于打开状态时有些碍手碍脚。</p>
<h2 id="用所选项目新建文件夹">用所选项目新建文件夹</h2>
<figure data-type="image" tabindex="17"><img src="https://cdn.sspai.com/2020/03/16/526756295dabb48ba3b3babb7def81d0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>将 <a href="http://www.dcmembers.com/skwire/download/files-2-folder/">Files2Folder</a> 下载下来后，简简单单用管理员权限运行一下即可。使用时右键上下文菜单就会出现一行 Files 2 Folder，点击即可实现「用所选项目新建文件夹」的功能。</p>
<figure data-type="image" tabindex="18"><img src="https://cdn.sspai.com/2020/03/14/c4ad22c42704c85d5a56112a044775ae.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>用所选项目新建文件夹</p>
<h2 id="双击压缩文件来解压">双击压缩文件来解压</h2>
<figure data-type="image" tabindex="19"><img src="https://cdn.sspai.com/2020/03/16/cf59cb690c2b6534d9648d10756512ae.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>在 macOS 中，双击压缩文件可以自动解压，而在 Windows 中则不会。已经 2020 年，相信应该有越来越多的人放弃了 7Zip 甚至更老的 WinRar，转而使用 <a href="https://cn.bandisoft.com/bandizip/">Bandizip</a>。不过 Bandizip 有一项很方便的小功能值得一试：</p>
<figure data-type="image" tabindex="20"><img src="https://cdn.sspai.com/2020/03/14/8f826d9f5264fb5441e9581bc6323aa5.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="21"><img src="https://cdn.sspai.com/2020/03/14/a8639e70c60582cb723d4cf029e058bc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>经过如图设置后，双击压缩包即可自动解压缩，并在新窗口中弹出解压缩后的目录，非常方便。</p>
<h2 id="在桌面显示驱动器的快捷方式">在桌面显示驱动器的快捷方式</h2>
<figure data-type="image" tabindex="22"><img src="https://cdn.sspai.com/2020/03/19/89c305010d442a2ec2bb23fffaac7ba8.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>「在桌面显示驱动器的快捷方式」是 macOS 中一个不起眼的小特性，可以用 <a href="https://www.softpedia.com/get/Desktop-Enhancements/Other-Desktop-Enhancements/Desktop-Media.shtml">Desktop Media</a> 实现。在插入 U 盘或移动硬盘之后，会在桌面出现它的图标。本地硬盘的图标默认也会显示，可以手动隐藏。</p>
<figure data-type="image" tabindex="23"><img src="https://cdn.sspai.com/2020/03/14/7efd5409aed355ba4a3007ba672a3bf8.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<h2 id="包管理器">包管理器</h2>
<figure data-type="image" tabindex="24"><img src="https://cdn.sspai.com/2020/03/16/cf6fedd6f781abfe8b3ea5de6d3dc568.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>与 Homebrew 一样，Windows 上也有可用的包管理器：<a href="https://chocolatey.org/install">Chocolatey</a>。这是我在偶然的情况下得知的，虽然自己不一定用得上，但是不妨碍我把它拿出来分享一下。它可以用来统一安装和管理应用，类似于类 Unix 系统中的 yum 和 APT。</p>
<h2 id="其他特性">其他特性</h2>
<p>除了上述的几个之外，还有许多特性暂时没有去尝试。</p>
<ul>
<li>
<p>Launchpad：Windows 的开始菜单与之类似，感觉再大费周章去模仿就是「得其形而忘其意」了，故放弃。</p>
</li>
<li>
<p>标签：「标签」是 macOS 的文件管理理念区别于 Windows 的显著特点，要在 Windows 上实现这种无米之炊并不是太容易。</p>
</li>
<li>
<p>此外 <a href="https://github.com/Dijji/FileMeta/releases">FileMeta</a> 可以通过修改文件元数据的方式，将标签作为一个子项打入文件的元数据中，这种方法基于的是 NTFS 文件系统的特性，也就是说离开了 NTFS 硬盘，标签信息就会丢失。</p>
</li>
<li>
<p>然而毕竟前文说过，WTG 是我的临时替代品，没有存放太多文件，也就没再在标签上大费周章，故放弃。</p>
</li>
<li>
<p>Mission Control：这个功能还是非常想实现的，毕竟 Windows 的任务视图比起它来还是差点意思，窗口大小一样，而且都很小，大块的位置留给了「近期文件」。不过很遗憾，并没有找到合适的方案。</p>
</li>
<li>
<p>文件历史记录：这项功能并非 macOS 独占，Windows 也是有的。不过就我身边而言，连知道它的人都很少，更别说用了。这项功能在「控制面板」中，需要注意的是，备份驱动器和文件所在的驱动器不能相同，否则就无法继续。当然，在局域网已经很发达的 2020 年，也可以考虑用网络驱动器来实现，这我就不去尝试了。</p>
</li>
</ul>
<figure data-type="image" tabindex="25"><img src="https://cdn.sspai.com/2020/03/14/3a3bd279cbd6d0b6daaa5166e172aca3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="26"><img src="https://cdn.sspai.com/2020/03/14/94917193f1e84df1012483ab30b8b7cb.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>备份驱动器和文件所在的驱动器不能相同</p>
<blockquote>
<p>这里由于时间关系，我就不展开讲了，感兴趣的同学可以下课之后自己试一试。</p>
</blockquote>
<ul>
<li>批量修改文件名：macOS 将其整合进了系统功能，Windows 上如果要去实现，就是「用特定应用满足特定需求」的话题了，不在本文讨论的范围之内。不过方案也是有的，我一直使用 <a href="https://www.advancedrenamer.com/download">AdvancedRenamer</a>，谁用谁说好。</li>
<li>可能还有其他被我忽略的特性，欢迎补充。</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[像 Chrome 一样给 Word 装上插件，让它用起来更顺手]]></title>
        <id>https://hesy-zhoulijie.github.io/post/word-plugin/</id>
        <link href="https://hesy-zhoulijie.github.io/post/word-plugin/">
        </link>
        <updated>2020-10-05T05:07:13.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://cdn.sspai.com/2019/04/10/b0e425e5068d6f85b1e0e346c5c9e461.png?imageMogr2/quality/95/thumbnail/!754x414.19733333333335r/gravity/Center/crop/754x414.19733333333335/interlace/1" alt="" loading="lazy"></figure>
<h1 id="像-chrome-一样给-word-装上插件让它用起来更顺手">像 Chrome 一样给 Word 装上插件，让它用起来更顺手</h1>
<p>Microsoft Word 是一个高效的排版软件。Word 原生就自带了我们大多数人都用不过来的基础功能，但是总会有一些小功能，强大如 Word 的软件却没有集成。这时候，一个插件或许就能直接解决我们的燃眉之急。</p>
<p>Word 等 Office 全家桶系列软件的「插件」叫做「加载项」，能够为我们直接提供 Word 并没有集成的功能。下面这篇文章，我来介绍推荐一些实用的 Word 插件。</p>
<p>**注：**下面介绍内容在 Windows 下编写，Office 365 版本 1904 的 Word。macOS 的 Office 全家桶同样支持安装插件，原理相同。</p>
<h2 id="插件安装">插件安装</h2>
<p>在开始推荐插件之前，如果你从来都没有为 Office 应用安装过插件，或许你都不知道在哪里搜索下载它们。我以 Office 365 中的 Word 为例子，先来简单说说怎么安装实用 Word 插件。</p>
<p>Word 本身自带了插件的安装入口，我们在「插入 → 加载项」处就可以看到「获取加载项」和「我的加载项」这两个按钮。</p>
<figure data-type="image" tabindex="2"><img src="https://cdn.sspai.com/2019/04/10/fe28fb462420cf989d2d267f18d9a4fd.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>Word 内置的加载项商店</p>
<p>在 Office 应用中下载的插件会随你登录 Office 时使用的微软账户同步，一处下载，处处安装。点击「获取加载项」，我们就可以看到 Office 插件商店，在这里我们就可以直接搜索下文推荐的插件，并直接安装到本机 Office 应用之中。</p>
<figure data-type="image" tabindex="3"><img src="https://cdn.sspai.com/2019/04/10/59d3346daa68edca420fd2d2bb9cf60a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>Office 加载项商店</p>
<p>不过，经过我实测，这里的插件推荐很过时，编辑精选第一位的插件最后一次更新时间竟然是 2011 年。😓 因此，除了直接在 Office 自带商店浏览推荐插件，在 <a href="https://appsource.microsoft.com/zh-cn/marketplace/apps">Microsoft AppSource</a> 市场也可以查看下载推荐插件。这里的插件更多的是面向企业市场，但是我们同样也可以参考安装。</p>
<p>接下来，我来推荐下面这 6 个专为 Word 开发的插件。👍</p>
<h2 id="emoji-keyboard">Emoji Keyboard</h2>
<p>第一个推荐的插件就是这个专门用于输入 Emoji 表情的插件了。可能你会说「嗯？Windows 1809 不是都已经自带了 Emoji 输入面板了吗？」，但是这个插件确实有所用处，因为它不仅会为我们提供插入 Emoji 字符的便捷方式，还提供了一套高清 Emoji One 系列的图片 Emoji。🤭</p>
<figure data-type="image" tabindex="4"><img src="https://cdn.sspai.com/2019/04/11/0cbc2a6c4bd5403fd4832a682fa9621d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>Emoji Keyboard</p>
<p>由于 <a href="https://www.joypixels.com/">Emoji One</a>（现在改名字叫做 JoyPixels 了）的 Emoji 表情都是由 <a href="https://creativecommons.org/licenses/by/4.0/legalcode">Creative Commons License (CC-BY 4.0)</a> 许可标准发放的，因此我们可以在自己的个人作品中自由使用。具体的著作权许可请直接参考：<a href="https://www.joypixels.com/licenses">JoyPixels Licenses</a></p>
<p>我们可以在 <a href="https://appsource.microsoft.com/zh-cn/product/office/WA104380121?tab=Overview">AppSource - Emoji Keyboard</a> 处查看下载 Emoji Keyboard 这个 Word（也支持 PowerPoint）插件，在「加载项商店」也可以搜索直接下载。</p>
<h2 id="wikipedia">Wikipedia</h2>
<p>插入文献、网页的引用从来都是 Word 的必备功能。Wikipedia 这个插件让我们不必另外打开一个浏览器去维基百科上面搜索相关的内容，直接在 Word 里面搜索就可以。</p>
<figure data-type="image" tabindex="5"><img src="https://cdn.sspai.com/2019/04/10/57a4b1ed3cac44f0a83dc4fe6e787418.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>Wikipedia</p>
<p>同时，在 Wikipedia 插件的页面里面，我们选中一段文字，上面就会出现插入当前文档的加号按钮。点击加号，这段文字就可以直接插入到我们当前的 Word 文档中。并且 Wikipedia 插件还会直接在下面添加相应的引用链接，只需要稍微调整格式就直接完成维基百科内容的引用。非常方便。</p>
<p>我们可以在 <a href="https://appsource.microsoft.com/zh-cn/product/office/WA104099688?tab=Overview">AppSource - Wikipedia</a> 这里下载到 Wikipedia 插件，同样也可以在「加载项商店」处下载安装。</p>
<h2 id="translator">Translator</h2>
<figure data-type="image" tabindex="6"><img src="https://cdn.sspai.com/2019/04/10/32cb0dc4c9211474e97bd4ae3091c60c.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>Translator</p>
<p>Translator 这款由微软官方出品的 Translator 插件，能够帮我们直接在 Word 里面将文章内容进行翻译。Translator 使用的是微软的翻译 API，能够支持将文档中选中的内容直接翻译替换，无论是在阅读非中文 Word 文档，还是自己撰写英语文章，Translator 都大大方便、简化了我们到浏览器里面复制翻译结果回来的复杂流程。</p>
<p>我们可以在 <a href="https://appsource.microsoft.com/zh-cn/product/office/WA104124372?tab=Overview">AppSource - Translator</a> 这里下载 Translator 插件，「加载项商店」里面搜索也可以下载得到。</p>
<h2 id="font-finder">Font Finder</h2>
<figure data-type="image" tabindex="7"><img src="https://cdn.sspai.com/2019/04/10/bd8a595704f6662495d4a93b0c92c8ca.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>Font Finder</p>
<p>Font Finder 也是由微软官方发布的字体插件。这个插件直接集成了很多有趣的英文字体，分为经典、手写、清晰、华丽等七类，供我们选择。就算我们电脑本身并没有安装这个字体，Font Finder 插件也可以帮助我们直接使用这个字体。不过，遗憾的是，Font Finder 里面集成的字体几乎都是英文字体。也就是说，很多华丽的中文字体，我们并没有途径直接用 Font Finder 使用。</p>
<p>我们可以在 <a href="https://appsource.microsoft.com/zh-cn/product/office/WA104211266?tab=Overview">AppSource - Font Finder</a> 这里直接下载 Font Finder 这个插件，也可以在「加载项商店」里面搜索下载。</p>
<h2 id="myscript-math">MyScript Math</h2>
<p>作为 Office 应用奖 2017 中最佳用户体验奖的第二名，MyScript Math 这个插件和 iOS、Android 上面同一家公司 MyScript 出品的 MyScript Calculator 使用体验一样顺滑，手写公式自动转换识别率非常高，堪称完美。无论是普通的变量、运算符还是高级的积分、求和等复杂公式，MyScript Math 这个插件都能胜任。</p>
<figure data-type="image" tabindex="8"><img src="https://cdn.sspai.com/2019/04/10/f279663ac50b80d9c76ef10fc3a8a673.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>MyScript Math 自动识别手写公式</p>
<p>我们利用 MyScript Math 插件手写的公式，识别成为公式格式的文本之后就可以直接插入到 Word 文档之中，根本不用再去查阅复杂的 LaTeX 使用方法，简洁方便。</p>
<p>我们可以在 <a href="https://appsource.microsoft.com/zh-cn/product/office/WA104380646?tab=Overview">AppSource - MyScript Math</a> 这里下载 MyScript Math 这个插件，「加载项商店」也可以搜索到。</p>
<h2 id="grammarly">Grammarly</h2>
<p>Grammarly 是一家专门对文档、论文等学术文章进行语法、语义和词法检查的公司。其对英语文献的语法检查效果可以说是精准、到位，比 Word 原生的语法检查好上不少。即使是免费版本的 Grammarly 账户，都能够及时准确的为你找到文章中的语法错误。</p>
<figure data-type="image" tabindex="9"><img src="https://cdn.sspai.com/2019/04/10/4d9cc299e60d15e4f7042db8d77332de.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>Grammarly</p>
<p>Grammarly 也肯定是考虑到，使用 Word 编写排版论文文献的同学太多太多，于是也为 Word 开发了 Grammarly 的集成插件。这个插件让我们在写英文文章的过程不再焦虑语法问题，其自动修错功能不仅能够为你错误的地方下方标红，还能够告诉你错误的具体原因，以及建议的修改方法。而上面这些仅仅是 Grammarly 的免费账户就有的功能，付费的 Grammarly 账户甚至还可以帮助你将文章更深程度的润色，寻找更好的表述方式、同义词、使用语法等等。可以说是撰写英文文章的神器。</p>
<p>我们可以在 <a href="https://www.grammarly.com/office-addin/windows">Grammarly 的官网</a> 找到 Grammarly 为 Office 制作的插件安装程序。和上面推荐的五个插件不同的是，Grammarly 是独立的安装程序，因此需要单独安装才可以正常使用。</p>
<h2 id="小结">小结</h2>
<p>虽然 Word 对于我们大多数人已经足够强大，其中几乎半数的功能我们使用期间都可能用不到，但是 Office 的插件功能还是通过很多创新性的内容，以及利用 Web 技术提供的优秀跨平台功能，帮助我们提高生产力和工作效率。</p>
<p>只是，太多太多的 Office 市场中的推荐插件都年久失修，而 Office 插件商店的推荐位置又没有很好地运营，导致大量优秀的插件被埋没。我经过大量的查找和尝试，才找到这六个为 Word 开发的插件推荐给大家。希望通过这篇文章的推荐，你使用 Word 的体验能更上一层楼。感谢阅读。🙌</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[用好这些隐藏「小开关」，让 Chrome 浏览器更好用]]></title>
        <id>https://hesy-zhoulijie.github.io/post/chrome-flags/</id>
        <link href="https://hesy-zhoulijie.github.io/post/chrome-flags/">
        </link>
        <updated>2020-10-05T05:04:54.000Z</updated>
        <summary type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://cdn.sspai.com/article/73599088-e74b-4186-ee00-607d58f29d46.jpg?imageMogr2/quality/95/thumbnail/!1094x600.9706666666667r/gravity/Center/crop/1094x600.9706666666667/interlace/1" alt="" loading="lazy"></figure>
<h1 id="用好这些隐藏小开关让-chrome-浏览器更好用">用好这些隐藏「小开关」，让 Chrome 浏览器更好用</h1>
]]></summary>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://cdn.sspai.com/article/73599088-e74b-4186-ee00-607d58f29d46.jpg?imageMogr2/quality/95/thumbnail/!1094x600.9706666666667r/gravity/Center/crop/1094x600.9706666666667/interlace/1" alt="" loading="lazy"></figure>
<h1 id="用好这些隐藏小开关让-chrome-浏览器更好用">用好这些隐藏「小开关」，让 Chrome 浏览器更好用</h1>
<!-- more -->
<p>相比移动端的 Chrome 浏览器，功能性能更强更全面的桌面端 Chrome 可能是你我每天使用频次最多的桌面软件。多端数据同步、实用的扩展插件都让其成为电脑上的「超级应用」。近乎无限制的桌面平台也让其可以在第一时间运用起新的功能和技术，这也是限制重重的移动端 Chrome 所无法比拟的。</p>
<p>当然因为桌面端 Chrome 的广泛使用性，新功能的推出和运用反而会更为谨慎。如果想要尝鲜新功能一样是通过 Feature flags —— 当然比起移动端，桌面端的新功能主要针对的键鼠操作，和移动端有相当大的区别。</p>
<h2 id="尝鲜新功能善用-chrome-flags">尝鲜新功能，善用 Chrome flags</h2>
<p>Chrome 之所以被认为是「超级应用」，很大程度上在于起功能增添和更新上像极了操作系统，新功能会首先出现在 Dev 版、然后经过 Beta 测试后，最后推送到稳定通道中。而新开发的功能则被隐藏在 Chrome flags —— 作为新功能的试验田，通过开启特定的 flags 来在稳定版中尝鲜新功能，即可以尝鲜也避免了可能的不稳定风险，下面我们挑选了一些稳定性尚可且比较实用的 flags， 通过开启对应的开关来让 电脑版的 Chrome 变得更好用。</p>
<figure data-type="image" tabindex="2"><img src="https://cdn.sspai.com/2019/11/14/62091785b5a850e5581926a197e3f3df.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>注：本文 Chrome 版本为稳定通道 v78，电脑系统为 Windows 10 v1909</p>
<h2 id="开启并行下载功能">开启并行下载功能</h2>
<p>移动端 Chrome 考虑到带宽和设备性能问题，只允许单进程下载其实并无不妥，而桌面端至今依旧默认单进程下载似乎就有点说不过去了，所以相比移动端，在桌面端开启并行下载功能要更为迫切一些。</p>
<figure data-type="image" tabindex="3"><img src="https://cdn.sspai.com/2019/11/14/3fcda253bfa14e0f814bf7fe1a75659e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>开启方法和移动端一样， 在 Chrome flags 上搜索「<strong>Parallel downloading</strong>」来开启 Chrome 的并行下载功能，你可以尝试下大个文件以及多个文件，你会发现速度会提高那么一些。当然如果有条件的话，选择第三方下载工具进行资源下载反而更为合适。</p>
<p>开启方法：</p>
<p><code>chrome://flags/#enable-parallel-downloading</code></p>
<h2 id="给标签页进行分组">给标签页进行分组</h2>
<p>多标签页浏览器有时也会给我们带来烦恼——我们会不自觉的打开 n 多标签页，时间一长就会忘记哪些标签页是有关联的，比如像我就经常遇到已经打开了某个标签页但最后又重复打开的，其实对标签页分组就可以妥善解决这些问题。</p>
<figure data-type="image" tabindex="4"><img src="https://cdn.sspai.com/2019/11/14/df7342dc6a874ba63e1f34fed73feaa4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>这个很实用的功能同样也是默认隐藏，需要在 Chrome Flags 中搜索「Tab Groups」开启，之后将开启自动分组功能。自动分组功能将根据你的打开新标签页的方式，比如从少数派中打开的新内容页面将会<strong>自动</strong>添加到一个组中，这时会在标签页前面出现一个「组标记点」。</p>
<figure data-type="image" tabindex="5"><img src="https://cdn.sspai.com/2019/11/14/58089a109692ee602bdd9debc82f6e96.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你还可以手动创建新的组或者将当前标签页加入组中，通过拖拽的标签页将起放在「组标记点」后面就可以添加到当前组，而移除则只需要将标签页从组中拖拽出即可，而为了标记的更清楚，点击组的标记点还可以更改颜色，也可以为组进行命名让其更明显。</p>
<p>开启方式：</p>
<p><code>chrome://flags/#tab-groups</code></p>
<h2 id="桌面端开启阅读模式">桌面端开启阅读模式</h2>
<p>无论是 Firefox 还是旧版本的 Edge 浏览器，都内置有阅读模式，这些功能并非是多此一举，而是可以极大的提高内容阅读体验，去除广告、无关的框架样式等干扰性元素，内容重新排版之后方便进一步的深入阅读，即便不使用稍后读服务也能做到类似的信息阅读体验。</p>
<figure data-type="image" tabindex="6"><img src="https://cdn.sspai.com/2019/11/14/4f7f0969da3baf0103664dcbcbb3cb06.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>奇怪的是这个功能在桌面端的 Chrome 中依旧被隐藏在 flag 中，而开启方式是在 Chrome Flags 中找到「Enable Reader Mode 」来开启这个功能，打开之后重启浏览器，在地址栏的最右侧会出现一个新的图标，点击之后就会直接将当前网页转换成阅读模式，不过比起移动端功能丰富的设置项，桌面端的阅读模式要简陋很多，也无法对主题、字体和字号大小进行调整。</p>
<p>开启方式：</p>
<p><code>chrome://flags/#enable-reader-mode</code></p>
<h2 id="让网页内容强制显示为深色主题">让网页内容强制显示为深色主题</h2>
<p>macOS Mojave 开始支持系统深色主题的同时，Safari 也加入了一个新的 API，允许已经加入深色主题的网站跟随系统调整深色主题，只不过目前绝大多数的网站并不支持这一特性，而在 Chrome 中其实也支持类似功能，只不过该选项并非是默认开启同样需要通过在 Chrome flags 中手动开启。</p>
<figure data-type="image" tabindex="7"><img src="https://cdn.sspai.com/2019/11/14/cc69183fe94cdbd6c663765595725bce.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>在 Chrome Flags 中搜索「Force Dark Mode」就可以看到设置选项，并且提供了相当多的显示效果选择，选择「Enable」重启后就可以看到强制开启后的基本效果，对于没有提供网页深色主题的网站，强制开启可以认为是原先网页配色在色环上对应的反色，所以看上去的展示效果比较一般，并且不同的网站的深色主题展示效果不佳，有些网站甚至完全无法用，只能用来进行一定程度的尝鲜。</p>
<figure data-type="image" tabindex="8"><img src="https://cdn.sspai.com/2019/11/14/feda53f768047168537f9cee8af47e5d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>开启方式：</p>
<p><code>chrome://flags/#enable-force-dark</code></p>
<h2 id="开启全局媒体播放控制">开启全局媒体播放控制</h2>
<p>播放在线多媒体时，如果需要暂停，快进等操作都要进入到标签页中进行调整，有时候标签页开的多，实在没法立即定位到播放页面就会很麻烦。有一个全局媒体播放控制可以简化这些步骤，这样就不用打开对应的标签页也可进行全局控制。</p>
<figure data-type="image" tabindex="9"><img src="https://cdn.sspai.com/2019/11/14/b49f14d9852579a21a2c2134f60f5a70.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>开启方法也很简单，同样是在 Chrome Flags 中搜索「 Global Media Controls 」找到之后选择「Enable」重启浏览器，这时候你打开一个视频播放页面并播放视频，同时在工具栏中就会出现一个多媒体按钮，点击就可以看到一个媒体播放选项卡，无需打开对应标签页就可以控制多媒体内容播放。</p>
<p>开启方式：</p>
<p><code>chrome://flags/#global-media-controls</code></p>
<h2 id="鼠标悬停标签页展示网页预览图">鼠标悬停标签页展示网页预览图</h2>
<p>开的标签页多了之后会逐步挤占标签页的标题文本信息，想要知道里面网页内容就只能切换到该标签页查看，那么如何不切换到当前标签页就能看到到网页里面的大致内容呢？这项早已出现在经典版 Edge 浏览器上的功能在 Chrome 竟然也是隐藏功能，开启方式当然还是在 Chrome Flag —— 搜素「Tab Hover Card Images」选择开启就可以看到效果了。</p>
<figure data-type="image" tabindex="10"><img src="https://cdn.sspai.com/2019/11/14/6ca6786fb81aed716451fc655ac1031b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>开启之后当鼠标悬停在标签页时将可以看到网页内容的预览窗口了，不用切换标签页就可以看到内容可以说更为方便一些，不过这项功能对系统性能有一定的要求，如果想要更好的浏览体验可以酌情开启。</p>
<p>开启方式：</p>
<p><code>chrome://flags/#tab-hover-card-images</code></p>
<h2 id="结语">结语</h2>
<p>相比移动端的 Chrome 浏览器，桌面端的 Chrome 浏览器的新功能更多的增强多标签页的体验上，更大的浏览面积以及基于键鼠的交互操作在一定程度上可以更为精准的控制，也更容易凸显其作为生产力工具的作用，通过在稳定版通道的 Chrome 开启 flags 功能可以提前尝试一些未来出现的功能，当然是否适合你就见仁见智了。同样如果你发现了有趣实用的 flags，欢迎在问下评论分享给我们。</p>
<p>请绑定手机号码</p>
<p>取消</p>
<p>前往绑定</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[查天气、搜歌词、监控系统状态…… 用这些 App 把 Mac 菜单栏变成万能工具箱]]></title>
        <id>https://hesy-zhoulijie.github.io/post/mac-taskbar/</id>
        <link href="https://hesy-zhoulijie.github.io/post/mac-taskbar/">
        </link>
        <updated>2020-10-04T08:52:59.000Z</updated>
        <summary type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://cdn.sspai.com/article/66f385b4-c8a5-0d33-cc1e-87e3a951eb37.jpg?imageMogr2/quality/95/thumbnail/!1082x594.3786666666666r/gravity/Center/crop/1082x594.3786666666666/interlace/1" alt="" loading="lazy"></figure>
<h1 id="查天气-搜歌词-监控系统状态-用这些-app-把-mac-菜单栏变成万能工具箱">查天气、搜歌词、监控系统状态…… 用这些 App 把 Mac 菜单栏变成万能工具箱</h1>
]]></summary>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://cdn.sspai.com/article/66f385b4-c8a5-0d33-cc1e-87e3a951eb37.jpg?imageMogr2/quality/95/thumbnail/!1082x594.3786666666666r/gravity/Center/crop/1082x594.3786666666666/interlace/1" alt="" loading="lazy"></figure>
<h1 id="查天气-搜歌词-监控系统状态-用这些-app-把-mac-菜单栏变成万能工具箱">查天气、搜歌词、监控系统状态…… 用这些 App 把 Mac 菜单栏变成万能工具箱</h1>
<!-- more -->
<p>为了彰显存在感，各路 Mac 应用都喜欢在菜单栏上安置一个图标：其中有的只是用来召唤主界面，也有一些应用发掘了更多用途，真正利用好了 macOS 菜单栏这块「宝地」。</p>
<p>今天，就让我们来认识一下 21 款各具特色的工具 App，它们能够让寸土寸金的菜单栏物尽其用，打造成专属于你的万能工具箱。</p>
<h2 id="one-switch">One Switch</h2>
<p>桌面文件总显得凌乱无序、临时离开又想保护隐私…… 这些琐碎需求，One Switch 帮你一站解决。它整合了隐藏桌面图标、切换黑暗模式、始终保持亮屏、快速进入屏保和切换 AirPods 5 项实用功能，都可以一键开启。开发者称，未来还会加入更多新特性，敬请期待。</p>
<figure data-type="image" tabindex="2"><img src="https://cdn.sspai.com/editor/u_713147/15547962861861.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://fireball.studio/oneswitch/">官网</a> 购买 One Switch，国内定价为 30 元。</p>
<h2 id="amphetamine">Amphetamine</h2>
<p>一段时间未操作后，Mac 就会进入休眠状态，但如果你正在演示 Keynote 或观看视频，或许希望给电脑打针「兴奋剂」，Amphetamine 就是个不错的选择。它不仅可以临时阻止 Mac 休眠，还提供了丰富的自定义选项，可以在指定时间段、运行特定 App、连接至指定 WiFi 等情况下自动启用。</p>
<figure data-type="image" tabindex="3"><img src="https://cdn.sspai.com/editor/u_713147/15547962861876.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://itunes.apple.com/cn/app/amphetamine/id937984704?mt=12">App Store</a> 免费获取 Amphetamine。</p>
<h2 id="nightowl">NightOwl</h2>
<p>尽管 One Switch 已经提供了切换黑暗模式的选项，但现在流行的是依据时间自动切换主题。而 NightOwl 这款小工具不仅允许你计划时间段，还能通过位置信息在日出日落时自动切换模式。此外，你还可以让指定 App 始终保持浅色外观，使用更舒心。</p>
<figure data-type="image" tabindex="4"><img src="https://cdn.sspai.com/editor/u_713147/15547962861892.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://nightowl.kramser.xyz/">官网</a> 免费获取 NightOwl。</p>
<h2 id="infinity-dashboard">Infinity Dashboard</h2>
<p>在这个信息过载的时代，我们每天都需要了解各方面动态：天气、日历、股票、汇率、社交网络……Infinity Dashboard 就将这些信息整合到了一起，只需点击菜单栏图标，就能尽知天下事。</p>
<figure data-type="image" tabindex="5"><img src="https://cdn.sspai.com/editor/u_713147/15547962861904.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://fiplab.com/apps/infinity-dashboard-for-mac">官网</a> 以 9.99 美元的价格购买 Infinity Dashboard。</p>
<p><strong>关联阅读：</strong><a href="https://sspai.com/post/45286">看日历、查汇率、等商品降价……只需扫一眼 Mac 菜单栏：Infinity Dashboard</a></p>
<h2 id="runcat">RunCat</h2>
<p>在菜单栏显示实时 CPU 占用率的 App 你或许见得多了，但像 RunCat 这么有趣的可谓独一份。它将 CPU 负荷浓缩为 GIF 动图，电脑越卡，菜单栏的猫咪就跑得越快，纾解心中压力。除了默认的🐱外，RunCat 还提供了🦆、🐴、🐧、🐙等多种主题，满足各种喜好。</p>
<figure data-type="image" tabindex="6"><img src="https://cdn.sspai.com/editor/u_713147/15547962861919.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://itunes.apple.com/cn/app/runcat/id1429033973?mt=12">App Store</a> 免费获取 RunCat，🐶、🐸、🐲、🎄等主题及自定义皮肤功能需要付费解锁。</p>
<h2 id="网速-电池">网速 &amp; 电池</h2>
<p>顾名思义，网速 &amp; 电池是一款可以显示实时网速、存储占用及电池状态的小工具。它提供了多种显示方式，并适配了 macOS Mojave 的黑暗模式。除了菜单栏外，网速 &amp; 电池还支持通知中心小组件和置顶悬浮窗口，助你快速了解系统状态。</p>
<figure data-type="image" tabindex="7"><img src="https://cdn.sspai.com/editor/u_713147/15547962861934.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://itunes.apple.com/cn/app/%E7%BD%91%E9%80%9F-%E7%94%B5%E6%B1%A0/id1387780159?mt=12">App Store</a> 以 12 元的价格购买网速 &amp; 电池。</p>
<h2 id="istat-menus-6">iStat Menus 6</h2>
<p>iStat Menus 6 同样是一款系统状态监控工具，它涵盖了 CPU、GPU、内存、磁盘、网络、电池、传感器等各种模块，信息详尽，并支持自由定制。你还可以添加触发器，在电池电量不足、内存占用过高等情况下收到推送通知。</p>
<figure data-type="image" tabindex="8"><img src="https://cdn.sspai.com/editor/u_713147/15547962861949.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://bjango.com/mac/istatmenus/">官网</a> 以 11.99 美元的价格购买 iStat Menus 6，应用同时包含在 <a href="https://sspai.com/a/J4Lm">Setapp</a> 订阅中。</p>
<p><strong>关联阅读：</strong><a href="https://sspai.com/post/41089">不仅系统监控要做得更出色，iStat Menus 6 还能让你在状态栏看天气了</a></p>
<h2 id="itsycal">Itsycal</h2>
<p>macOS 原生的菜单栏时钟着实有些简陋，不仅无法查看日程，连今天是几月几号都无从知晓。而 Itsycal 就是个不错的补充，它允许你在菜单栏查看日历月视图及接下来的事项安排，并自定义日期格式、高亮等。</p>
<figure data-type="image" tabindex="9"><img src="https://cdn.sspai.com/editor/u_713147/15547962861964.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://www.mowglii.com/itsycal/">官网</a> 免费获取 Itsycal。</p>
<p><strong>关联阅读：</strong><a href="https://sspai.com/post/42848">Fantastical 太贵了？试试免费的菜单栏日历工具：Itsycal</a></p>
<h2 id="picgo">PicGo</h2>
<p>PicGo 是一款免费开源的跨平台图床工具，可以通过快捷键或菜单栏图标快速上传剪贴板内图片。它预置了微博、SM.MS、GitHub、阿里云、腾讯云等 8 家主流图床服务，并可以通过插件扩展更多玩法。</p>
<figure data-type="image" tabindex="10"><img src="https://cdn.sspai.com/editor/u_713147/15547962861978.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://github.com/Molunerfinn/PicGo/releases">GitHub</a> 免费获取 PicGo 的 macOS、Windows 和 Linux 版本。</p>
<p><strong>关联阅读：</strong><a href="https://sspai.com/post/52527">图床「神器」PicGo v2.0更新，插件系统终于来了</a></p>
<h2 id="sip">Sip</h2>
<p>无论是设计海报、UI 界面还是其它作品，颜色搭配都是件重头戏。不过，要想调配出与主题相契合的色彩组合并不是那么简单，而 Sip 就能从任意界面提取颜色，并生成色卡，还支持一键复制为多种代码格式。</p>
<figure data-type="image" tabindex="11"><img src="https://cdn.sspai.com/editor/u_713147/15547962861991.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://sipapp.io/">官网</a> 以 10 美元的价格购买 Sip，应用同时包含在 <a href="https://sspai.com/a/J4Lm">Setapp</a> 订阅中。</p>
<p><strong>关联阅读：</strong><a href="https://sspai.com/post/27945">设计师的好帮手，萃取生活里的缤纷色彩：Sip Color</a></p>
<h2 id="pomo-timer">Pomo Timer</h2>
<p>Pomo Timer 是一款常驻在菜单栏上的番茄钟工具，其 UI 简洁美观，支持设定番茄时长、计划任务、通知样式等，可以帮助你轻松创建和管理番茄定时器。如果你不喜欢默认番茄图片，还可以自行替换为其它图像，更有乐趣。</p>
<figure data-type="image" tabindex="12"><img src="https://cdn.sspai.com/editor/u_713147/15547962862004.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://itunes.apple.com/cn/app/pomo-timer/id1447569061?mt=12">App Store</a> 免费获取 Pomo Timer，自定义番茄图片功能需要内购解锁。</p>
<h2 id="mate-translate">Mate Translate</h2>
<p>Mate Translate 是一款菜单栏翻译工具，支持自动检测源语言、自动翻译剪贴板、快捷键呼出及音标、拼音显示等。由于其采用 Google 作为底层翻译引擎，保证了翻译的准确性，同时比网页 Google 翻译更方便快捷，随用随取。</p>
<figure data-type="image" tabindex="13"><img src="https://cdn.sspai.com/editor/u_713147/15547962862017.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://itunes.apple.com/cn/app/mate-%E7%BF%BB%E8%AF%91%E5%92%8C%E5%AD%97%E5%85%B8%E4%B8%8Evpn-103%E8%AF%AD%E8%A8%80/id1005088137?mt=12">App Store</a> 以 198 元的价格购买 Mate Translate，并在 <a href="https://www.matetranslate.com/download">官网</a> 获取其它平台版本，应用同时包含在 <a href="https://sspai.com/a/J4Lm">Setapp</a> 订阅中。</p>
<h2 id="toothfairy">ToothFairy</h2>
<p>尽管 AirPods 支持在苹果全家桶间无缝切换，但在没有状态指示的 Mac 上，依然可能出现外放响彻整个图书馆的尴尬。有了 ToothFairy，你就可以在菜单栏图标上看到所有蓝牙设备的连接状态及剩余电量，并通过点击或快捷键快速切换。</p>
<figure data-type="image" tabindex="14"><img src="https://cdn.sspai.com/editor/u_713147/15547962862030.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://itunes.apple.com/cn/app/toothfairy/id1191449274?mt=12">App Store</a> 以 18 元的价格购买 ToothFairy，应用同时包含在 <a href="https://sspai.com/a/J4Lm">Setapp</a> 订阅中。</p>
<p><strong>关联阅读：</strong><a href="https://sspai.com/post/38181">如果你在 Mac 上用 AirPods 和 BeatsX，ToothFairy 能帮你一键切换</a></p>
<h2 id="lyricsx">LyricsX</h2>
<p>如果你正在使用 Apple Music 或 Spotify，或许会怀念国内音乐 App 的歌词显示及滚动功能。而 LyricsX 就能自动识别 iTunes、Spotify 和 Vox 上播放的歌曲名称，并匹配对应歌词，在菜单栏、悬浮窗或独立窗口中动态显示。</p>
<figure data-type="image" tabindex="15"><img src="https://cdn.sspai.com/editor/u_713147/15547962862050.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://itunes.apple.com/cn/app/lyricsx/id1254743014?mt=12">App Store</a> 和 <a href="https://github.com/ddddxxx/LyricsX/releases">GitHub</a> 免费获取 LyricsX。</p>
<h2 id="休息一下">休息一下</h2>
<p>我们都知道，长时间面对电脑屏幕对视力损害极大，但却很难管住自己；若是使用番茄钟，5 分钟的休息时间又难免打断工作状态。而休息一下则利用 <a href="https://opto.ca/health-library/the-20-20-20-rule">20-20-20 视力保护原则</a>，每过 20 分钟提醒你休息 20 秒，并将视线转移至 20 英尺（约 6 米）外的物体上，既纾解眼部压力，又不会因时间过长而影响正常工作。</p>
<figure data-type="image" tabindex="16"><img src="https://cdn.sspai.com/2019/04/10/2172c6a38c75c2a4640a61925f7d2fe6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://itunes.apple.com/cn/app/%E4%BC%91%E6%81%AF%E4%B8%80%E4%B8%8B-%E7%BC%93%E8%A7%A3%E7%96%B2%E5%8A%B3%E6%8F%90%E9%86%92%E5%B7%A5%E5%85%B7/id1457158844?mt=12">Mac App Store</a> 免费获取休息一下。</p>
<h2 id="noizio">Noizio</h2>
<p>终日生活在狭小的格子间中，你可能会向往大自然的怀抱。而 Noizio 这款白噪音应用，就能播放秋雨、雷鸣、柴火、海浪、溪流等多种声音，并支持混合音效配置，舒缓身心，释放压力。</p>
<figure data-type="image" tabindex="17"><img src="https://cdn.sspai.com/editor/u_713147/15547962862093.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://itunes.apple.com/cn/app/noizio-focus-relax-sleep/id928871589?mt=12">App Store</a> 以 30 元的价格购买 Noizio，应用同时包含在 <a href="https://sspai.com/a/J4Lm">Setapp</a> 订阅中。</p>
<h2 id="irvue">Irvue</h2>
<p>看腻了一成不变的桌面，又无暇寻觅新的壁纸，有了 Irvue，这些都不是问题。它可以自动获取 <a href="https://unsplash.com/">Unsplash</a> 上的精选照片并定期更新，还提供了点赞、下载、加入黑名单等操作，让你每天都有新惊喜。</p>
<figure data-type="image" tabindex="18"><img src="https://cdn.sspai.com/editor/u_713147/15547962862112.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://itunes.apple.com/cn/app/irvue/id1039633667?mt=12">App Store</a> 免费获取 Irvue。</p>
<p><strong>关联阅读：</strong><a href="https://sspai.com/post/41665">你只需要欣赏桌面，把换壁纸的事交给 Irvue 就好了</a></p>
<h2 id="kaomoji-lover">Kaomoji Lover</h2>
<p>Kaomoji Lover 是一款常驻在菜单栏上的卖萌神器，它收集了超过 18000 个表达各种情绪的颜文字，只需点击菜单栏上的图标，就能轻松复制并插入任何你喜欢的表情，让聊天更有趣。</p>
<figure data-type="image" tabindex="19"><img src="https://cdn.sspai.com/editor/u_713147/15547962862129.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://itunes.apple.com/cn/app/%E9%A2%9C%E6%96%87%E5%AD%97/id914708191?mt=12">App Store</a> 下载 Kaomoji Lover，售价 ¥50。</p>
<h2 id="hazeover">HazeOver</h2>
<p>Mac 窗口一多，往往会忘记当前焦点是哪个，HazeOver 则可以为非活动窗口加上一层阴影，帮助你专注于当前工作。在偏好设置中，你还可以设置遮罩颜色、透明度及快捷键等，方便省心。</p>
<figure data-type="image" tabindex="20"><img src="https://cdn.sspai.com/editor/u_713147/15547962862142.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://itunes.apple.com/cn/app/hazeover-%E5%B9%B2%E6%89%B0%E8%B0%83%E8%8A%82%E5%99%A8/id430798174?mt=12">App Store</a> 以 68 元的价格购买 HazeOver，应用同时包含在 <a href="https://sspai.com/a/J4Lm">Setapp</a> 订阅中。</p>
<h2 id="bartender-3">Bartender 3</h2>
<p>安装了上文介绍的 App 后，如何整理多到溢出的菜单栏图标又成了件烦心事，而 Bartender 3 就能帮助我们将用不到的图标藏起来。它的原理是给菜单栏加上一块「平行」区域，点击图标即可切换，眼不见心不烦。</p>
<figure data-type="image" tabindex="21"><img src="https://cdn.sspai.com/editor/u_713147/15547962862155.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://www.macbartender.com/">官网</a> 以 15 美元的价格购买 Bartender 3，提供 4 周免费试用。</p>
<p><strong>关联阅读：</strong><a href="https://sspai.com/post/40832">不仅要能藏，还要藏得优雅，Mac 菜单栏简化工具 Bartender 3 更新</a></p>
<h2 id="dozer">Dozer</h2>
<p>Bartender 虽好，价格却略感人，完全免费的 Dozer 就是个不错的替代品。它的操作十分直观，只需按 <code>⌘Command</code> 拖动菜单栏图标，将想隐藏的项目拖到两个标志点的左侧，点击后就会被收纳，再次点击即可展开，轻量简单。</p>
<figure data-type="image" tabindex="22"><img src="https://cdn.sspai.com/editor/u_713147/15547962862167.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>你可以在 <a href="https://dozermac.com/">官网</a> 免费获取 Dozer。</p>
<p><strong>关联阅读：</strong><a href="https://sspai.com/post/52826">一个完全免费的 macOS 菜单栏工具，一拖一点就能轻松隐藏图标：Dozer</a></p>
<p>你还有哪些好用的 macOS 菜单栏工具想要与我们分享，欢迎在评论区告诉我们。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Apple WWDC 2019]]></title>
        <id>https://hesy-zhoulijie.github.io/post/wwdc19/</id>
        <link href="https://hesy-zhoulijie.github.io/post/wwdc19/">
        </link>
        <updated>2020-10-04T08:52:18.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="apple-wwdc-2019">Apple WWDC 2019</h1>
]]></summary>
        <content type="html"><![CDATA[<h1 id="apple-wwdc-2019">Apple WWDC 2019</h1>
<!-- more -->
<figure data-type="image" tabindex="1"><img src="https://cdn.sspai.com/article/c95b67ab-aa21-b323-5830-563d4def312b.jpg?imageMogr2/quality/95/thumbnail/!1082x594.3786666666666r/gravity/Center/crop/1082x594.3786666666666/interlace/1" alt="" loading="lazy"></figure>
<p>iPad 有了自己的系统，还有新 Mac Pro…… 昨晚发布会要点都在这了</p>
<p>北京时间今日凌晨 1 点，苹果在美国加州的圣何塞会展中心召开了一年一度的 WWDC 全球开发者大会。作为受邀媒体，少数派今年继续全程在美国现场报道本次开发者大会。在将近 2 个半小时的开幕演讲中，苹果发布了拥有全局深色模式的 iOS 13、全新独立系统的 iPadOS 以及 watchOS 6 和 tvOS 13。</p>
<p>作为 WWDC 的惯例，本次新系统的发布依旧是发布会的重点，不管是独立出去的 iPadOS 还是推出 Project Catalyst 的 macOS，对于消费者和开发者都是一件影响颇深的事件。与此同时，模块化的高性能 Mac Pro 终于也带着全新的设计回归，而支持 Retina 6K 和 Pro Display XDR 的专业显示器也赚足了眼球。</p>
<p>iOS 13</p>
<hr>
<p>作为本次 WWDC 的重头戏，iOS 13 闪亮登场。继去年深色模式登陆 macOS 之后，iPhone 和 iPad 也终于拥有了自己的深色模式，并且为照片应用新增了强大的浏览和编辑功能、提供以 Apple ID 登录应用或网站的选项以及可以在地图中获得更多的信息。</p>
<p>除了新增功能，iOS 13 在性能优化上也有出色的表现，例如应用启动速度提升了两倍、应用更新速度也有提升等。</p>
<h3 id="对眼睛更友好的深色模式">对眼睛更友好的深色模式</h3>
<p>千呼万唤始出来，传了多年的 iOS 深色模式终于发布了。这次发布的 iOS 深色模式和 macOS 上的深色模式一样都是系统级的，所有的界面以及自带应用都已经适配了深色的配色方案，在低光情况下有很好的表现，屏幕看起来让眼睛更加舒服。</p>
<p>除了系统自带应用，苹果也向第三方应用的开发者开放了接口，开发者们也可以方便地让自己的应用适配 iOS 的深色模式。除了手动启用，iOS 的深色模式也可以通过设定固定的时间或者依据当地的日出日落时间来自动切换。</p>
<figure data-type="image" tabindex="2"><img src="https://cdn.sspai.com/2019/06/04/70e38f56c535af7d510e7ac93f7ef3ae.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<h3 id="更加强大的照片编辑工具">更加强大的照片编辑工具</h3>
<p>有机器学习加持之后，照片应用获得了更加强大的功能。首先，照片应用可以通过突出最好的照片、自动隐藏杂乱或者重复的照片来更好地展示过去的一天、一月或一年中重要的事件，巧妙地结合照片和视频，让使用者在浏览、发现和重温最喜欢的回忆时变得更加容易。</p>
<figure data-type="image" tabindex="3"><img src="https://cdn.sspai.com/2019/06/04/eb6abdb61cb1c036a4676f9a0e10ef4c.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>其次，照片应用获得了丰富的编辑功能。只需轻轻一滑，你就可以轻松地调整照片的特效，通过原生的功能解决了调用第三方工具的繁琐，为摄影爱好者们提供了更多的创造可能性。除了照片，iOS 13 的照片应用还可以直接编辑视频，用户可以直接在其中旋转、裁剪和使用滤镜，方便了很多。</p>
<figure data-type="image" tabindex="4"><img src="https://cdn.sspai.com/2019/06/04/3aa29fc2a7154f1dffe02645c31db0bc.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>同时，人像模式新增了一个光线调节和一个 High-Key Mono 效果的选项，可以创造出更加好看的肖像照片。</p>
<h3 id="便捷-私密的苹果账号登录">便捷、私密的苹果账号登录</h3>
<p>越来越多的网站需要我们使用手机、邮箱、社交账号等来注册和登录，不但不方便管理，而且极易泄露自己的隐私。</p>
<p>苹果这次推出了使用 Apple ID 登录的功能，轻松、简单地完成身份验证和登录网站。同时，为了保护使用者的隐私，苹果允许用户隐藏自己的邮箱地址，甚至可以自动生成一个随机的邮箱地址来替代。用户使用 Apple ID 来登录的时候，可以通过 Face ID 或者 Touch ID 来验证，加上双重验证，不但方便而且还确保了自己的隐私不会被泄漏。</p>
<figure data-type="image" tabindex="5"><img src="https://cdn.sspai.com/2019/06/04/542604c684ce0b56dfc55ce705413cc7.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<h3 id="全新的地图体验">全新的地图体验</h3>
<p>为了让 iOS 用户获得更好的地图使用体验，苹果在驱车 400 万英里收集数据后开始重构地图应用。在 iOS 13 的全新地图应用中，用户可以获取到更广泛的道路覆盖范围、更好的行人数据、更精确的地址和更详细的土地覆盖，并将在近两年推广到更多的国家和地区。</p>
<figure data-type="image" tabindex="6"><img src="https://cdn.sspai.com/2019/06/04/cb71009d55de32f362487a55716b6400.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>iOS 13 的地图应用新增了街景的功能，所有的图像由全新的基础地图和高分辨率的 3D 摄影构成，帮助环顾功能提供了一个平滑无缝过渡的街景浏览体验。除此之外，地图应用还可以轻松分享最喜欢的餐厅、旅游目的地或者与朋友购物的地方，或者导航到常去的目的地，如家、办公地点、健身房或学校等。</p>
<h3 id="其他值得一提的功能">其他值得一提的功能：</h3>
<ul>
<li>提醒事项应用重做，UI 设计交互完全改变，新增的快速工具栏可以方便地添加时间、日期、地点、旗标以及附件；</li>
<li>信息应用可以自动共享用户的姓名和照片、Memoji 或者 Animoji，同时 Memoji 可以制作成贴纸在自带应用和第三方应用中使用；</li>
<li>借助 Neural TTS ，Siri 有了一个更加自然的声音，并且提供更加个性化的自动化推荐；</li>
<li>AirPods 可以通过 Siri 来读取和回复信息；</li>
<li>语音控制可以让用户完全通过语音来控制 iPhone、iPad 和 Mac；</li>
<li>原生键盘提供了滑动输入的选项。</li>
</ul>
<figure data-type="image" tabindex="7"><img src="https://cdn.sspai.com/2019/06/04/254264309b8c521fad714169a9a2d6f0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>iOS 13 升级仅支持 iPhone 6S 及之后推出的手机，以及 iPod touch 7。</p>
<h2 id="ipados">iPadOS</h2>
<p>在第一代 iPad Pro 发布将近四年之后，Apple 终于正式将 iPad 作为一个独立的平台与 iOS 独立开来，进一步强调了 iPad 的生产力属性，并在本次为它带来了许多独占功能。</p>
<h3 id="多任务处理">多任务处理</h3>
<p>本次 iPadOS 最大的更新在于对多任务处理的巨大改进。首先，Slide Over 从一个单纯的悬浮窗口变为了一个拥有完整功能的窗口模式。在本次更新后，你可以通过滑动应用窗口顶部的 Home Indicator 来切换应用，相当于在原来的多任务中心之外又嵌套了一个专属于 Slide Over 的多任务中心。</p>
<p>关闭 Slide Over 中的应用窗口也是一样的操作，只需将应用卡片上滑退出即可。若想将 Slide Over 中的应用设为全屏应用，则需将应用窗口拖拽至屏幕的顶部。</p>
<figure data-type="image" tabindex="8"><img src="https://cdn.sspai.com/2019/06/04/eeecf7bcea1f73e149ef348d32928e7b.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>与此同时，iPad 终于支持了同一应用的分屏模式，而不再像之前只能使用两个应用同屏。</p>
<figure data-type="image" tabindex="9"><img src="https://cdn.sspai.com/2019/06/04/fc1e5d01b19ae5d5b6b83bb555c2e0f4.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>除了单纯的分屏模式，同一应用还可以同时在分屏模式和 Slide Over 模式下同时使用。如果你想查看同一应用的不同位置，你可以使用从 macOS 新引入的 App Exposé，只需点击它在 Dock 上的图标即可进入 App Exposé 视图。</p>
<figure data-type="image" tabindex="10"><img src="https://cdn.sspai.com/2019/06/04/1a0c57d108bef01f40343aa343b27f26.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>除了拖拽窗口，现在直接拖拽链接、地址等信息也可以创建新的应用窗口，免去了先打开应用的麻烦。</p>
<h3 id="主屏幕能摆更多图标了还能直接看小组件">主屏幕能摆更多图标了，还能直接看小组件</h3>
<p>在 全新的 iPadOS 中，主屏现在可以放下更多的应用。另外，iPadOS 直接去掉了 iOS 上的负一屏，如果要在 iPadOS 上查看小组件，只需要通过右滑手势，就可以直接在主屏幕拉出控件，和主屏图标一起显示，利用小组件查看信息或者进行一些快捷操作会变得更加方便。</p>
<figure data-type="image" tabindex="11"><img src="https://cdn.sspai.com/2019/06/04/1b320c1bce0a19f83fd13aa6440a1417.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<h3 id="文件应用更像-finder-了safari-新增下载管理器">文件应用更像 Finder 了，Safari 新增下载管理器</h3>
<p>作为一个主打生产力的平台，系统文件应用在 iPadOS 中更新自然不会让人意外。新版文件应用支持了最多达 3 栏的显示视图，你还可以直接在文件应用中预览文件的各项信息—比如类型、大小、修改时间、图片的分辨率等等—而不用打开文件。</p>
<figure data-type="image" tabindex="12"><img src="https://cdn.sspai.com/2019/06/04/71a840b9f6b88c49452b8e74efdf1b3c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>iOS 12 中文件应用虽然能共享文件，但是没有支持文件夹共享功能，iPadOS 终于补上了这一功能。你可以直接在文件应用里将文件夹共享给别人、或者连接别人共享出来的文件夹。除了共享云端文件，iPadOS 支持将 U 盘、SD 卡等外部存储设备连上 iPad，直接读取里面的文件。</p>
<figure data-type="image" tabindex="13"><img src="https://cdn.sspai.com/2019/06/04/0c402c403bdcc1f4cea73e77d6c3588b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>在文件管理方面，Safari 也有新动作：终于支持了下载管理器。管理下载文件也非常简单：在系统文件应用找到下载文件夹就可以了。</p>
<figure data-type="image" tabindex="14"><img src="https://cdn.sspai.com/2019/06/04/1e30e0fbef8f296516eff5b6e89d1727.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>除了下载管理器，Safari 在网页浏览方面也有比较大的改进：iPadOS 会直接在 Safari 中展示桌面版网页，并对一些需要鼠标操作的元素进行了触控优化，让你可以获得足够优秀和流畅的桌面级网页浏览体验。</p>
<h3 id="打字更方便了也更快了">打字更方便了，也更快了</h3>
<p>iPadOS 支持的 Floating Keyboard 浮动键盘能够让你通过双指捏合手势将键盘变为一个可拖动的悬浮窗口，如果你没有在用 Smart Keyboard 等外接蓝牙键盘设备，用双指捏合手势将键盘拖到左右手的任意一边打在效率应该会高不少。</p>
<p>除了双指捏合手势，iPad OS 还新增了三指捏合复制、张开粘贴文字以及三指左滑撤销手势，按照发布会上的说法就是，你再也不用摇晃大尺寸的 iPad 来撤销误输入的文字了。</p>
<figure data-type="image" tabindex="15"><img src="https://cdn.sspai.com/2019/06/04/c1af160661d6cc90c8b4d393b13b8c81.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>此外，iPadOS 还支持了单指拖动选中指定文字、双击选中单词等实用手势，在输入效率方面的提升还是比较明显的。</p>
<h3 id="其它值得关注的-ipados-特性">其它值得关注的 iPadOS 特性：</h3>
<ul>
<li>Apple Pencil 的响应延迟时间由 20ms 提升到了 9ms；</li>
<li>Apple Pencil 工具栏支持拖拽移动位置，将 Apple Pencil 移到 iPad 屏幕角落会触发截图操作并自动弹出标注界面；</li>
<li>新增 Sidecar 功能，让你通过 Wi-Fi 将 iPad 作为 Mac 的第二显示屏；</li>
<li>在 iPadOS 上用 Face ID 解锁速度比 iOS 12 快了 30%；</li>
<li>与 iOS 同步支持 Voice Control、AirPods 共享、HomePod 上的 Handoff 音频传输等功能；</li>
<li>支持下载和管理字体。</li>
</ul>
<p>iPadOS 更新仅支持 iPad Air 2 及之后推出的 iPad、iPad Pro 和 iPad mini。</p>
<h2 id="macos-1015">macOS 10.15</h2>
<p>今年苹果把 macOS 10.15 命名为 macOS Catalina。正如此前爆料所言，今年的 macOS 第一个主要的新变化便是将 iTunes 进行了拆分。三个全新的 App：音乐、播客和 TV 将取代 iTunes，而此前同步与备份 iOS 设备的功能在新版系统里则被集成到 Finder 中。</p>
<figure data-type="image" tabindex="16"><img src="https://cdn.sspai.com/2019/06/04/ea261ea844315f8c751efb2e22d992f3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>在机器学习的帮助下，新的播客应用拥有更强大的搜索功能。现在输入关键词后，应用将为你直接搜索音频内容中出现该关键词的播客。</p>
<figure data-type="image" tabindex="17"><img src="https://cdn.sspai.com/2019/06/04/0431e24cb3732bb776892078f7184040.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>新的 TV 应用则支持在 Mac 上播放 4K HDR 内容，此外还提供了杜比视界和杜比全景声的支持。</p>
<figure data-type="image" tabindex="18"><img src="https://cdn.sspai.com/2019/06/04/4a3da1532fdf19b3e1e7051354a3b4bd.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>另外新版的提醒事项和照片应用也将同步登陆 macOS Catalina。</p>
<p>macOS Catalina 第二个主要的新功能是 Sidecar，它可以让你的 iPad 变身成为 Mac 的拓展屏幕。不仅如此，在新系统中你还可以把 iPad 当作 Mac 的手写板或绘图板来使用，用 Apple Pencil 直接在屏幕上画画和批注。该功能目前支持包括 Adobe Illustrator、Affinity Photo 和 Maya 在内的多款专业级应用。</p>
<figure data-type="image" tabindex="19"><img src="https://cdn.sspai.com/2019/06/04/57a3497aec5b6d9f25b572845f64539b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>去年苹果在 iOS 上推出了屏幕时间功能，让你可以了解和控制自己花费在 iOS 设备上的时间。今年 macOS Catalina 则把这项功能带到了 macOS 上。</p>
<figure data-type="image" tabindex="20"><img src="https://cdn.sspai.com/2019/06/04/917d7943c232257afa3c8592db7aa798.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>苹果系统在辅助功能方面体验一直走在行业的前列。macOS Catalina 今年则在语音控制上更进一步，现在用户可以完全通过语音来控制使用 macOS，从打开应用、选择菜单功能再到输入文字，整个流程完全可以通过语音指令完成。</p>
<figure data-type="image" tabindex="21"><img src="https://cdn.sspai.com/2019/06/04/41b01bf3d2d9caa53243b715f828b055.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>macOS Catalina 中还新增了一个名叫「查找」的新 App。它集成了 iOS 上查找 iPhone 和查找我的朋友两款应用的功能。此外它还新增了一个可以查找未联网 Mac 的功能。另外配有 T2 安全芯片的 Mac 还可以在新系统中增加启动锁。</p>
<figure data-type="image" tabindex="22"><img src="https://cdn.sspai.com/2019/06/04/6b0cde58ee2cf1f82033ab0e79685904.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>苹果曾在去年介绍过帮助开发者将 iPad 应用快速迁移至 macOS 上的 Marzipan 项目，今年苹果将它正式命名为 Project Catalyst。苹果表示他们在过去的一年里做了大量的工作，来保证迁移项目能够得到更流畅的体验。发布会上苹果表示包括 Twitter、Jira 和 Gameloft 在内的多家第三方厂商正在参与这一项目，对自家的应用进行适配。</p>
<figure data-type="image" tabindex="23"><img src="https://cdn.sspai.com/2019/06/04/632b47b89eef5db49a96a8c2425162fc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>最后，设备支持方面，macOS Catalina 支持 2015 年及之后的 MacBook，2012 年及之后的 MacBook Air、MacBook Pro、Mac mini 和 iMac，2017 年及之后的 iMac Pro 以及 2013 年及之后的 Mac Pro。</p>
<h2 id="watchos-6">watchOS 6</h2>
<p>作为 watchOS 的第 6 个版本，watchOS 6 终于有了独立的 App Store 应用，这意味着你可以直接在 Apple Watch 上搜索、下载和运行应用，不再需要依赖 iPhone。Apple Watch 上的 App Store 支持语音和 Scribble 手写两种搜索应用的方式，你也可以在 Apple Watch 上直接查看 App Store 编辑的推荐或者来自用户的评价。</p>
<figure data-type="image" tabindex="24"><img src="https://cdn.sspai.com/2019/06/04/11df48e39368318b6026fca37b798c6a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>除了 App Store，watchOS 6 也将计算器、语音备忘录和有声书三款应用带到了 Apple Watch 上，其中计算器应用还支持了小费计算这样的实用功能。</p>
<figure data-type="image" tabindex="25"><img src="https://cdn.sspai.com/2019/06/04/ba53104871732b880ae8dd4206d10301.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>其它值得关注的 watchOS 新特性有：</p>
<ul>
<li>新增渐变色、大数字、模块化等多个新表盘样式。</li>
</ul>
<figure data-type="image" tabindex="26"><img src="https://cdn.sspai.com/2019/06/04/74e69e8418d680add71cf6cea4263926.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<ul>
<li>新增运动记录趋势分析功能，watchOS 会根据你的运动情况给出调整建议，并同步在 iOS 中的「健身记录」应用中进行展示。</li>
</ul>
<figure data-type="image" tabindex="27"><img src="https://cdn.sspai.com/2019/06/04/e8108011a7e365e4951e546cd6223c5d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<ul>
<li>新增月经周期记录功能，支持月经、排卵期提醒等。</li>
</ul>
<figure data-type="image" tabindex="28"><img src="https://cdn.sspai.com/2019/06/04/4333bd678a5045e99b9e4ac5adbcccf3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<ul>
<li>新增环境噪音检测功能，并会在当前环境噪音过大时进行提醒。</li>
</ul>
<figure data-type="image" tabindex="29"><img src="https://cdn.sspai.com/2019/06/04/54b2037dcaa56ea8685223a2161b66e1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<ul>
<li>新增正点报时功能。</li>
</ul>
<p>watchOS 支持包括 Apple Watch Series 1 在内之后的全部 Apple Watch 设备，不支持初代 Apple Watch。要想升级 watchOS 6，你需要有一台 iPhone 6s 或更新的 iOS 设备，并且确保 iPhone 升级到了 iOS 13 或者更新的系统版本。你可以在 Apple 官网查看 <a href="https://www.apple.com/watchos/watchos-preview/">watchOS 6 的详细信息</a>。</p>
<h2 id="tvos-13">tvOS 13</h2>
<p>tvOS 13 支持了多账号功能，并且会根据每位家庭成员的观影记录进行个性化推荐，Apple Music 还支持实时显示正在播放歌曲的歌词。</p>
<figure data-type="image" tabindex="30"><img src="https://cdn.sspai.com/2019/06/04/b84327955b2aaff0b3ffc2fbbde89eb5.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>在游戏娱乐方面，tvOS 13 支持了 Xbox One 和 PS DualShock 两款游戏手柄，在 Apple TV 上玩游戏将能够获得更好的游戏体验。最后，Apple 还与 BBC Natural History 纪录片剧组合作，在 tvOS 13 上带来了一系列 HDR 高清海底壁纸，让你在家就能拥有身临其境的海底世界体验。</p>
<figure data-type="image" tabindex="31"><img src="https://cdn.sspai.com/2019/06/04/7888a11368c8c1af87f31419d3bd1795.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>tvOS 13 支持目前在售的 Apple TV 4K 和 Apple TV HD 两款型号设备，你可以在 tvOS 官网查看 <a href="https://developer.apple.com/tvos/whats-new/">tvOS 13 的新特性</a>。</p>
<p>iOS 13、iPadOS、macOS Catalina、tvOS 13 和 watchOS 6 的 Beta 测试版本目前已经开放给开发者进行下载，7 月份会对所有人开放公开测试版本。如果你担心测试版本的系统可能会有不稳定的情况，可以等到今年秋季更新这些系统的正式版本。</p>
<h2 id="mac-pro-和-pro-display-xdr">Mac Pro 和 Pro Display XDR</h2>
<p>2017 年 <a href="https://daringfireball.net/2017/04/the_mac_pro_lives">曾有消息</a> 传出苹果正在重新设计 Mac Pro。时隔两年，苹果终于在本次 WWDC 上正式推出了这款全新的 Mac Pro。</p>
<p>新款 Mac Pro 回归了经典的塔式机箱外形，整个结构采用模块化设计。侧边则采用了类似「擦丝器」的镂空设计，底部可选配 4 个方便移动用的轮子，设计语言与上一代大相径庭。</p>
<figure data-type="image" tabindex="32"><img src="https://cdn.sspai.com/2019/06/04/43ef3c55961d8d071e0017b253aef61e.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>苹果称这个设计主要是为了新款 Mac Pro 强大的配置而服务，事实也的确如此。新款 Mac Pro 最高可选配 28 核的英特尔至强处理器和 1.5TB DDR4 ECC 的内存。它同时配有 8 个 PCIe 接口，其中 4 个提供 double-wide 设计以适应更大的拓展卡。</p>
<figure data-type="image" tabindex="33"><img src="https://cdn.sspai.com/2019/06/04/d3737eb63d6eb1931cbe5e984a520ca7.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>为了提供充足的视频性能，苹果还专门为新款 Mac Pro 设计了一个名为 MPX 的拓展模块，它可以为两块显卡提供高速连接。新款 Mac Pro 可最高选配 2 个带有 2 块 AMD Radeon Pro Vega 2 显卡的 MPX 模块，这意味着它能够提供高达 128GB 的 HBM2 高速显存。</p>
<figure data-type="image" tabindex="34"><img src="https://cdn.sspai.com/2019/06/04/a5755eb85234f5597c91f0ac34d89d13.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>不仅如此，新款 Mac Pro 还配有一个专门的硬件加速卡，用于处理 4K 甚至是 8K 视频的渲染和转码，每秒可处理 63 亿像素的数据，满足专业人士对于剪辑 ProRes Raw 素材的需求。</p>
<figure data-type="image" tabindex="35"><img src="https://cdn.sspai.com/2019/06/04/fa5f87b959e012502ffba6f29c2319c8.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>接口方面，新款 Mac Pro 则提供了 4 个雷雳 3 接口，2 个 USB-A 接口 和 2 个 10Gb 以太网接口。</p>
<p>新款 Mac Pro 起售价 5999 美元，配有 32GB 内存、8 核心至强处理器、Radeon Pro 580X 显卡以及 256GB SSD 硬盘。今年秋季正式发售。</p>
<figure data-type="image" tabindex="36"><img src="https://cdn.sspai.com/2019/06/04/894fe3bb730edb07fdc13174249d4993.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>此外，苹果还推出了 Pro Display XDR 专业级显示器。它拥有一块 32 寸的 IPS LCD 屏幕，分辨率为 6016x3384，苹果称其为 Retina 6K Display。这款显示器在对比度方面达到了 1,000,000:1 的标准，亮度为 1000 nits，峰值亮度可达 1600 nits，苹果表示它在 HDR 上表现非常出色，超过了一般的行业标准，因此他们把它称为 Extreme Dynamic Range，简称「XDR」。</p>
<figure data-type="image" tabindex="37"><img src="https://cdn.sspai.com/2019/06/04/5d1ec13d05f4dcfcc7a7da1a8833fd4d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>为了提供更出色的显示体验，苹果还为 Pro Display XDR 设计了一个多角度可调的桌面支架，支持竖屏模式显示。另外 Pro Display XDR 还可选配带有 Nano-texture 处理的屏幕，可在保证屏幕显示效果的同时降低屏幕的反射率。</p>
<figure data-type="image" tabindex="38"><img src="https://cdn.sspai.com/2019/06/04/b635944e0117a1015dcb8d322dfacd83.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>Pro Display XDR 售价为 4999 美元，带有 Nano-texture 屏幕的版本售价为 5999 美元，桌面支架需单独购买，售价 999 美元，今年秋季正式发售。</p>
<figure data-type="image" tabindex="39"><img src="https://cdn.sspai.com/2019/06/04/53f6c9792cf5d0aee4e9cd2cc9a06172.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac 电脑终极选购指南]]></title>
        <id>https://hesy-zhoulijie.github.io/post/macbook/</id>
        <link href="https://hesy-zhoulijie.github.io/post/macbook/">
        </link>
        <updated>2020-10-04T08:51:43.000Z</updated>
        <content type="html"><![CDATA[<h1 id="mac-电脑终极选购指南">Mac 电脑终极选购指南</h1>
<figure data-type="image" tabindex="1"><img src="https://cdn.sspai.com/2019/11/04/21cdd69d550d270b493ad0e300c101b1.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>我自己是从 2012 年开始使用 Mac 的，而且基本上经历过了 MacBook、MacBook Air、MacBook Pro、iMac、iMac Pro，应该可以说非常了解了。其实我在今年年初写过一篇文章，系统地介绍过 Mac 的购买和使用，目前仅在知乎就有超过 8000 的点赞和 100 万的阅读量。但是今年苹果对于 Mac 的更新节奏特别快，几乎多数的产品线都有或多或少的更新，所以当时那篇文章现在已经完全不适用了。</p>
<p>所以，也就有了今天这一篇。</p>
<p>在这篇文章中，还是主要回答两个问题：</p>
<ol>
<li>Mac 是不是适合你？</li>
<li>Mac 哪一款适合你？</li>
</ol>
<h2 id="mac-是不是适合你">Mac 是不是适合你？</h2>
<p>在很长一段时间里，拥有一台苹果电脑来说是一件很「装逼」的事情。在星巴克，抿一口拿铁，打开 MacBook Air，当信仰标志亮起的一刻，仿佛自己就是世界的焦点。所以每当我们提到苹果电脑的时候，大家的第一印象一定是「装逼」和「贵」。</p>
<figure data-type="image" tabindex="2"><img src="https://cdn.sspai.com/2019/11/04/8951591af0a203d7a0039db02214d955.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>再好的工具，也一定有适用人群，所以为了节约大家的时间，如果你是我说的以下几种人，就没必要往后阅读了：</p>
<ol>
<li>游戏爱好者。想要在电脑上打游戏，任何门类的游戏，无论是主机游戏，还是网络游戏，Mac 电脑都不适合。</li>
<li>专业软件不支持 macOS 。这个因为情况较多，需要你自行了解。一般来说，你可以向同事了解，公司是不是有仅在 Windows 上才能运行的专业软件。如果是学生，就向学长学姐了解一下你的专业是不是有无可代替的软件一定要在 Windows 上运行。目前已知的是，像一些金融或者是财会类的软件在 Mac 上要么无法运行，要么就是像 Excel 这种软件，在 Mac 上运行功能会有阉割，例如 CAD 虽然可以用，但是表现不好。</li>
<li>预算不够。目前来看，如果你买电脑的预算不是 8000 以上，就请不要考虑 Mac。因为，无论怎么说， Mac 依然属于昂贵的电脑。</li>
</ol>
<p>那么你选择 Mac 的理由是什么呢？</p>
<figure data-type="image" tabindex="3"><img src="https://cdn.sspai.com/2019/11/04/635c7e96dd8bf911bb27d0c2b327edbb.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<h4 id="系统的稳定">系统的稳定</h4>
<p>我先提前打预防针，我知道一定会有人评论稳定性已经不如从前了等等，但不得不承认，今天 macOS 的稳定性依然是远超 Windows。尤其是对一些女孩子来说，macOS 省心省力。macOS 因为特殊机制，避免了普通用户乱下载软件，或不小心下载流氓软件，甚至是中毒的风险。</p>
<h4 id="系统的流畅度">系统的流畅度</h4>
<p>这也是 Mac 的核心优势之一。这种流畅度也很好理解，你如果使用过 iPhone 和安卓机，就会发现配置再好的安卓机感觉上还是不如 iPhone 流畅，这个结论在 Mac 上也是成立的。</p>
<figure data-type="image" tabindex="4"><img src="https://cdn.sspai.com/2019/11/04/71c78346c6b81a2411c5033e3c3c3d95.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<h4 id="创意工作的沉浸体验">创意工作的沉浸体验</h4>
<p>为什么几乎所有的摄影师和音乐创作者都会选择 Mac 电脑，就是因为整个系统的沉浸体验极佳。所有的创意工作都非常在意所谓的「灵感」，Mac 系统可以让你全身心投入，不会有「广告弹窗」打扰你，尤其是像是 Photoshop 和 Lightroom 这种软件，在 Mac 上运行行云流水。除非你的配置太老，基本上 Photoshop 都是秒开，这一点对创作全靠心情的摄影师很重要。</p>
<p>而对视频剪辑来说，Final Cut Pro 这款软件仅仅只能在 Mac 上使用，所以很多喜欢这款软件的用户也会优先选择 Mac。而如果你选择了 Mac，请你一定要学会使用它，因为它是最容易上手且专业的视频剪软件。</p>
<h4 id="优秀的屏幕及影音体验">优秀的屏幕及影音体验</h4>
<p>Mac 的这一块 Retina 屏幕绝对是目前笔记本行业里的标杆。你要记住的是，虽然参数上不是极致的，例如现在的笔记本动不动就是 4K 分辨率，但是得益于苹果的软硬结合，尤其是在字体渲染等方面 macOS 有着自己独特的优势，在实际观感上绝对是上乘，而 Windows 电脑对于高分辨率的支持实在是落后更加明显。</p>
<p>说到音响，Mac 更是有着绝对顶级的表现，尤其是 MacBook Pro 的音响，可以用「震撼」这个词来形容。</p>
<figure data-type="image" tabindex="5"><img src="https://cdn.sspai.com/2019/11/04/8428e9b3e00baabe56c13df83f3a4f4e.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<h4 id="优秀的外观和工业设计">优秀的外观和工业设计</h4>
<p>我相信，这是很多女孩子种草 Mac 最重要的原因之一。Mac 电脑的设计都是需要经过长时间的考验，这也就意味着，你选择的是一个经久不衰的外形设计。例如，即使这一次在更新 MacBook Pro 的时候，外形并没有改变，它依然颜值出众。</p>
<h4 id="苹果生态的紧密结合">苹果生态的紧密结合</h4>
<p>如果你除了 Mac 以外还使用其他苹果产品，那么你会感受到苹果生态的魅力。最简单的，如果你使用 iPhone 可以无缝使用隔空投送传递文件。而如果你现在有 iPad，甚至是可以使用随航功能，你的 iPad 可以成为 Mac 的第二块屏幕，甚至是数位板。</p>
<figure data-type="image" tabindex="6"><img src="https://cdn.sspai.com/2019/11/04/98eb641b4f11d58b712baf515c32e7f9.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>对了，这里有一点非常重要的声明，就是说 Mac 是有 Office 的，这也是大多数人误会最多的地方。Mac 上的 Office 套件可以正常使用，只不过会有一些专业功能的阉割，尤其是在 Excel 上，当然，如果你不是重度用户就不需要担心。一个小番外，其实 Office 本来就是乔布斯邀请盖茨做的，这个故事非常有意思，有机会再分享给大家。</p>
<p>但是，我一定要再强调一次，上述所说的所有一切都是<strong>建立在你使用 macOS 的基础</strong>上，如果你买回来就装了一个 Windows，那以上的优势几乎没有。</p>
<p>如果你看到这里，决定要购买 MacBook（Pro），那么接下来你可以继续思考之前我说的两个问题，它们决定着你能不能买到真正适合自己的 Mac。</p>
<h4 id="问题一你的预算是多少">问题一：你的预算是多少？</h4>
<p>这非常关键，只有在搞清楚这个问题以后，我们后面才会有讨论的必要。在你做出预算的时候，需要清楚一件事：</p>
<p>「Mac 是昂贵的电脑，但也是有着高性价比的电脑」</p>
<p>这个说法看起来是矛盾的，但我们可以简单地做这样一个计算：目前，苹果官网最便宜的 Mac 是 MacBook Air，售价是 8899。什么概念？这个价格可以买到市面上绝大多数品牌电脑的高配版本，而你在 Apple 这里却只能买一个「只能打打字，看看剧」的上网本（当然了，这可能是最好看的上网本）。</p>
<p>所以，Mac 贵吗？当然贵。</p>
<figure data-type="image" tabindex="7"><img src="https://cdn.sspai.com/2019/11/04/7659952a74edf79793b4287db7b7750a.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>那么高性价比从何而来呢？</p>
<p>我上一个笔记本电脑是 MacBook Pro 2012 款，这款电脑我一直用了 5 年，最后换掉的原因并不是因为卡顿，只不过是因为我剪辑视频要上 4K，实在是难为一款 5 年前的电脑。也就是说，任何一款 Mac 的寿命一定是三年以上，而且三年以上运行依然流畅，4-5 年才会感受到电脑配置不够用。</p>
<p>对于很多仅仅是当作上网本的用户，轻轻松松用个 4-5 年没问题，但是对于任何一款 Windows 笔记本，别说 3 年以上，2 年不到绝对就会变成开机等一分钟的状态（绝大多数的使用者）。</p>
<p>如果是对于缺乏电脑常识的用户，用不了多久电脑就会变成各种流氓软件全家桶，所以，不夸张地说，Mac 的使用寿命是 Win 的两倍。</p>
<p>因此，只要是适合的人，Mac 的确是有性价比的，甚至是像 iMac 5K 这样的产品更是极具「性价比」。</p>
<p>好，说了这么多，现在你可以想想到底可以拿出多少钱来购买 Mac 。</p>
<p>这个数字一定是你的最高预算。</p>
<h4 id="问题二你的需求是什么">问题二：你的需求是什么？</h4>
<p>这是一个比价格还要难回答的问题，很多人对自己的需求并不是很确定，但是你一定要有一个轻重缓急的排序，例如你是更加看重颜值、重量，还是性能和屏幕尺寸。</p>
<p>假设，我们的电脑是用来修图学摄影，那么屏幕尺寸和性能就是需要优先考虑的要素，便携性就需要让步。需要记住的是，没有完美的电脑，比如便携性和性能同时达到完美是不可能的。而且，并不是纸面上的参数性能越好就越适合你，其实对于绝大多数人来说，Mac 的性能都是过剩的。</p>
<p>在有了以上的准备工作以后，我们现在终于可以走进 Mac 的世界。</p>
<h2 id="哪一款-mac-适合你">哪一款 Mac 适合你</h2>
<p>目前的 Mac 电脑已经横跨了各个用户群体，从普通到专业。在本文中，因为需要考虑更多的受众，所以非常专业的 Mac 例如 iMac Pro、Mac Pro、Pro XDR Display 这些设备将不会涉及。而且我也相信这些用户本身应该比我更了解 Mac，所以接下来，我会把目前官网在售的 Mac 分为六个型号：</p>
<h3 id="macbook-air">MacBook Air</h3>
<figure data-type="image" tabindex="8"><img src="https://cdn.sspai.com/2019/11/04/a2674da16294c3407853dba2c3038687.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>目前所有的在售笔记本中，MacBook Air 是性能最弱的一个，不过相应的也是价格最低的一款，官网售价是 8899 起步。</p>
<p>这是一款标准的上网本，优点有：</p>
<ol>
<li>强续航。因为不需要很强的性能，所以能耗控制得很好，这也是目前在售的笔记本中续航最好的一款，基本上充一次电就可以满足一天使用，可以说摆脱了充电线的困扰，带到哪里都不需要找充电插座。</li>
<li>高颜值。颜值对于很多用户来说都是非常重要的指标，尤其是对于女性用户。MacBook Air 经典的楔形设计，尤其是玫瑰金色，可以很好地搭配衣服和包包，颜值出众。</li>
<li>轻机身。这里的轻，并不是机身轻，而是考虑到携带充电器以后的整体重量。</li>
</ol>
<figure data-type="image" tabindex="9"><img src="https://cdn.sspai.com/2019/11/04/2c6408c6a3a74397e5a5fd08d6f8a48e.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>它的缺点有：</p>
<ol>
<li>性能不够强劲。但是正如一开始所说，性能是因人而异的。换句话说，性能是相对的。如果你平时就是看看剧，写写文档，处理一些工作任务绰绰有余。哪怕是适度的照片处理也是没问题，4000 万像素的 Raw 格式也带得动，但是剪辑一个 4K 影片肯定是不行的。</li>
<li>屏幕色彩素质相对较低。在目前的 Mac 型号中，MacBook Air 仅仅覆盖了100% sRGB，而其它都已经是标准的 P3 广色域，所以如果你从事的职业对于色彩有要求，那么就需要谨慎。不过如果不是专业用户，那么这块屏幕的细腻程度和实际播放效果还是很好。</li>
<li>两个 USB-C 接口。由于目前 Mac 系列的笔记本都已经采用了 USB-C 接口，所以想要连接一些外设可能需要转接设备，但是因为 MacBook Air 只有两个接口，可能会出现接口不够的情况。当然，如果你的工作几乎不需要任何外设，那么也就不需要担心这个问题。</li>
</ol>
<p>在具体的配置选择上，建议硬盘一定要选择 256GB 以上，千万不要因为价格选择 128GB。128GB 将会大大缩短 Mac 的使用寿命。身边已经有越来多的案例证明，最后更换 Mac 的原因基本上都是因为硬盘存储不足。</p>
<figure data-type="image" tabindex="10"><img src="https://cdn.sspai.com/2019/11/04/b169ee09141abf57cb3909edf9426aa1.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>总体来看，MacBook Air 适合对于性能没有需求，但对颜值和续航有需求的用户。</p>
<p>相对来说合理的配置：</p>
<ul>
<li>1.6GHz 双核第八代 Intel Corei5 处理器</li>
<li>8GB 2133MHz LPDDR3</li>
<li>256GB 固态硬盘（以上最好）</li>
</ul>
<h3 id="macbook-pro-13寸-2-个雷雳-3-接口">MacBook Pro 13寸 （2 个雷雳 3 接口）</h3>
<figure data-type="image" tabindex="11"><img src="https://cdn.sspai.com/2019/11/04/1add3c2048d03a512d87a8aaab91b884.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>这是今年推出的新款 13 寸 MacBook Pro。在很多人看来，这其实是原本 MacBook Pro 13寸（4 个雷雳 3 接口）的阉割版本。的确，相较于下面将会介绍的 MacBook Pro 13 寸（4 个雷雳 3 接口）版本，这个版本降低了主频，同时砍掉了 2 个雷雳 3 接口，麦克风音质也有缩水。</p>
<p>但，这让他的价格仅仅只有 9999 元起，和 MacBook Pro 13 寸（4 个雷雳 3 接口）版本的价格差距为 2400 元（相同硬盘容量），并且一个重要信息是：</p>
<p>虽然二者的主频分别是 1.4Ghz 和 2.4GHz，但是二者性能基本相当。跑分结果来看，只是微弱的差距，所以 MacBook Pro 13 寸（4 个雷雳 3 接口） 能处理的任务， MacBook Pro 13 寸（2 个雷雳 3 接口）也一样可以胜任。</p>
<p>那么基本上，2400 元的差价让 MacBook Pro 13 寸（2 个雷雳 3 接口）很值得购买。</p>
<figure data-type="image" tabindex="12"><img src="https://cdn.sspai.com/2019/11/04/1631d783ff00501cfdd1594473724815.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>所以总结起来，优点是：</p>
<ol>
<li>极高的性价比。如果你想要用 Mac 处理照片、视频、文档，并且预算吃紧，那么这一款就是最好的选择。</li>
<li>兼顾尺寸和性能。13 寸的笔记本，一直都是市面上比较常见的尺寸类别，重量适中，屏幕适中，移动便携。</li>
</ol>
<p>缺点：</p>
<ol>
<li>音响质量在所有 MacBook Pro 中稍逊一筹。</li>
<li>缺少两个雷雳 3 接口。这是我认为 MacBook Pro 13 寸（2 个雷雳 3 接口）最大的问题。因为既然购买了 Pro款，一定是对内容生产有要求的，那么必定需要很多外接设备，所以如果只有两个接口，就需要考虑使用扩展坞来解决这个问题。</li>
</ol>
<p>购买建议是，切记不要购买 128GB 版本，一定要购买 256GB 版本。不然刚开机，装一些大型软件，例如Photoshop 或者是 Final Cut Pro X之类的就已经满了。</p>
<p>我知道因为价格很相似，很多购买 MacBook Air 的人可能会说，那么我为什么不加一点点钱购买这一款。这种想法很有道理，MacBook Pro 13 寸的屏幕和性能都会好很多，还有 Touch Bar。但还是那句话，你要想清楚自己看重的是什么。如果自己本身对于性能没有要求，只是追求便携、续航和颜值，MacBook Air 依然具有优势。</p>
<figure data-type="image" tabindex="13"><img src="https://cdn.sspai.com/2019/11/04/ae73fc283c438b1d80029015fa620340.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>相对来说合理的配置：</p>
<ul>
<li>1.4GHz 四核第八代 Intel Core i5 处理器</li>
<li>8GB 2133MHz LPDDR3 内存</li>
<li>512GB 固态硬盘</li>
</ul>
<h3 id="macbook-pro-13-寸4-个雷雳-3-接口">MacBook Pro 13 寸（4 个雷雳 3 接口）</h3>
<figure data-type="image" tabindex="14"><img src="https://cdn.sspai.com/2019/11/04/74cec955255c2d97dc190d2c085036f6.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>优势前面其实已经讲过了，那么如果你确定要购买一款 13 寸的 Mac，那么肯定是在两个接口和四个接口之间选择一个，所以这款电脑的优缺点也就明显了，优点是：</p>
<ol>
<li>四个接口，基本上可以满足各种外设接口，尤其是想要使用 13 寸 Mac 连接显示器的用户更是需要注意，如果你购买两个接口的版本，就意味着显示器和电源以后就再也没有接口连接，所以最好选择这个版本。</li>
<li>音响音质更好。</li>
</ol>
<p>缺点是相对两个接口版本，价格较贵，要 13899 元起步。</p>
<p>最推荐的配置是：</p>
<ul>
<li>2.4GHz 四核处理器</li>
<li>8GB 2133MHz LPDDR3 内存</li>
<li>512GB 固态硬盘</li>
</ul>
<h3 id="macbook-pro-15寸">Macbook Pro 15寸</h3>
<figure data-type="image" tabindex="15"><img src="https://cdn.sspai.com/2019/11/04/38d694307010506d8a4a26dc4353d457.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>如果你是一个视觉或者音乐相关的专业用户，那么 15 寸的 MacBook Pro 就不用说了，应该是身边的人都在用。我几乎身边所有的摄影师朋友或者是搞音乐的朋友基本都是一水的 MacBook Pro 15寸。</p>
<p>优点：</p>
<ol>
<li>更大的屏幕尺寸就意味着更高的效率，尤其是对于视觉用户来说，15 寸和 13 寸的修图感受完全不一样。</li>
<li>更强劲的性能。目前 MacBook Pro 15 寸最低六核 i7，最高可以选择 8 核，是 Mac 性能的代表。如果你想要一台性能最好的 Mac，那么就是这一台。更重要的是，15 寸的 Mac 是标配独立显卡，这在一些图形渲染的工作上和 13 寸有着本质区别。</li>
<li>更大的触控板。</li>
</ol>
<figure data-type="image" tabindex="16"><img src="https://cdn.sspai.com/2019/11/04/657d08f6298a8a7cd5604845ea0f2373.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>缺点有：</p>
<ol>
<li>相对 13 寸不够便携。</li>
<li>起步价格 18199 元，一般用户难以接受。不过对于专业用户来说，我相信因为是生产力工具，基本上价格就不成问题了。</li>
</ol>
<p>我自己就是 15 寸 Mac 的重度用户，基本上无论是重度的图片修饰，还是影片的 4K 剪辑都可以流畅并高效的完成。目前来说，这也是很多创意用户选择最多的一个类别。</p>
<p>在配置的选择上，虽然 MacBook Pro 15 寸起步就是 256GB，但是对于是生产力级别的机器肯定是不够的，至少是 512GB 起步。我自己是 2T 硬盘，即使如此，同时剪辑 2、3 个视频的时候都有可能捉襟见肘。当然，也可能是因为视频大的原因。而且要注意的是，可能很多人希望通过外挂硬盘来解决，但是对于用来干活的机器，外挂还是会有很多不方便的地方。</p>
<p>所以既然已经花了这么多钱，就不要因为一两千块让自己使用得很不爽。在配置上，虽然我自己是把处理器升级到了 i9，但是<strong>并不建议大家这么做</strong>。处理速度会快一点，但是不明显，所以我的建议是<strong>有预算先升级硬盘、然后内存、然后是显卡。</strong></p>
<p>相对合理的配置：</p>
<ul>
<li>2.3GHz 八核第九代 Intel Core i9 处理器</li>
<li>16GB 2400MHz DDR4 内存</li>
<li>Radeon Pro 560X 图形处理器，配备 4GB GDDR5 显存</li>
<li>512GB 固态硬盘</li>
</ul>
<h3 id="imac-5k">iMac 5K</h3>
<figure data-type="image" tabindex="17"><img src="http://p1.pstatp.com/large/pgc-image/698b82a4bc01496eb524fdc247fa9edb?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="Mac 电脑终极选购指南 2019——双十一特刊" loading="lazy"></figure>
<p>要说在所有的 Mac 中，哪一台最有性价比，那肯定是「买电脑送显示器」的 iMac 5K。你应该经常在各种公司前台看过这台机器，毕竟背部的颜值好。当然，更常见的应该是各种设计公司、摄影公司等等。iMac 5K 本身是一台以「27 寸」大屏幕为卖点的显示设备，它拥有一块：</p>
<p>「分辨率高达 5K ，覆盖 P3 广色域的」专业屏幕。</p>
<p>市面上类似素质的显示器都要上万元，而这台 iMac 5K 的起步价仅有 13832 元，还自带苹果不算便宜的键鼠套装。某种意义上来说，电脑相当于「白送」，所以这也是为什么很多商业机构会使用这款机器的原因。</p>
<p>优点：</p>
<ol>
<li>拥有一块震撼的 27 寸 5K 显示器。只要你的工作是和视觉相关的，那么这块显示器都可以满足你的要求，无论是影片剪辑还是摄影后期都是利器，绝对是跟普通笔记本完全不一样的体验。</li>
<li>性能够用。因为是台式机，在散热等方面有优势，并且都是桌面处理器，所以一般来说会比相同价位的笔记本性能要好一点。</li>
</ol>
<figure data-type="image" tabindex="18"><img src="https://cdn.sspai.com/2019/11/04/248a1eb03801df0d4e02234e23f0a522.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>缺点：</p>
<ol>
<li>台式机，几乎不具备任何移动性，并且一定要连接电源才可以使用，所以适合固定地点办公。</li>
<li>粗边框。相对于目前的主流屏幕设计，iMac 的设计相对老旧，粗边框一直都饱受诟病。</li>
</ol>
<p>如果你想要购买 iMac，尽量不要因为省钱而选择 iMac 4K，而是一定要购买 iMac 5K。因为 iMac 4K 的屏幕只有 21.5 英寸，效果大打折扣，并且显得边框更加「粗犷」。当然，还有一条重要的原则：</p>
<p><strong>不要买所谓的融合硬盘，最好是固态硬盘。</strong></p>
<p>其实一台电脑是不是卡顿，很多时候影响因素是硬盘速度，所谓的融合硬盘是少量的固态硬盘和机械硬盘的组合，所以会极大地影响机器的运行速度，尤其是在后期的时候。记住，不要看融合硬盘容量更大就选择，一定要以固态硬盘为主，256GB 可以，512GB 以上最好。</p>
<p>并且对于内存来说， iMac 并不是主要的升级对象，因为 iMac 5K 是支持自行更换内存条的，所以自己购买内存条再添加，可以把更多费用花在硬盘上。而且更换方式非常简单，女孩子只要是简单看一下教程都可以学会。</p>
<p>我自己家里就有一台 iMac 5K 已经服役很多年了，只要是后期修图和重度的影片剪辑基本上都是靠它，绝对是纯正的生产力工具。所以我还是很建议，如果是预算不足，而且真的没有那么需要移动的用户可以先考虑的是 iMac 5K，而不是 Mac 笔记本系列。</p>
<h3 id="mac-mini">Mac mini</h3>
<p>Mac mini 在所有的苹果电脑里可能是最不为大众所知的产品，这是一条本来已经沉睡了很多年的产品线，突然在去年十月复活了。简单来说，Mac mini 就是一个体积很小的电脑主机，没有任何显示设备，需要你自行连接显示器使用，所以 Mac mini 的价格也相对较低，起步价只有 6331。</p>
<p>但是自行配备显示器这件事，还是很有门槛的，所以对于大多数人来说，我还是建议直接去买 iMac 5K，Mac mini 更适合程序员作为开发工具，而且一般来说这些人群本身也是自带显示器的。</p>
<h2 id="尾声">尾声</h2>
<figure data-type="image" tabindex="19"><img src="https://cdn.sspai.com/2019/11/04/9743b4f878dc0b03d5de4fc60f83dc5e.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>好了，以上就是我对于目前 Mac 产品线的一个简单梳理。购买一台 Mac 就是像选择一个好伙伴，我们一定要想好预算和需求，不要购买到错位的产品。</p>
<p>目前， Mac 的产品线已经相对来说比较完整，购买渠道也很多，如果你认为官网或者是官方零售店的价格相对来说难以接受，那么大型电商的自营平台也是可以考虑的，价格相对来说可以有一部分优惠。淘宝，尤其是低价淘宝就要警惕了，羊毛终究出在羊身上，翻新做假已经是一条成熟的产业链了。</p>
<p>而如果是学生，是有教育优惠一说的，每年特定时间都是有折扣送耳机，但是今年已经结束了，时间一般都是 8-10 月份这一段时间。对了，最后我还是想要特别说一下：</p>
<p>不要因为自己的预算不够就购买低价的 Mac，Mac 电脑的价格并不是和性能成正比，如果你是一个对性能有需求的用户，预算不足就还请果断放弃，毕竟不能花了钱不解决问题。</p>
<blockquote></blockquote>
<p>还有，如果买了 Mac 就千万别装 Windows，那是在把你的钱打水漂。</p>
<p><font color = #545454 size = 1 >作者 | @Derrick Zhang</font></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[测试版群聊语音/视频上线，macOS 版微信终于不那么残缺了]]></title>
        <id>https://hesy-zhoulijie.github.io/post/wechat-mac/</id>
        <link href="https://hesy-zhoulijie.github.io/post/wechat-mac/">
        </link>
        <updated>2020-10-04T08:51:05.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="测试版群聊语音视频上线macos-版微信终于不那么残缺了">测试版群聊语音/视频上线，macOS 版微信终于不那么残缺了</h1>
]]></summary>
        <content type="html"><![CDATA[<h1 id="测试版群聊语音视频上线macos-版微信终于不那么残缺了">测试版群聊语音/视频上线，macOS 版微信终于不那么残缺了</h1>
<!-- more -->
<p>微信在 macOS 上的更新进度一直落后于 Windows，其实我已经习以为常了，甚至我开始用 Windows 版微信过于臃肿这样来安慰自己，但知道疫情期间两个月的远程办公，才让我感受到「落后」的悲哀。</p>
<h3 id="没有微信群语音的两个月">没有微信群语音的两个月</h3>
<p>尽管公司里已经普遍采用了钉钉作为办公服务软件，但基本只是作为日常人事管理系统使用，绝大部分人沟通还是通过微信。</p>
<figure data-type="image" tabindex="1"><img src="https://cdn.sspai.com/2020/04/24/447e5eefc66cb9359882ad6fcfadfc73.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>原本定期的周会，远程办公期间改成了每日上午汇报工作计划，晚间汇报工作完成度，再加上不定期的项目沟通会，我觉得已经非常能折腾了，但使用 Macbook Pro 作为工作机，微信群聊不支持语音才是最让我崩溃的。</p>
<p>每一次群聊会议，都需要从电脑切换到手机上，想要发起群聊还只能从手机上发起；像我习惯带上蓝牙耳机沟通，也不影响家人……你应该能体会那种体验上的巨大割裂感。</p>
<p>废话了这么多，我只是想单纯的表达今天收到 macOS 版微信更新提示的激动，虽然还是 beta 版本，正式版连小程序都没上，估计还有的等。</p>
<figure data-type="image" tabindex="2"><img src="https://cdn.sspai.com/2020/04/24/4fe036c53fc7ac66499610a76f4efed7.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>除了新增群聊语音和视频之外，这版本也加入了新的消息引用样式，样式上类似 Windows/Android 版本，后面会具体演示；其次还有语音自动转文字，这两点也都是近期 Windows 版本微信更新的新特性。</p>
<h3 id="期待已久微信群聊语音">期待已久：微信群聊语音</h3>
<p>其实我一直也不大明白，群聊语音或视频功能应该是这类聊天软件核心功能之一，为何微信到现在才开放给 macOS 用户公测。但既然已经来了，那还是只能「真香」了。</p>
<figure data-type="image" tabindex="3"><img src="https://cdn.sspai.com/2020/04/24/58ab0cc852018dd1c08f6b36458a30d1.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>唯一没能体验过微信群聊语音的估计现在只有 macOS 用户和网页版用户了吧，群语音/视频人数上限依然是 9 人，大概是觉得九宫格比较好看吧……毕竟微信也没有定义过多人会议场景，尤其是在推出腾讯会议之后。</p>
<h2 id="消息引用样式变更支持图片">消息引用样式变更，支持图片</h2>
<p>原本微信消息引用在 macOS 上会用得较多，而微信在其他客户端全面优化消息引用样式之后，反而 macOS 端消息引用有点过于简陋。</p>
<figure data-type="image" tabindex="4"><img src="https://cdn.sspai.com/2020/04/24/d66aaaaee4127c350360f42dc14a3b9e.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>新版本的消息引用已经修改成跟 Windows、Android 等客户端版本一样的形式，具备比较高的辨识度。</p>
<figure data-type="image" tabindex="5"><img src="https://cdn.sspai.com/2020/04/24/d3f1f3847e4ad48078348a68c5edc4dd.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>查看引用的文本消息，点击之后会以弹出的消息气泡形式展开，会比手机上全屏展示体验更好。</p>
<figure data-type="image" tabindex="6"><img src="https://cdn.sspai.com/2020/04/24/ded001dc963adfbd4271579b36d29c27.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>当然，虽然来的晚，但也是直接支持了图片消息的引用。此外，经测试，语音消息暂时不支持。</p>
<h2 id="语音自动转文字">语音自动转文字</h2>
<p>虽然不支持引用，但也加入了最近在 Windows 版本新增的语音消息自动转文字功能。</p>
<figure data-type="image" tabindex="7"><img src="https://cdn.sspai.com/2020/04/24/03209912f884f0bf5b4665a343487100.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>对于上班族而言，一天到晚都带着耳机的毕竟是少数，语音消息拿起手机听的话，需要从工作状态中抽离出来解锁手机，而且声音没控制好，指不定女朋友发来什么消息（此处省略几百字……）</p>
<p>语音转文字默认关闭，需要手动在设置中开启。</p>
<figure data-type="image" tabindex="8"><img src="https://cdn.sspai.com/2020/04/24/e22382bab82ea3507fe253b856dafc3f.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" loading="lazy"></figure>
<p>收到语音消息后会自动转成语音，这点在工作期间还是比较实用的，尤其是经常有人喜欢发大段语音时，戴耳机听也会麻烦，手动转效率不够。</p>
<h2 id="小结">小结</h2>
<p>自从有了小程序支持之后，我就基本在 macOS 上使用 beta 版本的微信，目前来看稳定性还不错，没有出现比较大概率的崩溃或者其他难以忍受的问题，而且正式版本已经许久没有新增功能，好歹 beta 版本在功能上是在追赶 Windows 端的，如果对群聊语音或者视频有迫切需求的用户，可以暂时切换到 beta 版本使用。</p>
<blockquote>
<p>macOS微信beta版下载：</p>
<p><a href="https://dldir1.qq.com/weixin/mac/WeChatMac_Beta.dmg">https://dldir1.qq.com/weixin/mac/WeChatMac_Beta.dmg</a></p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[并查集]]></title>
        <id>https://hesy-zhoulijie.github.io/post/i_bBwEjyO/</id>
        <link href="https://hesy-zhoulijie.github.io/post/i_bBwEjyO/">
        </link>
        <updated>2020-10-04T08:50:32.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="并查集">并查集</h1>
]]></summary>
        <content type="html"><![CDATA[<h1 id="并查集">并查集</h1>
<!-- more -->
<p><a href="https://www.luogu.com.cn/problem/P3367">洛谷der链接</a></p>
<h2 id="题面">题面</h2>
<h3 id="题目描述">题目描述</h3>
<p>如题，现在有一个并查集，你需要完成合并和查询操作。</p>
<h3 id="输入格式">输入格式</h3>
<p>第一行包含两个整数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mo separator="true">,</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">N,M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span> ,表示共有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span> 个元素和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span> 个操作。</p>
<p>接下来 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span> 行，每行包含三个整数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>X</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>Y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">Z_i,X_i,Y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p>
<p>当 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">Z_i=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 时，将 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>​ 与 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">Y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>​ 所在的集合合并。</p>
<p>当 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mi>i</mi></msub><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">Z_i=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> 时，输出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>​ 与 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">Y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>​ 是否在同一集合内，是的输出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span> ；否则输出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>。</p>
<h3 id="输出格式">输出格式</h3>
<p>对于每一个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mi>i</mi></msub><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">Z_i=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> 的操作，都有一行输出，每行包含一个大写字母，为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span> 或者 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span> 。</p>
<h2 id="讲解">讲解</h2>
<blockquote>
<p>并查集，在一些有N个元素的集合应用问题中，我们通常是在开始时让每个元素构成一个单元素的集合，然后按一定顺序将属于同一组的元素所在的集合合并，其间要反复查找一个元素在哪个集合中。这一类问题近几年来反复出现在信息学的国际国内赛题中，其特点是看似并不复杂，但数据量极大，若用正常的数据结构来描述的话，往往在空间上过大，计算机无法承受;即使在空间上勉强通过，运行的时间复杂度也极高，根本就不可能在比赛规定的运行时间(1~3秒)内计算出试题需要的结果，只能用并查集来描述。 (摘自百度)</p>
</blockquote>
<h2 id="关于并查集和路径压缩">关于并查集和路径压缩：</h2>
<p>现在我们假定 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>[</mo><mi>i</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">f[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span></span></span></span> 表示第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 个人的老大是谁。</p>
<p>现在我们有甲，乙，丙三个人（分别用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">a, b, c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span></span></span></span> 表示）</p>
<p>假设甲和乙打架了，甲做了丙的小弟。则有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>[</mo><mi>a</mi><mo>]</mo><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">f[a]=b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">a</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>，</p>
<p>后来甲打赢了丙</p>
<p>那么丙就是甲的小弟了。有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>[</mo><mi>c</mi><mo>]</mo><mo>=</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">f[c]=a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">c</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>，</p>
<p>但是如果我们这样表示，丙不能直接知道甲，容易自己人打自己人</p>
<p>所以，我们必须直接让丙的大哥变成最大的老大。</p>
<p>定义函数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mi>i</mi><mi>n</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">find</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span></span></span></span></p>
<pre><code class="language-c">int find(int k){
    if(f[k]==k)return k;
    return find(f[k]);
}//find 函数可以直接找到最大的老大

f[c]=find(a);
//丙的老大是甲
</code></pre>
<p>这时，因为我们要路过他所有的上级，我们也可以顺便使途中经过的人的大哥也变成老大。</p>
<pre><code class="language-c">//路径压缩
int find(int k){
    if(f[k]==k)return k;
    return f[k]=find(f[k]);
    /* 
        即：
        f[k]=find(f[k]);
        return f[k];
    */
}

f[c]=find(a);
</code></pre>
<p>简直是太巧妙了！</p>
<p>而判定两个人的老大是否相等，只需</p>
<pre><code class="language-c">if(find(a)==find(b))
</code></pre>
<p>就好了。</p>
<p>一些设定：</p>
<ul>
<li>一个人不能有两个老大。</li>
<li>当已经有老大的人臣服时，老大也将成为胜利的人的小弟。</li>
</ul>
<h2 id="代码">代码：</h2>
<pre><code class="language-c">#include&lt;bits/stdc++.h&gt;
using namespace std;
int i,j,k,n,m,s,ans,f[10010],p1,p2,p3;
//f[i]表示i的集合名
int find(int k){
    //路径压缩
    if(f[k]==k)return k;
    return f[k]=find(f[k]);
}
int main()
{
    cin&gt;&gt;n&gt;&gt;m;
    for(i=1;i&lt;=n;i++)
        f[i]=i;//初始化i的老大为自己
    for(i=1;i&lt;=m;i++){
        cin&gt;&gt;p1&gt;&gt;p2&gt;&gt;p3;
        if(p1==1)
            f[find(p2)]=find(p3);
            //p3打赢了p2
        else
            if(find(p2)==find(p3))
            //是否是一伙的
                printf(&quot;Y\n&quot;);
            else
                printf(&quot;N\n&quot;);
    }
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ 最全的PDF解决方案]]></title>
        <id>https://hesy-zhoulijie.github.io/post/pdf/</id>
        <link href="https://hesy-zhoulijie.github.io/post/pdf/">
        </link>
        <updated>2020-10-04T08:49:06.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="最全的pdf解决方案">最全的PDF解决方案</h1>
]]></summary>
        <content type="html"><![CDATA[<h1 id="最全的pdf解决方案">最全的PDF解决方案</h1>
<!-- more -->
<h2 id="office转pdf">Office转PDF</h2>
<p>所有的Office2010+ 都具有“导出为PDF”的选项。甚至可以直接另存为PDF！当然你也可以在打印选项中选择<code>Microsoft Printer to PDF</code><br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200422134546863-320085785.png" alt="" loading="lazy"></p>
<h2 id="pdf-阅读器">PDF 阅读器</h2>
<h3 id="windows">Windows</h3>
<p>在Windows上的PDF阅读器多种多样，而且全平台的浏览器都可以打开PDF。<br>
① Adobe Acrobat Reader<br>
相信不少人电脑里都安装了Adobe Acrobat Reader，这是目前使用最广泛的PDF阅读器之一。不过Adobe Acrobat Reader也有缺点，文档打开速度稍慢，只有弹出式注释工具，需鼠标点击方能阅读注释且无法修改注释文字格式。<br>
综合结论：⭐️⭐️⭐️⭐️<br>
<a href="http://mydown.yesky.com/xzdown/396017?isxzq=0">下载地址</a><br>
② Sumatra PDF<br>
也是一款好用的PDF阅读软件，体积很小，打开文档速度十分快捷。Sumatra PDF最大优点在于支持搜索PDF文档内容，查找起来十分方便。但标注功能也略有限制。<br>
综合结论：⭐️⭐️<br>
<a href="http://www.downza.cn/download/190292?module=soft&amp;id=190292&amp;token=a46da250dc89a24cc185a4e0b1e4a57d&amp;isxzq=0">下载地址</a><br>
③ Drawboard PDF<br>
记得时Surface自带的PDF阅读器，Windows应用商城里可下载。Drawboard PDF大概是最好的标注工具了，搭配Surface Pen一起非常好用。官方版请在Microsoft Store中下载。<br>
<a href="http://js.downxia.com/down/drawboardpdfzwpjb.rar">PJB下载地址</a><br>
④ PDF-XChange Viewer<br>
PDF-XChange Viewer的文字渲染效果较差，不过它最大优势在于标注特别方便，可任意增减书签，也可以将PDF内容按章节划分标注。<br>
<a href="https://dl-sh-ctc-1.pchome.net/1c/ql/PDFXVwer2.5.322.9.zip">下载地址</a></p>
<h3 id="mac">Mac</h3>
<p>平时也会使用Mac，始终觉得Mac内置的阅读功能太简洁，标注功能严重缺失。</p>
<p>基本没有标注功能，也无法记录阅读进度。<br>
所以Mac里推荐大家使用：Skim</p>
<p>Skim也是一款很小的PDF阅读器，但功能却足够强大，标注/阅读/记录一应俱全。</p>
<h3 id="手机">手机</h3>
<p>①Acrobat Reader<br>
<a href="https://dl-sh-ctc-1.pchome.net/3v/kk/com.adobe.reader_1631.apk">安卓</a></p>
<p>①PDFelement<br>
PDFelemnet更多的是标注、编辑功能，手机上快速处理一些PDF任务还是不错。<br>
<a href="https://acj5.0098118.com/pc6_soure/2020-3-10/a91c579c4f7e8bfQL7WK9QcHH1mIjy.apk">安卓</a></p>
<h2 id="转换格式">转换格式</h2>
<h3 id="all-pdf">All =&gt; PDF</h3>
<ol>
<li>打印</li>
<li><a href="www.alltoall.net">凹凸凹在线转换</a>（还支持200多种除了PDF以外的文件）</li>
</ol>
<h3 id="pdf-all">PDF =&gt; All</h3>
<ol>
<li><a href="www.ilovepdf.com/zh-cn">ilovepdf</a></li>
<li><a href="www.smallpdf.com">smallpdf</a></li>
</ol>
<p>这次就到这里啦！不足之处也欢迎大家补充指正。<br>
希望有助，顺颂时祺。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[WPS2019完全体验指南]]></title>
        <id>https://hesy-zhoulijie.github.io/post/wps/</id>
        <link href="https://hesy-zhoulijie.github.io/post/wps/">
        </link>
        <updated>2020-10-04T08:29:58.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="wps2019完全体验指南">WPS2019完全体验指南</h1>
<blockquote>
<h2 id="对不起我再也不黑wps了">— —对不起，我再也不黑WPS了</h2>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<h1 id="wps2019完全体验指南">WPS2019完全体验指南</h1>
<blockquote>
<h2 id="对不起我再也不黑wps了">— —对不起，我再也不黑WPS了</h2>
</blockquote>
<!-- more -->
<h2 id="我们对wps有太多刻板印象">我们对WPS，有太多刻板印象</h2>
<p>用惯了Office的用户（包括我），在谈到WPS的评价可能是到这几个评价。</p>
<blockquote>
<p>“WPS没有布尔运算，做不了很多特定的形状。”<br>
“WPS太多广告了，不实用。”<br>
“WPS很多操作难找，不如office人性化。”<br>
“WPS是盗版office吧？？”</p>
</blockquote>
<p>其实这些评价，也是大部分人对WPS产生的刻板印象，其实WPS的历史十分地悠久，各方面也一直在优化。<br>
1988年一位叫求伯君的年轻人，在出租屋内敲下了一款文字处理系统——WPS，这也开创了中文字处理时代。<br>
从这样<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421170104395-365134119.png" alt="" loading="lazy"><br>
到这样<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421170154304-1942472768.png" alt="" loading="lazy"><br>
在1994年中国办公市场，WPS占据了90%，用户量超千万，要知道当时的微软，在1年前将Word和Excel集合在一起组成了Office。<br>
人性化和部分功能缺失的问题，不可否认曾经的WPS确实做得很不好，以致于在一开始接触PPT的时候，我放弃在WPS操作，选择Office里的PPT。<br>
就这样，我也和很多人一样，走上了一条逢人就说 “删WPS，用Office啦~” 的道路。<br>
但是，上周下载并体验了最新版本的WPS2019后，我决定再也不黑WPS了。</p>
<h2 id="wps版人性化">WPS版人性化</h2>
<p>相比起Office，在很多地方WPS确实不太合理，但是WPS也有自己闪光的部分，超级人性化的说，在这也做部分介绍，主要包括对齐、文档窗口折叠、字体预览、自带素材库、强大的外部链接。</p>
<h3 id="对齐">对齐</h3>
<p>在Office里，效率高的小伙伴设置对齐，会先把对齐按钮添加到快速访问工具栏，如果没有设置的话，你就需要手动找到横向分布和纵向分布。<br>
<img src="https://mmbiz.qpic.cn/mmbiz_gif/5YGq5ia5ZYhH7rYtMaibGqGAfFbH6feLwgpJTBIZL5fhUEHgRYBXicro3wWpIZmsX9Aylt6V6IsUlyTWm6L6l8guw/640" alt="" loading="lazy"><br>
在WPS里我们只需要选中我们需要处理的素材，我们会发现素材边缘会自动生成自动显示对齐框。<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421170453937-1489071734.png" alt="" loading="lazy"><br>
哇！</p>
<h3 id="标签页">标签页</h3>
<p>在office里，我们时常会夸Excel、Word、PPT，甚至是思维导图，同时三四个文档“ Alt+Tab ”切换处理。<br>
机智的程序员开发了office tab，支持同个文档类型的多开，但是依旧不支持跨文档类型处理，安装使用也是挺费事的。<br>
但是在WPS（2016+），一个软件，全搞定。不得不承认，在颜值方面，WPS2019的界面真的还挺好看的，同时支持多款文档的窗口折叠，office三件套+思维导图+流程图。<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421171033280-1439836451.png" alt="" loading="lazy"></p>
<h3 id="字体预览">字体预览</h3>
<p>字体预览，一直是WPS不错的一点，选中文字后我们在选择字体处看到很多种字体预览，可以供我们下载，部分需要会员权限。<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421171212346-868195298.png" alt="" loading="lazy"><br>
辣么多字体，看着就眼馋啊！</p>
<h3 id="外部软件关联">外部软件关联</h3>
<p>非常意外的是，WPS突破了原有传统office的三件套模式，串联了包括美化大师、思维导图，便签以及自带了一系列的文档处理转化工具，实现了文档处理一体化。<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421171306851-852645996.png" alt="" loading="lazy"><br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421171319500-424998817.png" alt="" loading="lazy"><br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421171359446-502684100.png" alt="" loading="lazy"><br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421171512474-1612439903.png" alt="" loading="lazy"><br>
当然，WPS的部分模板是需要稻壳会员才可以免费试用，如果工作使用频率比较多的话，也可以选择充值，价格也不贵。</p>
<h2 id="云">云</h2>
<p>移动办公的时代，云盘和手机在文档储存与编辑上的作用越来越大，工作效率也越来越高，这部分真的很让我意外，当你下载了APP以后，会发现WPS还有很多很多的神奇操作，可以下载体验~。</p>
<h3 id="手机编辑">手机编辑</h3>
<p>我们都知道office不支持手机编辑，而wps则早已开发了一系列的手机端平台，包括手机端WPS支持App，公众号，小程序。<br>
手机端的功能仍是琳琅满目<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421171842953-1363879885.png" alt="" loading="lazy"></p>
<h3 id="云存储">云存储</h3>
<p>WPS的云储存，确实让我眼前一亮，实现了不同电脑、APP、微信公众号，小程序的同步云储存，意味着我们不再需要使用U盘各种复制，只需在电脑或者手机上使用同一个账号就找到WPS即可找到文档。<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421172026150-530388419.png" alt="" loading="lazy"><br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421172050431-1333823073.png" alt="" loading="lazy"><br>
多端同步它不香吗？<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421175005460-767626973.png" alt="" loading="lazy"></p>
<h3 id="手机传图">手机传图</h3>
<p>手机传图也是一个很有趣的操作，只需要在WPS中插入选项卡，找到图片选项中的<code>来自手机</code>，扫描二维码以后在手机界面上传图片就可以完成了图片转移了。<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421172156181-1633854251.png" alt="" loading="lazy"></p>
<h3 id="手机遥控">手机遥控</h3>
<p>只要在手机上安装了WPS，在PPT演示的时候我们可以找到<code>投影宝</code>，扫描电脑端的放映二维码即可实现连接。通过左右滑动可以控制页面播放顺序，在没有演示笔的时候可以考虑用手机遥控。<br>
这里用一张官网上的图<br>
<img src="https://res1.wpsacdm.cache.wpscdn.cn/images/1d00f1c3621275817d7a6ef346d209a8.gif" alt="" loading="lazy"><br>
<img src="https://res1.wpsacdm.cache.wpscdn.cn/images/9737b82588a6b73c6c6b0261071ff2f5.gif" alt="" loading="lazy"></p>
<h3 id="线上会议">线上会议</h3>
<p>目前手机语音会议为免费使用功能，大家可以体验一番，不过WPS还是好多功能需充值~</p>
<figure data-type="image" tabindex="1"><img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421172451606-1056015057.png" alt="" loading="lazy"></figure>
<h2 id="ai-in-wps">AI in WPS</h2>
<p>这里的AI是人工智能哦。</p>
<h2 id="其他玩法">其他玩法</h2>
<h3 id="切换动画-新闻联播">切换动画 新闻联播</h3>
<p>在WPS里，发现了一个好玩的切换动态效果。</p>
<h3 id="支持插件">支持插件</h3>
<p>曾经有人会说office高效是因为兼容得了很多得插件，其实这几年WPS也支持安装islide、Pa口袋动画、美化大师等多个插件。</p>
<figure data-type="image" tabindex="2"><img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421174208783-2095497173.png" alt="" loading="lazy"></figure>
<h2 id="总结">总结</h2>
<p>Office和WPS谁强谁弱，谁更好用的问题也是一直被人们讨论。</p>
<p>不得不否认，至今依旧有部分设计性功能是Office专有，而WPS无法比拟的，例如：布尔作品，3D玩法，更多样式的动画效果等。</p>
<p>尽管众多的PPT爱好者都崇尚Office，但是不得不否认WPS也有属于它的『办公』优势，也收获了众多粉丝。</p>
<blockquote>
<p>①基本满足了职场人士办公需求；<br>
②体积小，官网下载不到100M；<br>
③下载完全免费，无需购买序列号；<br>
④安装方便，不会出现太多版本冲突问题；<br>
⑤模板库，Ai生成等操作完全为现代人定制——懒人设计。</p>
</blockquote>
<p>对工具的选择，取决于能否顺利解决我们的工作，至于使用office还是wps，大家可以根据自己需要选择。</p>
<p>我个人总结Office与WPS就是：<br>
<font color = #03B1D7> <strong>设计性，Office完胜；功能性，WPS够用。</strong></font></p>
<p>分享完毕，希望有助~</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[让PPT变精致的秘密，都在这篇文章里]]></title>
        <id>https://hesy-zhoulijie.github.io/post/icon/</id>
        <link href="https://hesy-zhoulijie.github.io/post/icon/">
        </link>
        <updated>2020-10-04T08:28:52.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="让ppt变精致的秘密都在这篇文章里">让PPT变精致的秘密，都在这篇文章里</h1>
<p>在PPT设计中，我们常常会使用到图标，用以修饰画面和辅助文字说明。作为PPT中的“增色剂”，图标能够让PPT更有视觉效果，因此也深受同学们的喜爱。</p>
]]></summary>
        <content type="html"><![CDATA[<h1 id="让ppt变精致的秘密都在这篇文章里">让PPT变精致的秘密，都在这篇文章里</h1>
<p>在PPT设计中，我们常常会使用到图标，用以修饰画面和辅助文字说明。作为PPT中的“增色剂”，图标能够让PPT更有视觉效果，因此也深受同学们的喜爱。</p>
<!-- more -->
<p>但是，PPT中的图标有千千万万，</p>
<blockquote>
<p>为什么我们要掌握图标？<br>
图标的几种分类你都知道吗？<br>
我们怎么快速找到好看又合适的图标？<br>
是不是我们把图标插进去幻灯片页面就代表我们掌握了呢？<br>
下载下来的小图标怎么做能够更加生动有趣？<br>
带着这几个灵魂拷问，今天小醒目就来跟大家聊聊关于图标那些你不得不知道事儿。</p>
</blockquote>
<h2 id="图标到底有多重要呢">图标到底有多重要呢？</h2>
<h3 id="font-colorec00111辅助文字说明font"><font color=#EC0011><strong>1.辅助文字说明</strong></font></h3>
<p>在演示设计中我们常听到一句话<code>“字不如表，表不如图”</code>，说的就是图的重要性。<br>
图标作为“图”的一种表现形式，被我们广泛应用在PPT当中，在里面充当“<strong>指示内容</strong>”的作用。<br>
其实不只是PPT设计，我们经常接触的APP界面，也是依靠图标提升用户对信息的感知度：<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421141805872-888572037.png" alt="" loading="lazy"><br>
而在PPT中，图标通常伴随短文字一起出现，达到图与文的连贯理解效果，让观众一目了然同时图标也可以<br>
<font color=#EC0011><strong>2.提升幻灯片的画面感</strong></font><br>
图标除了能够辅助文字说明之外，它还能起到一个很重要的功能就是美化幻灯片。特别在幻灯片文字比较少的时候，图标就起到很好的补充画面的作用了。<br>
比如：</p>
<h2 id="同一个图标不同的形态">同一个图标，不同的形态</h2>
<p>还是上面的文字，可以化用不同的图标<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421144222332-1254344652.png" alt="" loading="lazy"><br>
可以添加背景<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421144320947-998164506.png" alt="" loading="lazy"><br>
还可以用渐变色<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421144401693-162641480.png" alt="" loading="lazy"><br>
真香。<br>
在这里也只安利一个网站<br>
<strong>阿里巴巴矢量图标库</strong><br>
<a href="http://www.iconfont.cn/">http://www.iconfont.cn/</a><br>
这个网站是现在质量最高的图标库，里面的图标不仅<strong>数量庞大、风格统一，而且美观也能符合现在PPT设计的潮流</strong>，光这几点就可以帮我们省去很多筛选图标的时间了。<br>
此外，阿里巴巴矢量图标库还提供<strong>无限量免费下载</strong>，这对于需要在幻灯片中插入大量图标的同学来说简直是福音！<br>
在下载选项中，这个图标库还很贴心提供了自选颜色，免得同学们因为难以更改颜色而放弃一个心仪的图标。<br>
除此之外，阿里巴巴矢量图标库还提供现在主流的几种格式让大家下载，像最通用的PNG格式，以及下载后还能重新编辑的SVG/AI格式。<br>
像SVG格式，如果同学们用的是Office365的话，<strong>可以直接拖进PPT中，右键取消组合两次就可以自由编辑了</strong></p>
<h2 id="图标的颜色也很重要哦">图标的颜色也很重要哦！</h2>
<p>配色很大程度上决定了PPT长什么样子。使用阿里巴巴图标库的SVG格式导入的图标，取消组合后就可以愉快的编辑啦！<br>
自己调整完配色，就会很好看哒，比如说这两个<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421144750544-742747726.png" alt="" loading="lazy"><br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421144754888-1039444372.png" alt="" loading="lazy"></p>
<h2 id="干巴巴的图标很难看如果这样呢">干巴巴的图标很难看，如果这样呢？……</h2>
<p><img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421144854059-649202501.png" alt="" loading="lazy"><br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421144858567-1199128653.png" alt="" loading="lazy"><br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421144903504-571308095.png" alt="" loading="lazy"><br>
哇！好美！<br>
还有呢！ 这是针对深色线性或者填充图标使用的小技巧，这两种图标能给人带来简约的感觉，但看多了会觉得单调，这时候我们在图标加上一个小色块作为点缀，小图标瞬间就有点“活泼”的感觉：<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421144944374-940345378.png" alt="" loading="lazy"></p>
<h2 id="再来讲一种优化的方法长投影">再来讲一种优化的方法—长投影</h2>
<p><img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421145549721-1899127858.png" alt="" loading="lazy"><br>
先把图标备份一遍<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421150008427-2089688564.png" alt="" loading="lazy"><br>
然后放大到400%，Cmd+D（Ctrl+D）复制一个，<strong>把新复制的图标平移到原图标斜下方45°</strong>并且与原图标无限接近的位置。<br>
无限摁Cmd+D（Ctrl+D）。觉得阴影长度适合就可以停止复制粘贴了，然后我们把这份投影初稿全选，点击选项卡**“格式”——合并形状——结合**，这样我们的长投影就做好了！<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421150554413-1675544129.png" alt="" loading="lazy"></p>
<h2 id="想调整字体">想调整字体？</h2>
<p>也可以哒<br>
首先插入文本框，随便敲一点东西。<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421150702610-2064731367.png" alt="" loading="lazy"><br>
把它用个举行盖住，全部选中。<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421150754905-967436903.png" alt="" loading="lazy"><br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421151203682-798309309.png" alt="" loading="lazy"><br>
把蓝色的矩形删掉<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421151231156-144242082.png" alt="" loading="lazy"><br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200421151345352-1748480200.png" alt="" loading="lazy"><br>
wohoo！<br>
不知道大家看到这里有没有对PPT中小小的图标有个新的认识，其实图标作为一个独立的设计元素，真的值得每个PPTer去重视的，而且图标也还有很多玩法有待挖掘，比如通过虚实大小去表现内容重要程度，或者和文案结合。<br>
这期的分享就到这里了，希望对大家有所帮助，我们下期再见。</p>
<p>本篇的PPT素材请自行下载<br>
<a href="https://t.cn/A6w8PZ8L" target="_blank">让PPT变精致的秘密，都在这篇文章里-配套PPT.pptx</a><br>
密码：uu62</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[微信是个好东西，但是你会用微信多少功能呢？]]></title>
        <id>https://hesy-zhoulijie.github.io/post/wechat/</id>
        <link href="https://hesy-zhoulijie.github.io/post/wechat/">
        </link>
        <updated>2020-10-04T08:25:21.000Z</updated>
        <content type="html"><![CDATA[<h1 id="微信是个好东西但是你会用微信多少功能呢">微信是个好东西，但是你会用微信多少功能呢？</h1>
<h2 id="消息换行">消息换行</h2>
<p>用过QQ电脑版的盆友都知道QQ电脑版的换行是Ctrl+⏎（⌘⏎），但是微信呢？如果你要尝试每一行发一条消息，然后这样做，相信我他会跟你绝交的！<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200420160149382-881482535.png" alt="" loading="lazy"><br>
哼～～<br>
其实使用Shift+⏎（⇧⏎）就可以换行啦！<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200420160515526-966184494.gif" alt="" loading="lazy"><br>
而且Shift+⏎在大多数文字编辑软件中都能用滴！</p>
<h2 id="巧用收藏">巧用“收藏”</h2>
<p>首先强调一下，不论是在PC还是手机，收藏大小总共只有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi>G</mi></mrow><annotation encoding="application/x-tex">2G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault">G</span></span></span></span>！<br>
首先看看笔记<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200420161410673-2117091629.png" alt="" loading="lazy"><br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200420161346670-654408727.png" alt="" loading="lazy"><br>
同时可以添加标签进行整理<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200420161442901-1454218453.png" alt="" loading="lazy"></p>
<h2 id="更改设置">更改设置</h2>
<p><img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200420161633474-923742344.png" alt="" loading="lazy"><br>
把自己几个G的文件别存在C盘了！</p>
<h2 id="聊天中的快捷方式">聊天中的快捷方式</h2>
<ol>
<li>引用功能<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200420162412728-1346631536.png" alt="" loading="lazy"><br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200420162602282-824964079.png" alt="" loading="lazy"></li>
<li>截图工具<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200420162732618-1672646674.png" alt="" loading="lazy"></li>
</ol>
<h2 id="同步消息">同步消息</h2>
<p>经常在PC微信和手机微信间切换的伙伴一定深有感触，PC微信虽然方便，但有时候聊天记录无法同步，还是得掏出手机，来回切换十分影响效率。</p>
<p>其实微信是可以同步聊天记录的，只是不像QQ始终云端同步而已。</p>
<p>操作方法也非常简单：电脑端点击左下角，选择备份与同步。<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200420162957459-1300054884.png" alt="" loading="lazy"><br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200420163015472-830582359.png" alt="" loading="lazy"><br>
这样就OK啦！</p>
<h2 id="设置自带表情包的昵称">设置自带表情包的昵称</h2>
<p>相信大家平时在微信群聊的时候都遇到过这种情况，@某人时居然会有表情掉落！这个看似神奇的操作，其实并不复杂，设置起来非常简单，只需要在自己的昵称后面添加一些后缀就可以了。常见的有这些</p>
<pre><code>么么哒： จุ๊บ
星星代码：ฉันคิดถึง
蛋糕：สุขสันต์วันเกิด
</code></pre>
<h2 id="一些损人的技巧">一些损人的技巧</h2>
<pre><code>//fullexit
</code></pre>
<p>（发送出去）强制退出微信登录</p>
<pre><code>:recover
</code></pre>
<p>搜索它，会跳出一个“微信修复工具”<br>
<img src="https://img2020.cnblogs.com/blog/2006459/202004/2006459-20200420165124162-517311647.png" alt="" loading="lazy"><br>
就像这样（多平台适用）<br>
这里还是有很多骚操作的！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[博客阅读指北]]></title>
        <id>https://hesy-zhoulijie.github.io/post/PjSoP3sCF/</id>
        <link href="https://hesy-zhoulijie.github.io/post/PjSoP3sCF/">
        </link>
        <updated>2020-10-04T08:24:26.000Z</updated>
        <summary type="html"><![CDATA[<p>点击这个“归档”查看所有文章<br>
不要点进来。。。</p>
]]></summary>
        <content type="html"><![CDATA[<p>点击这个“归档”查看所有文章<br>
不要点进来。。。</p>
<!-- more -->
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[文件共享方法总结]]></title>
        <id>https://hesy-zhoulijie.github.io/post/file_share/</id>
        <link href="https://hesy-zhoulijie.github.io/post/file_share/">
        </link>
        <updated>2020-10-04T08:23:00.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="文件共享方法总结">文件共享方法总结</h1>
<h2 id="写在前面">写在前面</h2>
<p>笔者家中有2台电脑，但是在两台电脑之间共享文件是一个很麻烦的事情，所以通过对Win10和Mac OS X 13的充分研究整理，完成了本份攻略</p>
]]></summary>
        <content type="html"><![CDATA[<h1 id="文件共享方法总结">文件共享方法总结</h1>
<h2 id="写在前面">写在前面</h2>
<p>笔者家中有2台电脑，但是在两台电脑之间共享文件是一个很麻烦的事情，所以通过对Win10和Mac OS X 13的充分研究整理，完成了本份攻略</p>
<!-- more -->
<h2 id="方法1-自带文件共享">方法1 自带文件共享</h2>
<p>效果：<img src="https://i.loli.net/2019/12/17/mYUF8AODsBepxbn.png" alt="未命名.png" loading="lazy"><br>
这种方法在Windows上的实现方法：<br>
<img src="https://i.loli.net/2019/12/17/LsAIhifvFtZoxDU.png" alt="image.png" loading="lazy"><br>
<img src="https://i.loli.net/2019/12/17/wGTiW6d1PpNrOvU.png" alt="image.png" loading="lazy"><br>
<img src="https://i.loli.net/2019/12/17/bEdqupQrHKXiyzs.png" alt="image.png" loading="lazy"><br>
然后到Mac上<br>
<img src="https://i.loli.net/2019/12/17/KhGbld8wWL9IJuQ.jpg" alt="Inked未命名_LI.jpg" loading="lazy"><br>
但是IP地址在每台电脑上都不一样<br>
所以我们就需要<s>金坷垃</s>ipconfig!<br>
<img src="https://i.loli.net/2019/12/17/xH7OIKiJWkRTdsz.png" alt="image.png" loading="lazy"><br>
具体的IP取决于你用的网络连接种类，如果是以太网就看以太网的，WLAN就看WLAN的。<br>
然后在Mac上点进去，输入用户名和<strong>密码</strong>，** <em>这里要输入的是密码，不是PIN！！！</em> **</p>
<p>然后直接Ctrl+C，Ctrl+V进行复制粘帖就可以啦！！！</p>
<hr>
<h2 id="方法2-远程登陆">方法2 远程登陆</h2>
<p>首先在Mac的<img src="https://i.loli.net/2019/12/17/pNwKfSB83XvIyor.jpg" alt="Inked未命名_LI.jpg" loading="lazy">找到“请键入“<code>ssh ***.***.***.***@******</code>的东西”<br>
然后到<strong>Powershell</strong>里面打开就可以了。<br>
反过来，用方法一中的本地ip也可以</p>
<!-- more -->
<p>在Mac上用ssh登陆Windows</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[调整软件设置，让 PPT 更符合你的使用习惯]]></title>
        <id>https://hesy-zhoulijie.github.io/post/powerpoint-usage/</id>
        <link href="https://hesy-zhoulijie.github.io/post/powerpoint-usage/">
        </link>
        <updated>2020-10-04T08:21:59.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="调整软件设置让-ppt-更符合你的使用习惯">调整软件设置，让 PPT 更符合你的使用习惯</h1>
]]></summary>
        <content type="html"><![CDATA[<h1 id="调整软件设置让-ppt-更符合你的使用习惯">调整软件设置，让 PPT 更符合你的使用习惯</h1>
<!-- more -->
<h2 id="幻灯片大小">幻灯片大小</h2>
<p>幻灯片大小分成<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>种，可以自定义的哦。<br>
<img src="https://s1.ax1x.com/2020/04/17/JVkJT1.png" alt="JVkJT1.png" loading="lazy"><br>
我这里用的是Mac版本的Office365，Windows应该<s>绝对</s>差不多<br>
<img src="https://s1.ax1x.com/2020/04/17/JVkNY6.png" alt="JVkNY6.png" loading="lazy"><br>
从这里可以发现，各种大小都可以，所以建议大家按照需求进行自定义。<br>
此外，如果你的 PPT 有其他需求，也可以选择「自定义幻灯片大小」。里面除了可以设置「信纸」、「A4 纸张」或「横幅」等特别的格式大小以外，也可以自定义幻灯片的宽度和高度，以及调整幻灯片或备注的方向（纵向、横向）等。<br>
关键来了，有的时候你需要在编辑时调整大小，就会看到这个窗口<br>
<img src="https://s1.ax1x.com/2020/04/17/JVAih6.png" alt="JVAih6.png" loading="lazy"><br>
建议大家选择缩放。</p>
<h2 id="字体">字体</h2>
<p>Office系列的默认字体是等线，但是这种字体实在是太丑了！<br>
我们可以通过万能的百度下载到无数的字体，但是PPT的时候还是需要一个个修改，让人苦不堪言。<br>
有没有想Keynote的字体更改工具呢？那是当然。<br>
在我的版本中，可以直接使用字体更改工具。<br>
<img src="https://s1.ax1x.com/2020/04/17/JVVwlT.png" alt="JVVwlT.png" loading="lazy"><br>
但是有人没有这个功能啊，怎么办呢？<br>
<a href="https://imgchr.com/i/JVV4XD"><img src="https://s1.ax1x.com/2020/04/17/JVV4XD.md.png" alt="JVV4XD.md.png" loading="lazy"></a><br>
可以使用字体更改器，在设计里点“变体”，下面就有字体选项卡了。<br>
在这里找到自己喜欢的字体。我比较喜欢这个<br>
<img src="https://s1.ax1x.com/2020/04/17/JVZbb4.png" alt="JVZbb4.png" loading="lazy"><br>
更重要的是，这里一旦更改完，你插入的所有字体都是这个！</p>
<h2 id="颜色">颜色</h2>
<p>和字体差不多，在同一个地方还有“颜色”的选项卡，颜色同时可以自定义的哦。<br>
<img src="https://s1.ax1x.com/2020/04/17/JVeGin.png" alt="JVeGin.png" loading="lazy"><br>
比如说上面```Custom``就是我自定义的哦。</p>
<h2 id="快速访问工具栏">快速访问工具栏</h2>
<p>很多人都抱怨过Powerpoint没有自定义的功能，其实是你不知道在哪里。<br>
<img src="https://s1.ax1x.com/2020/04/17/JVeLy8.png" alt="JVeLy8.png" loading="lazy"><br>
就是这里！！！（在最上面）<br>
点开最右边的按钮<img src="https://s1.ax1x.com/2020/04/17/JVmw1P.png" alt="JVmw1P.png" loading="lazy"><br>
<img src="https://s1.ax1x.com/2020/04/17/JVmtkd.png" alt="JVmtkd.png" loading="lazy"><br>
这里可以把自己喜欢的小功能添加在这里<br>
当你添加的功能稍微多了点，就会发现窗口上方挤着一整列工具，且使用时还得将鼠标移到窗口上方，颇不方便。<br>
此时，你可以拉开「快速访问工具栏」最右边的选单「自定义快速访问工具栏 - 在功能区下方显示」，就可以将这一列工具移到功能区的下方了。<br>
备注：只支持Windows！！！<br>
在设置好「快速访问工具栏」之后，你可以在「其他命令 - 导入/导出」，把专属于你的「快速访问工具栏」导出自定义文件。<br>
这可以让你在另一台计算机使用 PPT 时，能够直接导入文件，而不用再重新设置「快速访问工具栏」。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用macOS Catalina的面板编辑器进行便捷控制]]></title>
        <id>https://hesy-zhoulijie.github.io/post/面板编辑器/</id>
        <link href="https://hesy-zhoulijie.github.io/post/面板编辑器/">
        </link>
        <updated>2020-10-04T08:20:47.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="使用macos-catalina的面板编辑器进行便捷控制">使用macOS Catalina的面板编辑器进行便捷控制</h1>
]]></summary>
        <content type="html"><![CDATA[<h1 id="使用macos-catalina的面板编辑器进行便捷控制">使用macOS Catalina的面板编辑器进行便捷控制</h1>
<!-- more -->
<h2 id="面板编辑器入门">面板编辑器入门</h2>
<h3 id="1-什么是面板编辑器">1. 什么是面板编辑器</h3>
<p>面板编辑器是用来自定义面板（虚拟键盘）的。<br>
路径：<br>
/System/Library/Input Me thods/Assistive Control.app/Contents/Resources/Panel Editor.app<br>
重要！！！只有macOS Catalina有！！！<br>
重要！！！只有macOS Catalina有！！！<br>
重要！！！只有macOS Catalina有！！！</p>
<h3 id="2如何使用">2.如何使用</h3>
<p><img src="https://i.loli.net/2020/04/16/RBFh1g2DoQwvxbl.png" alt="" loading="lazy"><br>
沿袭了Mac软件简单易懂的优良品质，可以直接用的哦！（是不是很香）<br>
按左上角的添加面板就可以了。<br>
因为面板不能直接链接到软件的菜单，只支持这些<br>
<img src="https://i.loli.net/2020/04/16/wcWHokF39tvQrDX.png" alt="image.png" loading="lazy"><br>
于是我们需要先添加快捷键然后才能添加。<br>
关于如何添加快捷键，请参考文章<code>Mac如何自定义快捷键</code><a href="https://www.cnblogs.com/sweepy/p/create-keyboard-shortcut-on-mac.html">传送门</a><br>
完成快捷键添加后，这里我以<code>前往桌面</code>来举例子<br>
<img src="https://i.loli.net/2020/04/16/9ZGQjHz1eFxCiD3.png" alt="image.png" loading="lazy"><br>
<img src="https://i.loli.net/2020/04/16/HYqEfjOnTCUJ9ie.png" alt="image.png" loading="lazy"><br>
在<code>操作</code>中选中<code>按下按键</code>，输入快捷键<code>⇧⌘D</code>(Shift+Command+D)<br>
点击保存，然后就可以用啦！哦，别忘了，记得选中在那些应用中有效（上面）哦<br>
打开虚拟键盘后，点击左上角的设置按钮，在自定面板中找到你刚刚用的名字的选项，然后就大功告成啦！<br>
<img src="https://i.loli.net/2020/04/16/pwvum9cWfIqDFQL.gif" alt="未命名.gif" loading="lazy"></p>
<h2 id="高级控制">高级控制</h2>
<p>可以通过macOS的辅助功能进行高级控制，比如启动进程，系统事件（下图）等等。<br>
<img src="https://i.loli.net/2020/04/16/Wpy58HOutwXxmPr.png" alt="image.png" loading="lazy"><br>
同时也支持打开App，运行Applescript等等，简单来说，啥都支持。</p>
<h2 id="使用案例">使用案例</h2>
<p>这是我在使用腾讯课堂的时候用的面板<br>
<img src="https://i.loli.net/2020/04/16/VnGTYZzhOMiQ3Xe.png" alt="image.png" loading="lazy"><br>
其他的功能会陆续更新</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac如何自定义快捷键]]></title>
        <id>https://hesy-zhoulijie.github.io/post/mac-shortcut/</id>
        <link href="https://hesy-zhoulijie.github.io/post/mac-shortcut/">
        </link>
        <updated>2020-10-04T08:19:16.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="mac如何自定义快捷键">Mac如何自定义快捷键</h1>
]]></summary>
        <content type="html"><![CDATA[<h1 id="mac如何自定义快捷键">Mac如何自定义快捷键</h1>
<!-- more -->
<h2 id="写在前面">写在前面</h2>
<p>本页面使用sm.ms图床，网速比较慢，大约需要加载5秒，请稍后。<br>
Mac上不像Windows有很方便的定义快捷键的工具，于是我们就需要通过系统偏好设置来自定义。</p>
<h1 id="mac如何自定义快捷键-2">Mac如何自定义快捷键</h1>
<h2 id="写在前面-2">写在前面</h2>
<p>本页面使用sm.ms图床，网速比较慢，大约需要加载5秒，请稍后。<br>
Mac上不像Windows有很方便的定义快捷键的工具，于是我们就需要通过系统偏好设置来自定义。</p>
<h2 id="第一步进入需要自定义的应用">第一步：进入需要自定义的应用</h2>
<p>这里举个例子，我要在Microsoft word里添加一个绘制横排文本框的快捷键：⌘+t<br>
首先我在菜单中找到“文本框”<br>
<img src="https://i.loli.net/2020/04/16/YwisFhc83tbGNyk.png" alt="image.png" loading="lazy"><br>
一定要记住他的名字！！！</p>
<h2 id="第二步打开系统偏好设置">第二步：打开系统偏好设置</h2>
<p><img src="https://i.loli.net/2020/04/16/JyFHq9AfLcbIe67.png" alt="image.png" loading="lazy"><br>
<img src="https://i.loli.net/2020/04/16/RhgC2YB1Gmq9vDj.png" alt="image.png" loading="lazy"><br>
<img src="https://i.loli.net/2020/04/16/wNTpr2EHjKRsLJ1.png" alt="image.png" loading="lazy"><br>
<img src="https://i.loli.net/2020/04/16/cOjRJYCkGmeM75P.png" alt="image.png" loading="lazy"><br>
这样就OK了<br>
来看看效果（关注左下角软键盘）<br>
<img src="https://i.loli.net/2020/04/16/lNq1pWGk359DH6X.gif" alt="未命名.gif" loading="lazy"><br>
是不是很香！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ Keynote完全指南]]></title>
        <id>https://hesy-zhoulijie.github.io/post/keynote/</id>
        <link href="https://hesy-zhoulijie.github.io/post/keynote/">
        </link>
        <updated>2020-10-04T08:18:14.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="keynote完全指南">Keynote完全指南</h1>
<figure data-type="image" tabindex="1"><img src="https://i.loli.net/2020/04/15/NSrHlL1U7c89suP.png" alt="image.png" loading="lazy"></figure>
]]></summary>
        <content type="html"><![CDATA[<h1 id="keynote完全指南">Keynote完全指南</h1>
<figure data-type="image" tabindex="1"><img src="https://i.loli.net/2020/04/15/NSrHlL1U7c89suP.png" alt="image.png" loading="lazy"></figure>
<!-- more -->
<h2 id="如何用keynote做一个ppt">如何用keynote做一个PPT</h2>
<p>首先打开Keynote软件,会看到这样的界面.<br>
<img src="https://i.loli.net/2020/04/15/fRpALQ9ydzglcsx.png" alt="image.png" loading="lazy"><br>
点击新建文稿, 这模板多得可以啊.<br>
<img src="https://i.loli.net/2020/04/15/Xou7MvLzI6ncaAl.png" alt="image.png" loading="lazy"><br>
我就随便选一个.<br>
<img src="https://i.loli.net/2020/04/15/ST81lrK7M3Q5ZnC.png" alt="image.png" loading="lazy"><br>
主界面和Microsoft Powerpoint差不多呢!<br>
打开来:字体很漂亮,但是没法看啊(QaQ)<br>
所以,第一步: <strong>更改字体</strong><br>
<img src="https://i.loli.net/2020/04/15/WeAHqywCZXkEo6P.png" alt="image.png" loading="lazy"><br>
这里可以把全PPT的主题字体修改成自己想要的<br>
<img src="https://i.loli.net/2020/04/15/RhF9bWxV38HcCAj.png" alt="image.png" loading="lazy"><br>
这样就好看多了吧<br>
<img src="https://i.loli.net/2020/04/15/3J1cmV49MGDrKXI.png" alt="image.png" loading="lazy"></p>
<hr>
<p>接下来看看有什么样的版式呢?<br>
<img src="https://i.loli.net/2020/04/15/lHMFiOLsEcxGVr7.png" alt="image.png" loading="lazy"><br>
每个模板都有这些版式的哦<br>
接下来就可以开始写了</p>
<hr>
<p>突然发现,这里好像不能直接画图形诶???<br>
<img src="https://i.loli.net/2020/04/15/GuYrKQDojebklXn.png" alt="image.png" loading="lazy"><br>
<img src="https://i.loli.net/2020/04/15/GTjWakch3RKmJ9o.png" alt="image.png" loading="lazy"><br>
是的,每一次新建一个图形就会给你画出一个1:1的这个图形<br>
如果插入了图像也不要紧<br>
<img src="https://i.loli.net/2020/04/15/JH1bPzMn6riwpRZ.png" alt="image.png" loading="lazy"><br>
<img src="https://i.loli.net/2020/04/15/TOz1tdwZW8bejxG.png" alt="image.png" loading="lazy"><br>
都可以完成编辑. 这里的编辑遮罩就相当于裁剪啦<br>
<img src="https://i.loli.net/2020/04/15/MXqnbA7Y2Bp9j8D.png" alt="image.png" loading="lazy"></p>
<hr>
<p>Keynote也同样支持插入图表<br>
<img src="https://i.loli.net/2020/04/15/SLKdnv14rqNyEP7.png" alt="image.png" loading="lazy"><br>
而且很好看,最重要的就是他不需要打开另外的软件就可以编辑数据!!! 他不需要打开另外的软件就可以编辑数据!!! 他不需要打开另外的软件就可以编辑数据!!!<br>
<img src="https://i.loli.net/2020/04/15/FhZ2fCNnijoJIK5.png" alt="image.png" loading="lazy"><br>
是不是很香?</p>
<h2 id="如何添加动画">如何添加动画???</h2>
<blockquote>
<p>Keynote的动画比Powerpoint的好一百倍!<br>
<img src="https://i.loli.net/2020/04/15/jeKER9pc3DwQAtI.png" alt="image.png" loading="lazy">(进入动画)<br>
<img src="https://i.loli.net/2020/04/15/j9IWiJ3h7rHVxBv.png" alt="image.png" loading="lazy">(强调动画)<br>
<img src="https://i.loli.net/2020/04/15/FpIJlWCd9fzNOub.png" alt="image.png" loading="lazy">(退出动画)<br>
哇! 太帅了!!!<br>
每个效果都有不同的选项<br>
举个例子🌰<br>
<img src="https://i.loli.net/2020/04/15/LeRkyjIrXZ1tDAi.png" alt="image.png" loading="lazy"><br>
<img src="https://s1.ax1x.com/2020/04/15/JC3h90.gif" alt="JC3h90.gif" loading="lazy"><br>
香不香???<br>
各种动画都很酷炫<br>
<img src="https://s1.ax1x.com/2020/04/15/JC8FUA.gif" alt="JC8FUA.gif" loading="lazy"><br>
比如这个<br>
<img src="https://s1.ax1x.com/2020/04/15/JCYRqU.gif" alt="JCYRqU.gif" loading="lazy"><br>
总共只有一个动画,叫做神奇移动<br>
<img src="https://s1.ax1x.com/2020/04/15/JCtFL8.png" alt="JCtFL8.png" loading="lazy"><br>
我肯定没吭你<br>
这里的坑很深,不是一天两天能讲清楚的. 大家可以在bilibili上搜索关于keynote动画的更详细内容</p>
</blockquote>
<h2 id="如何演示keynote">如何演示keynote</h2>
<p>因为keynote所有专门的动画都必须要用<code>.key</code>文件才能放映,但是只有Mac有keynote,于是我们有三种方法进行分享</p>
<ol>
<li>iCloud<br>
将文件上传到iCloud,可以在网页端直接编辑,也可以远程下载或者放映</li>
<li>Keynote Live<br>
支持在本地放映云端观看<br>
<img src="https://s1.ax1x.com/2020/04/15/JCtRSI.png" alt="JCtRSI.png" loading="lazy"><br>
<img src="https://s1.ax1x.com/2020/04/15/JCt7kQ.png" alt="JCt7kQ.png" loading="lazy"><br>
<img src="https://s1.ax1x.com/2020/04/15/JCNuAe.png" alt="JCNuAe.png" loading="lazy"><br>
然后就可以远程观看了,只不过观看端加载很慢<br>
观看端是这样的<br>
<img src="https://s1.ax1x.com/2020/04/15/JCUk5Q.png" alt="JCUk5Q.png" loading="lazy"><br>
记得放映的时候要选择上面的那个选项哦<br>
<img src="https://s1.ax1x.com/2020/04/15/JCaQyt.png" alt="JCaQyt.png" loading="lazy"></li>
<li>导出视频<br>
<img src="https://s1.ax1x.com/2020/04/15/JCawyq.png" alt="JCawyq.png" loading="lazy"><br>
在这里选择导出格式和时间控制然后直接打开视频文件就OK啦!!!</li>
</ol>
<h2 id="最后">最后</h2>
<p>PPT可以直接在Keynote里打开,替换字体就很香了. 其他的教程我会陆续发在这里. 百度上有很多的keynote模板,可以自行下载.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ GitHub博客+gridea的搭建指南]]></title>
        <id>https://hesy-zhoulijie.github.io/post/Gridea/</id>
        <link href="https://hesy-zhoulijie.github.io/post/Gridea/">
        </link>
        <updated>2020-10-04T08:17:50.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="github博客gridea的搭建指南">GitHub博客+gridea的搭建指南</h1>
]]></summary>
        <content type="html"><![CDATA[<h1 id="github博客gridea的搭建指南">GitHub博客+gridea的搭建指南</h1>
<!-- more -->
<h2 id="系统环境">系统环境</h2>
<p>macOS Sierra+</p>
<p>Win7+</p>
<h2 id="github部分">GitHub部分</h2>
<p>首先注册GitHub账号<br>
<img src="https://i.loli.net/2020/04/14/3cuKp4yDrwVbJAH.png" alt="image.png" loading="lazy"><br>
然后进入这个仓库<br>
<img src="https://i.loli.net/2020/04/14/7Ka82Yu5qNoljxP.png" alt="image.png" loading="lazy">（这是我的仓库）</p>
<hr>
<h2 id="接着打开grieda">接着打开Grieda</h2>
<p>先点远程，在这里输入自己的账户信息<br>
<img src="https://i.loli.net/2020/04/14/HMDdJ7tSgpkAbav.png" alt="image.png" loading="lazy"><br>
然后直接点击新建就可以愉快的写作了<br>
最后点发布，OK了！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[高效使用Chrome浏览器，你可能不知道的10个技巧。]]></title>
        <id>https://hesy-zhoulijie.github.io/post/Chrome浏览器/</id>
        <link href="https://hesy-zhoulijie.github.io/post/Chrome浏览器/">
        </link>
        <updated>2020-10-04T08:15:55.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="高效使用chrome浏览器你可能不知道的10个技巧">高效使用Chrome浏览器，你可能不知道的10个技巧。</h1>
]]></summary>
        <content type="html"><![CDATA[<h1 id="高效使用chrome浏览器你可能不知道的10个技巧">高效使用Chrome浏览器，你可能不知道的10个技巧。</h1>
<!-- more -->
<h2 id="转载自-工具狂人">转载自 工具狂人</h2>
<blockquote>
<p>浏览器，是通向精彩网络世界的一个重要通道，基于此，它也占据了电脑的大部分使用时间。<br>
为增强浏览器的功能，我们会为它安装各种插件，但其实除了从外部的插件入手，我们还可以通过掌握一些浏览器使用技巧，来提升其使用效率。因此，今天的这篇文章，我从使用浏览器可能会遇到的问题出发，整理了一些对应的解决方法，希望对你有帮助。</p>
</blockquote>
<ol>
<li>另存为PDF<br>
以保存微信公众号文章为例，在浏览器中打开文章，右击页面，选择「打印」。在弹出的窗口中，将「目标打印机」更改为「另存为 PDF」。更改为另存为 PDF 后，下方的按钮会由「打印」自动更改为「保存」，点击保存，就可以 PDF 文件的格式保存网页内容。<br>
<img src="https://i.loli.net/2020/04/15/q7tlNIQWucm6kUp.gif" alt="未命名.gif" loading="lazy"></li>
<li>网页存档<br>
除了将网页保存为 PDF 文档，我们还可以将网页保存为它原本的格式「HTML」。在网页的空白处右击页面，选择「另存为」，保存格式可选择 mhtml 或 html，区别在于： 保存为 html 会额外生成一个文件夹，而 mhtml 会将所有元素保存在同一个文件中。<br>
<img src="https://i.loli.net/2020/04/15/EFZI6J7f5R24rnx.png" alt="image.png" loading="lazy"></li>
<li>使用剪藏<br>
为方便在不同设备间查看保存的网页内容，我最常使用的方法，还是将内容保存到笔记软件中。<br>
对于电脑端的浏览器，将网页内容保存到笔记软件，需要先安装对应的浏览器插件，如印象笔记的「Clip to Evernote」或有道云笔记的「有道云笔记网页剪报」。<br>
<img src="https://i.loli.net/2020/04/15/LEZV17XyWxsO2wH.png" alt="image.png" loading="lazy"></li>
<li>网页长截图(Chrome内核专用)<br>
和使用手机一样，在电脑上浏览网页，有时也存在截取长图的需求。<br>
除了为电脑安装第三方截图软件，其实我们还可以使用浏览器自带的功能，来获取长截图。<br>
使用 F12 打开浏览器「开发者工具」，使用快捷键 Ctrl + Shift + P 打开命令面板，输入「full」，下方会返回「捕获全屏」的命令。<br>
点击运行命令「Capture full size screenshot」，就可以得到当前网页的长截图。<br>
<img src="https://i.loli.net/2020/04/15/CTiOmH76pwlebtD.gif" alt="未命名.gif" loading="lazy"></li>
<li>解除禁止🈲️复制<br>
有些网站出于保护内容的目的，如 B 站的部分专栏文章等，会将网站的内容设置为禁止复制。<br>
除去侵犯他人权益的动机，有时我们复制一些内容，纯粹是出于学习或交流的目的。<br>
对于禁止复制的内容，我们最常用的应对方法可能是截图，除此外，我们还可以使用两种方法来解除网站的禁止复制。<br>
a)	关闭javascript<br>
使用 F12打开浏览器「开发者工具」，点击开发者工具右上角的「 ⋮ 」按钮，选择「Settings」。在打开的页面中，找到 Debugger 下的「Disable JavaScript」选项，将其暂时勾选，禁用浏览器的脚本功能。此时，使用 F5 刷新当前网页，原本不支持复制的内容就可以随意复制了。<br>
<img src="https://i.loli.net/2020/04/15/Cf8GIBkDNAws4bn.png" alt="image.png" loading="lazy"></li>
</ol>
<figure data-type="image" tabindex="1"><img src="https://i.loli.net/2020/04/15/47Y3Twue8OPDMqL.png" alt="image.png" loading="lazy"></figure>
<p>b)	复制HTML<br>
复制 HTML 中的文本内容，仍然需要用到「开发者工具」，打开之后，点击左上角的「箭头」图标，切换到元素选择工具。<br>
切换到选择工具后，将鼠标移动到你想复制的内容上方并单击，在右侧的开发者工具窗口，可以看到当前文本在 HTML 中的位置，双击文本内容，右键选择「复制」。<br>
如此一来，通过这种方法，也能解除网页禁止复制的限制。<br>
6.	Chrome的实验性功能flags<br>
首先声明，这里的 flags 并不是你年初立下的各种 flags，它指的是 Chrome 处于实验阶段的功能，大部分功能还未在正式发布的 Chrome 中启用。在 Chrome 地址栏中，输入 chrome://flags ，打开的页面就可以看到 Chrome 的所有实验性功能。这个页面不支持chrome自带的翻译,所以需要安装插件进行翻译哦<br>
<img src="https://i.loli.net/2020/04/15/eYgMA1GLWq5FHCV.png" alt="image.png" loading="lazy"><br>
7.	网址前后缀添加<br>
a)	下载油管video<br>
<code>https://www.youtube.com/...=&gt; https://www.ssyoutube.com/...</code><br>
b)	下载B站视频</p>
<pre><code>https://www.bilibili.com/...=&gt;https://www.ibilibili.com/... 
                       =&gt;https://www.bilibilijj.com/...
</code></pre>
<p>c)	各种工具</p>
<pre><code>https://*.*/...=&gt;https://wn.run/*.*/,,,
eg. https://www.bilibili.com/* =&gt;https://wn.run/www.bilbili.com/*
</code></pre>
<ol start="8">
<li>写在最后<br>
本文介绍的一些技巧，如解除网页禁止复制、下载网站视频，如果用于不正当用途，会存在侵犯他人权益的可能，建议使用时仅出于学习和交流的目的。<br>
除了本文介绍的内容，你还知道浏览器的其他使用技巧吗？ 欢迎在留言区与大家分享。<br>
以上，就是本次想和你分享的内容。</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://hesy-zhoulijie.github.io/post/hello-gridea/</id>
        <link href="https://hesy-zhoulijie.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>